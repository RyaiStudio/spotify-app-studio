{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth.guard.ts","webpack:///src/app/auth/auth.service.ts","webpack:///src/app/components/built-with/built-with.component.ts","webpack:///src/app/components/built-with/built-with.component.html","webpack:///src/app/components/edit-playlist-btn/edit-playlist-btn.component.html","webpack:///src/app/components/edit-playlist-btn/edit-playlist-btn.component.ts","webpack:///src/app/components/edit-playlist-btn/utils.ts","webpack:///src/app/components/figure-image/figure-image.component.ts","webpack:///src/app/components/figure-image/figure-image.component.html","webpack:///src/app/components/follow-btn-playlist/follow-btn-playlist.component.html","webpack:///src/app/components/follow-btn-playlist/follow-btn-playlist.component.ts","webpack:///src/app/components/follow-btn/follow-btn.component.ts","webpack:///src/app/components/follow-btn/follow-btn.component.html","webpack:///src/app/components/grid-playlist/grid-playlist.component.ts","webpack:///src/app/components/grid-playlist/grid-playlist.component.html","webpack:///src/app/components/playlist-item/playlist-item.component.ts","webpack:///src/app/components/playlist-item/playlist-item.component.html","webpack:///src/app/components/playlist-track/playlist-track.component.html","webpack:///src/app/components/playlist-track/playlist-track.component.ts","webpack:///src/app/components/recommendation-form/recommendation-form.component.html","webpack:///src/app/components/recommendation-form/recommendation-form.component.ts","webpack:///src/app/components/recommendation-form/utils.ts","webpack:///src/app/components/spinner/spinner.component.ts","webpack:///src/app/components/spinner/spinner.component.html","webpack:///src/app/components/token-expiration-modal/token-expiration-modal.component.html","webpack:///src/app/components/token-expiration-modal/token-expiration-modal.component.ts","webpack:///src/app/components/track-item/track-item.component.ts","webpack:///src/app/components/track-item/track-item.component.html","webpack:///src/app/interceptors/error-handler.interceptor.ts","webpack:///src/app/interceptors/http-headers.interceptor.ts","webpack:///src/app/interceptors/index.ts","webpack:///src/app/interceptors/utils.ts","webpack:///src/app/pages/artist-preview/artist-preview.component.html","webpack:///src/app/pages/artist-preview/artist-preview.component.ts","webpack:///src/app/pages/audio-feature/audio-feature.component.html","webpack:///src/app/pages/audio-feature/audio-feature.component.ts","webpack:///src/app/pages/callback/callback.component.ts","webpack:///src/app/pages/callback/callback.component.html","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/pages/main/main-routing.module.ts","webpack:///src/app/pages/main/main.component.html","webpack:///src/app/pages/main/main.component.ts","webpack:///src/app/pages/main/main.module.ts","webpack:///src/app/pages/my-playlist/my-playlist.component.html","webpack:///src/app/pages/my-playlist/my-playlist.component.ts","webpack:///src/app/pages/playlist-preview/playlist-preview.component.ts","webpack:///src/app/pages/playlist-preview/playlist-preview.component.html","webpack:///src/app/pages/recommendation/recommendation.component.ts","webpack:///src/app/pages/recommendation/recommendation.component.html","webpack:///src/app/pages/top-artists/top-artists-util.ts","webpack:///src/app/pages/top-artists/top-artists.component.html","webpack:///src/app/pages/top-artists/top-artists.component.ts","webpack:///src/app/pages/top-tracks/top-tracks-util.ts","webpack:///src/app/pages/top-tracks/top-tracks.component.html","webpack:///src/app/pages/top-tracks/top-tracks.component.ts","webpack:///src/app/services/artist-preview/artist-preview.service.ts","webpack:///src/app/services/artist-top-tracks/artist-top-tracks.service.ts","webpack:///src/app/services/audio-feature/audio-feature.service.ts","webpack:///src/app/services/follow/follow.service.ts","webpack:///src/app/services/index.ts","webpack:///src/app/services/my-playlist/my-playlist.service.ts","webpack:///src/app/services/related-artists/related-artists.service.ts","webpack:///src/app/services/top-artists/top-artists.service.ts","webpack:///src/app/services/top-tracks/top-tracks.service.ts","webpack:///src/app/shared.module.ts","webpack:///src/app/store/artist-preview/actions.type.ts","webpack:///src/app/store/artist-preview/selectors.ts","webpack:///src/app/store/artist-preview/state.ts","webpack:///src/app/store/artist-top-tracks/actions.type.ts","webpack:///src/app/store/artist-top-tracks/selectors.ts","webpack:///src/app/store/artist-top-tracks/state.ts","webpack:///src/app/store/audio-feature/actions.type.ts","webpack:///src/app/store/audio-feature/selectors.ts","webpack:///src/app/store/audio-feature/state.ts","webpack:///src/app/store/current-user/actions.type.ts","webpack:///src/app/store/current-user/selectors.ts","webpack:///src/app/store/current-user/state.ts","webpack:///src/app/store/follow/actions.type.ts","webpack:///src/app/store/follow/artists-state.ts","webpack:///src/app/store/follow/selectors.ts","webpack:///src/app/store/index.ts","webpack:///src/app/store/internal/actions.type.ts","webpack:///src/app/store/internal/selectors.ts","webpack:///src/app/store/internal/state.ts","webpack:///src/app/store/my-playlist/actions.type.ts","webpack:///src/app/store/my-playlist/selectors.ts","webpack:///src/app/store/my-playlist/state.ts","webpack:///src/app/store/playlist-preview/actions.type.ts","webpack:///src/app/store/playlist-preview/selectors.ts","webpack:///src/app/store/playlist-preview/state.ts","webpack:///src/app/store/recommendation/actions.type.ts","webpack:///src/app/store/recommendation/selectors.ts","webpack:///src/app/store/recommendation/state.ts","webpack:///src/app/store/related-artists/actions.type.ts","webpack:///src/app/store/related-artists/selectors.ts","webpack:///src/app/store/related-artists/state.ts","webpack:///src/app/store/top-artists/actions.type.ts","webpack:///src/app/store/top-artists/selectors.ts","webpack:///src/app/store/top-artists/state.ts","webpack:///src/app/store/top-tracks/actions.type.ts","webpack:///src/app/store/top-tracks/selectors.ts","webpack:///src/app/store/top-tracks/state.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","loadChildren","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","developmentMode","production","declarations","providers","bootstrap","AuthGuard","authService","router","next","state","isAuthenticated","accessTokenChecker","navigate","providedIn","AuthService","http","store","token","localStorage","getItem","state$","generateRandomString","setItem","scope$","window","location","href","response_type","client_id","scope","toString","replace","redirect_uri","dispatch","length","text","possible","i","charAt","Math","floor","random","Authorization","btoa","client_secret","headers","authHttpHeaders","params","set","post","spotify_api_token","refreshToken","get","spotify_api","accessToken","times","cons$","parseInt","BuiltWithComponent","faSpotify","faAngular","faGithub","faPlus","EditPlaylistBtnComponent","FB","inputErrors","req$","toast","faPen","isActive","playlistPreview","playlistId","FetchPlaylistPreview","editForm","group","name","playlist","required","minLength","description","isSubmited","valid","form","value","dataObj","sink","editPlaylistDetails","subscribe","res","fire","icon","err","unsubscribe","controls","editPlaylist","savePlaylist","errors","error","label","FigureImageComponent","FollowBtnPlaylistComponent","follow","fetchMyPlaylist","qry","FetchPlaylist","Toast","swalFire","faTrash","faTrashRestoreAlt","putRequest$","ifFollowText","playlistCollection","currentUser","filter","isFollowed","stat","msg","options","imageUrl","images","url","confirmButtonText","result","unFollowPlaylist","toastCall","limit","input","inputOptions","followPlaylist","isMyPlaylist","unFollowUserPlaylist","owner","isPublic","followUserPlaylist","FollowBtnComponent","fetchFollowArtists","FetchFollowArtists","$isFollowed","$unfollowHover","fil","following","artist","followArtist","unFollowArtist","GridPlaylistComponent","route","faEye","defaultImage","image","n","PlaylistItemComponent","console","log","snapshot","PlaylistTrackComponent","faPlay","faTimes","event","config","currentPage","track","removeItem","JSON","stringify","album","artists","popularity","external_urls","item","img","removePlaylistItem","tracks","uri","RecommendationFormComponent","reqPlaylist$","isRecomCreated","parse","recomForm","playlist$","play","collect","items","isRecomExist","user","recom","uris","map","isModalActive","userId","formObj","createPlaylist","pushCollection","setLocalStorage","isSubmitted","setTimeout","recomString","recommendation","pushTracksToPlaylist","fetchPlaylist","SpinnerComponent","TokenExpirationModalComponent","auth","reqAuth$","faWarning","onRefreshToken","setInternal","fetchCurrentUser","FetchCurrentUser","current_user","access_token","tokenExpire","emit","fetchInternal","TrackItemComponent","faEllipsisV","msToTime","routeToAudioFeature","ErrorHandlerInterceptor","request","intersect","handle","pipe","HttpHeadersInterceptor","customReq","clone","setHeaders","Accept","HttpInterceptorProviders","provide","useClass","multi","interSect","reqUrl","splitUrl","urlstr","split","Boolean","ArtistPreviewComponent","activeRoute","fetchArtistPreview","artistId","FetchArtistPreview","fetchRelatedArtists","FetchRelatedArtist","fetchArtistTopTracks","FetchArtistTopTracks","routeReuseStrategy","shouldReuseRoute","paramMap","ngOnInit","fetchTopArtists","fetchTopTracks","AudioFeatureComponent","fetchAudioFeature","FetchAudioFeature","key","mode","f","min","parseFloat","duration_ms","toFixed","temp","tempo","findBeats","time_signature","CallbackComponent","request$","setCallbackTimes","storeState","queryParams","generateToken","refresh_token","expires_in","token_type","initializerStates","LoginComponent","authenticateUser","authUser","MainRoutingModule","forChild","MainComponent","faMicrophoneAlt","faMusic","userReq$","user$","MainModule","schemas","MyPlaylistComponent","PlaylistPreviewComponent","isEditBtn","itemsPerPage","totalItems","fetchPlaylistPreview","RecommendationComponent","FetchRecommendation","trackIds","slice","getRecommendation","seed_tracks","fetchRecommendation","tabs","timeRange","status","TopArtistsComponent","$tabs","FetchTopArtists","top_artists","local","time_range","setActiveTab","tab","TopTracksComponent","FetchTopTracks","top_tracks","ArtistPreviewService","ArtistTopTracksService","country","AudioFeatureService","trackId","FollowService","$queryString","put","publid","httpOptions","setQueryParams","$query","Object","entries","push","s","ms","secs","mins","hrs","mixin","position","showConfirmButton","timer","timerProgressBar","onOpen","addEventListener","stopTimer","resumeTimer","SwalFire","callback","imageWidth","imageHeight","confirmButtonColor","cancelButtonColor","showCancelButton","MyPlaylistService","axios","reqBody","data","RelatedArtistsService","TopArtistsService","TopTracksService","SharedModule","ArtistPreviewActionsType","type","ArtistPreviewSelectors","ArtistPreviewState","service","getState","patchState","defaults","ArtistTopTracksActionsType","ArtistTopTracksSelectors","ArtistTopTracksState","AudioFeatureActionsType","AudioFeatureSelectors","AudioFeatureState","feature","CurrentUserActionsType","CurrentUserSelectors","CurrentUserState","FollowActionsType","FetchFollowTracks","FollowArtistsState","FollowSelectors","Store","InternalActionsType","InternalSelectors","InternalState","MyPlaylistActionsType","MyPlaylistSelectors","MyPlaylistState","PlaylistPreviewActionsType","PlaylistPreviewSelectors","PlaylistPreviewState","fetchPreviewPlaylist","RecommendationActionsType","RecommendationSelectors","RecommendationState","RelatedArtistActionsType","RelatedArtistsSelectors","RelatedArtistsState","TopArtistsActionsType","TopArtistsSelectors","TopArtistsState","tp","TopTracksActionsType","TopTracksSelectors","TopTracksState","environment"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASA,QAAMC,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE,wEAFb;AAGEC,iBAAW,EAAE,CAAC,0DAAD,CAHf;AAIEC,kBAAY,EAAE;AAAA,eAAM,kEAAN;AAAA;AAJhB,KADqB,EAOrB;AAAEH,UAAI,EAAE,OAAR;AAAiBC,eAAS,EAAE;AAA5B,KAPqB,EAQrB;AAAED,UAAI,EAAE,UAAR;AAAoBC,eAAS,EAAE;AAA/B,KARqB,CAAvB;;QAeaG,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBN,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBK,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBN,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACxB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaU,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,iBAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACPzB;;;;;;;;;sEDOaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,uC,CAGA;;;QA+BaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAJT,E;AAAE,gBAZJ,CACP,uEADO,EAEP,4DAFO,EAGP,qEAHO,EAIP,uDAAWP,OAAX,CAAmB,4CAAnB,EAA0B;AACxBQ,uBAAe,EAAE,CAAC,sEAAYC;AADN,OAA1B,CAJO,EAOP,2EAAuBT,OAAvB,EAPO,EAQP,uFAAyBA,OAAzB,EARO,EASP,wEAAsBA,OAAtB,EATO,EAUP,qEAVO,CAYI;;;;0HAIFO,S,EAAS;AAAA,uBAjBL,2DAiBK;AAjBO,kBAEzB,uEAFyB,EAGzB,4DAHyB,EAIzB,qEAJyB,EAIT,8CAJS,EAIT,0EAJS,EAIT,sFAJS,EAIT,uEAJS,EAWzB,qEAXyB;AAiBP,O;AANF,K;;;;;sEAMPA,S,EAAS;cAlBrB,sDAkBqB;eAlBZ;AACRG,sBAAY,EAAE,CAAC,2DAAD,CADN;AAERT,iBAAO,EAAE,CACP,uEADO,EAEP,4DAFO,EAGP,qEAHO,EAIP,uDAAWD,OAAX,CAAmB,4CAAnB,EAA0B;AACxBQ,2BAAe,EAAE,CAAC,sEAAYC;AADN,WAA1B,CAJO,EAOP,2EAAuBT,OAAvB,EAPO,EAQP,uFAAyBA,OAAzB,EARO,EASP,wEAAsBA,OAAtB,EATO,EAUP,qEAVO,CAFD;AAcRW,mBAAS,EAAE,EAdH;AAeRnB,iBAAO,EAAE,EAfD;AAgBRoB,mBAAS,EAAE,CAAC,2DAAD;AAhBH,S;AAkBY,Q;;;;;;;;;;;;;;;;;;AClCtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAeaC,S;AACX,yBAAoBC,WAApB,EAAsDC,MAAtD,EAAsE;AAAA;;AAAlD,aAAAD,WAAA,GAAAA,WAAA;AAAkC,aAAAC,MAAA,GAAAA,MAAA;AAAkB;;;;oCAGtEC,I,EACAC,K,EAA0B;AAM1B,cACE,CAAC,KAAKH,WAAL,CAAiBI,eAAjB,EAAD,IACA,KAAKJ,WAAL,CAAiBK,kBAAjB,EAFF,EAGE;AACA,iBAAKJ,MAAL,CAAYK,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACA,mBAAO,KAAP;AACD;;AACD,iBAAO,IAAP;AACD;;;;;;;uBAnBUP,S,EAAS,iH,EAAA,8G;AAAA,K;;;aAATA,S;AAAS,eAATA,SAAS,K;AAAA,kBAFR;;;;;sEAEDA,S,EAAS;cAHrB,wDAGqB;eAHV;AACVQ,oBAAU,EAAE;AADF,S;AAGU,Q;;;;;;;;;;;;;;;;;;;;;;;;ACftB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAaaC,W;AACX,2BACUC,IADV,EAEUR,MAFV,EAGUS,KAHV,EAGsB;AAAA;;AAFZ,aAAAD,IAAA,GAAAA,IAAA;AACA,aAAAR,MAAA,GAAAA,MAAA;AACA,aAAAS,KAAA,GAAAA,KAAA;AACN;AAEJ;;;;;;;0CAGyB;AACvB,cAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAd;AAEA,cAAIF,KAAK,IAAI,IAAT,IAAiBA,KAAK,KAAK,EAA3B,IAAiCA,KAAK,IAAI,WAA9C,EAA2D,OAAO,KAAP;AAE3D,iBAAO,IAAP;AACD;AAED;;;;;;2CAG0B;AACxB,cAAMG,MAAM,GAAG,KAAKC,oBAAL,CAA0B,EAA1B,CAAf;AAEAH,sBAAY,CAACI,OAAb,CAAqB,OAArB,EAA8BF,MAA9B;AAEA,cAAMG,MAAM,GAAG,CACb,mBADa,EAEb,iBAFa,EAGb,kBAHa,EAIb,eAJa,EAKb,uBALa,EAMb;AACA,4BAPa,EAQb,oBARa,EASb;AACA,kCAVa,EAWb,yBAXa,CAAf;AAcAC,gBAAM,CAACC,QAAP,CAAgBC,IAAhB,GACE,4CACA,uDAAsB;AACpBC,yBAAa,EAAE,MADK;AAEpBC,qBAAS,EAAE,sEAAYA,SAFH;AAGpBC,iBAAK,EAAEN,MAAM,CAACO,QAAP,GAAkBC,OAAlB,CAA0B,IAA1B,EAAgC,GAAhC,CAHa;AAIpBC,wBAAY,EAAE,sEAAYA,YAJN;AAKpBvB,iBAAK,EAAEW;AALa,WAAtB,CAFF;AAUA,eAAKJ,KAAL,CAAWiB,QAAX,CAAoB,IAAI,4DAAJ,EAApB;AACD;AAED;;;;;;6CAG4BC,M,EAAQ;AAClC,cAAIC,IAAI,GAAG,EAAX;AACA,cAAIC,QAAQ,GACV,gEADF;;AAGA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAApB,EAA4BG,CAAC,EAA7B,EAAiC;AAC/BF,gBAAI,IAAIC,QAAQ,CAACE,MAAT,CAAgBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,QAAQ,CAACF,MAApC,CAAhB,CAAR;AACD;;AACD,iBAAOC,IAAP;AACD;AAED;;;;;;0CAGyB;AACvB,iBAAO,IAAI,gEAAJ,CAAgB;AACrBO,yBAAa,kBAAWC,IAAI,CAC1B,sEAAYf,SAAZ,GAAwB,GAAxB,GAA8B,sEAAYgB,aADhB,CAAf,CADQ;AAIrB,4BAAgB;AAJK,WAAhB,CAAP;AAMD;AAED;;;;;;sCAGqB/D,I,EAAc;AACjC,cAAMgE,OAAO,GAAG,KAAKC,eAAL,EAAhB;AAEA,cAAMC,MAAM,GAAG,IAAI,+DAAJ,GACZC,GADY,CACR,MADQ,EACAnE,IADA,EAEZmE,GAFY,CAER,cAFQ,EAEQ,sEAAYhB,YAFpB,EAGZgB,GAHY,CAGR,YAHQ,EAGM,oBAHN,CAAf;AAKA,iBAAO,KAAKjC,IAAL,CAAUkC,IAAV,WACF,sEAAYC,iBADV,GAELH,MAAM,CAACjB,QAAP,EAFK,EAGL;AAAEe,mBAAO,EAAPA;AAAF,WAHK,CAAP;AAKD;AAED;;;;;;uCAGsB;AACpB,cAAMM,YAAY,GAAGjC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAArB;AACA,cAAM0B,OAAO,GAAG,KAAKC,eAAL,EAAhB;AACA,cAAMC,MAAM,GAAG,IAAI,+DAAJ,GACZC,GADY,CACR,YADQ,EACM,eADN,EAEZA,GAFY,CAER,eAFQ,EAESG,YAFT,CAAf;AAIA,iBAAO,KAAKpC,IAAL,CAAUkC,IAAV,WACF,sEAAYC,iBADV,GAELH,MAAM,CAACjB,QAAP,EAFK,EAGL;AAAEe,mBAAO,EAAPA;AAAF,WAHK,CAAP;AAKD;AAED;;;;;;2CAG0B;AACxB,iBAAO,KAAK9B,IAAL,CAAUqC,GAAV,WAAwB,sEAAYC,WAApC,QAAP;AACD;AAED;;;;;;6CAG4B;AAC1B,cAAMC,WAAW,GAAGpC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAApB;AACA,iBAAOmC,WAAW,IAAIA,WAAW,KAAK,EAA/B,GAAoC,IAApC,GAA2C,KAAlD;AACD;AAED;;;;;;2CAG0B;AACxB,cAAIC,KAAK,GAAGrC,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAZ;AACA,cAAIqC,KAAK,GAAGD,KAAK,KAAK,IAAV,GAAiB,CAAjB,GAAqBE,QAAQ,CAACF,KAAD,CAAR,GAAkB,CAAnD;AACArC,sBAAY,CAACI,OAAb,CAAqB,eAArB,EAAsCkC,KAAK,CAAC1B,QAAN,EAAtC;AACD;;;;;;;uBAxIUhB,W,EAAW,uH,EAAA,8G,EAAA,yG;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVD,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACbxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAaa6C,kB;AAMX,oCAAc;AAAA;;AALd,aAAAC,SAAA,GAAY,4EAAZ;AACA,aAAAC,SAAA,GAAY,4EAAZ;AACA,aAAAC,QAAA,GAAW,2EAAX;AACA,aAAAC,MAAA,GAAS,wEAAT;AAEgB;;;;mCAER,CAAW;;;;;;;uBARRJ,kB;AAAkB,K;;;YAAlBA,kB;AAAkB,qC;AAAA,c;AAAA,a;AAAA,yJ;AAAA;AAAA;ACb/B;;AAOE;;AACE;;AACG;;AACF;;AACD;;AACA;;AAAG;;AAA0B;;AAC/B;;AACF;;;;AALgB;;AAAA;;;;;;;;;sEDIHA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACT9D,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEGnB;;AACE;;AACE;;AAQF;;AACF;;;;;;AARM;;AAAA;;;;;;AAuBE;;AAIE;;AACF;;;;;;AADE;;AAAA;;;;;;AALJ;;AACE;;AAMF;;;;;;;;AALI;;AAAA;;;;;;AAHN;;AACE;;AAQF;;;;;;AARO;;AAAA;;;;;;AAoBH;;AAIE;;AACF;;;;;;AADE;;AAAA;;;;;;AALJ;;AACE;;AAMF;;;;;;;;AALI;;AAAA;;;;;;AAHN;;AACE;;AAQF;;;;;;AARO;;AAAA;;;;QC1CViE,wB;AAcX,wCAAoBC,EAApB,EAA6CjD,IAA7C,EAAsE;AAAA;;AAAlD,aAAAiD,EAAA,GAAAA,EAAA;AAAyB,aAAAjD,IAAA,GAAAA,IAAA;AAX7C,aAAAkD,WAAA,GAAmB,6CAAnB;AACA,aAAAC,IAAA,GAAO,IAAI,+CAAJ,EAAP;AACA,aAAAC,KAAA,GAAQ,+DAAR;AAEA,aAAAC,KAAA,GAAQ,uEAAR;AACA,aAAAC,QAAA,GAAoB,KAApB;;AAGY,aAAAC,eAAA,GAAkB,UAACC,UAAD;AAAA,iBAC5B,IAAI,gGAA2BC,oBAA/B,CAAoDD,UAApD,CAD4B;AAAA,SAAlB;AAG4D;;;;mCAMhE;AACN,eAAKE,QAAL,GAAgB,KAAKT,EAAL,CAAQU,KAAR,CAAc;AAC5BC,gBAAI,EAAE,CACJ,KAAKC,QAAL,CAAcD,IADV,EAEJ,CAAC,0DAAWE,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,CAArB,CAAtB,CAFI,CADsB;AAK5BC,uBAAW,EAAE,CAAC,KAAKH,QAAL,CAAcG,WAAf,EAA4B,CAAC,0DAAWD,SAAX,CAAqB,EAArB,CAAD,CAA5B,CALe;AAM5B,sBAAQ,CAAC,IAAD;AANoB,WAAd,CAAhB;AAQD;;;uCAEc;AACb,eAAKT,QAAL,GAAgB,IAAhB;AACD;;;qCAEYO,Q,EAAgC;AAAA;;AAC3C,eAAKI,UAAL,GAAkB,IAAlB;AACA,cAAI,CAAC,KAAKP,QAAL,CAAcQ,KAAnB,EAA0B;AAC1B,cAAMC,IAAI,GAAG,KAAKT,QAAL,CAAcU,KAA3B;AACA,cAAMC,OAAO,GACXF,IAAI,CAACH,WAAL,KAAqB,EAArB,GAA0BG,IAA1B,GAAiC;AAAEP,gBAAI,EAAEO,IAAI,CAACP,IAAb;AAAmB,sBAAQO,IAAI;AAA/B,WADnC;AAGA,eAAKhB,IAAL,CAAUmB,IAAV,GAAiB,KAAKtE,IAAL,CACduE,mBADc,CACMV,QAAQ,CAAC3F,EADf,EACmBmG,OADnB,EAEdG,SAFc,CAGb,UAACC,GAAD,EAAS;AACP,iBAAI,CAACrB,KAAL,CAAWsB,IAAX,CAAgB;AACdC,kBAAI,EAAE,SADQ;AAEd/F,mBAAK,EAAE;AAFO,aAAhB;;AAIA,iBAAI,CAAC2E,eAAL,CAAqBM,QAAQ,CAAC3F,EAA9B;AACD,WATY,EAUb,UAAC0G,GAAD;AAAA,mBACE,KAAI,CAACxB,KAAL,CAAWsB,IAAX,CAAgB;AACdC,kBAAI,EAAE,OADQ;AAEd/F,mBAAK,EAAE;AAFO,aAAhB,CADF;AAAA,WAVa,CAAjB;AAiBA,eAAK0E,QAAL,GAAgB,KAAhB;AACD;;;sCAEa;AACZ,eAAKH,IAAL,CAAU0B,WAAV;AACD;;;4BAhDQ;AACP,iBAAO,KAAKnB,QAAL,CAAcoB,QAArB;AACD;;;;;;;uBAlBU9B,wB,EAAwB,2H,EAAA,4J;AAAA,K;;;YAAxBA,wB;AAAwB,4C;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,0hC;AAAA;AAAA;ADlBrC;;AACE;;AAAG;AAAA,mBAAS,IAAA+B,YAAA,EAAT;AAAuB,WAAvB;;AACD;;AAAmB;;AACrB;;AAEA;;AACE;;AAEE;AAAA,kCAAoB,KAApB;AAAyB,WAAzB;;AAED;;AACD;;AAA8B;AAAA,kCAAoB,KAApB;AAAyB,WAAzB;;AAA2B;;AACzD;;AACE;;AACE;;AACE;;AACE;;AAYA;;AACE;;AACE;;AAAkB;;AAAa;;AAC/B;;AACE;;AAOF;;AACA;;AAUF;;AACA;;AACE;;AAAkB;;AAAW;;AAC7B;;AAMA;;AAUF;;AACA;;AACE;;AACE;;AAMA;;AACF;;AACA;;AACE;;AAMA;;AACF;;AACF;;AACA;;AACE;;AAAuB;AAAA,mBAAS,IAAAC,YAAA,cAAT;AAA+B,WAA/B;;AAAiC;;AAAI;;AAC5D;;AAAkC;AAAA,kCAAoB,KAApB;AAAyB,WAAzB;;AAC/B;;AAAM;;AAEX;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;AApGgC;;AAAA;;AAGzB;;AAAA;;AAWuC;;AAAA;;AAY7B;;AAAA;;AAYmB;;AAAA;;AAmBA;;AAAA;;AAiBhB;;AAAA;;AASA;;AAAA;;;;;;ACxDN,8DAAX,gFAAW,G,kCAAA,E,iBAAA,E,MAAA;;;;sEAXDhC,wB,EAAwB;cALpC,uDAKoC;eAL1B;AACTnE,kBAAQ,EAAE,uBADD;AAETC,qBAAW,EAAE,oCAFJ;AAGTC,mBAAS,EAAE,CAAC,oCAAD;AAHF,S;AAK0B,Q;;;;;;;;gBAClC;;;;;;;;;;;;;;;;;;;;;ACnBH;AAAA;;;AAAA;AAAA;AAAA;;AAAA,QAAMkG,MAAM,GAAG;AACbrB,UAAI,EAAE,CACJ;AAAEsB,aAAK,EAAE,UAAT;AAAqBC,aAAK,EAAE;AAA5B,OADI,EAEJ;AAAED,aAAK,EAAE,WAAT;AAAsBC,aAAK,EAAE;AAA7B,OAFI,CADO;AAKbnB,iBAAW,EAAE,CAAC;AAAEkB,aAAK,EAAE,WAAT;AAAsBC,aAAK,EAAE;AAA7B,OAAD;AALA,KAAf;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,oB;AAKX,sCAAc;AAAA;AAAE;;;;mCAER,CAAW;;;;;;;uBAPRA,oB;AAAoB,K;;;YAApBA,oB;AAAoB,uC;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,gF;AAAA;AAAA;ACPjC;;;;AACE,8FAAsB,KAAtB,EAAsB,aAAtB;;;;;;;;;sEDMWA,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTvG,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKsB,Q;;;;gBAC9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEPD;;AAEE;AAAA;;AAAA;;AAAA;AAAA;;AAGA;;AAAsB;;AACxB;;;;;;AADiC;;AAAA;;;;;;;;AAEjC;;AAEE;AAAA;;AAAA;;AAAA;AAAA;;AAGA;;AAAuB;;AACzB;;;;;;AADkC;;AAAA;;;;;;AAbpC;;AACE;;AAOA;;AAOF;;;;;;AAbI;;AAAA;;AAOA;;AAAA;;;;;;;;AAQF;;AAEE;AAAA;;AAAA;;AAAA;AAAA,WAAoC,WAApC,EAAoC;AAAA;;AAAA;;AAAA,wCAER,UAFQ;AAEE,SAFtC,EAAoC,UAApC,EAAoC;AAAA;;AAAA;;AAAA,wCAGT,WAHS;AAGE,SAHtC;;AAMF;;;;;;AAFE;;;;;;;;AAGF;;AAEE;AAAA;;AAAA;;AAAA;AAAA;;AAGA;;AACF;;;;;;AAfA;;AASA;;;;;;AARE;;AASA;;AAAA;;;;QCHSsG,0B;AACX,0CAAoBC,MAApB,EAAmDrF,KAAnD,EAAiE;AAAA;;AAA7C,aAAAqF,MAAA,GAAAA,MAAA;AAA+B,aAAArF,KAAA,GAAAA,KAAA;;AAEvC,aAAAsF,eAAA,GAAkB;AAAA,cAACC,GAAD,uEAAO,IAAP;AAAA,iBAC5B,IAAI,sFAAsBC,aAA1B,CAAwCD,GAAxC,CAD4B;AAAA,SAAlB;;AAQZ,aAAAE,KAAA,GAAQ,+DAAR;AACA,aAAAC,QAAA,GAAW,wDAAX,CAXiE,CAYjE;;AAEA,aAAAC,OAAA,GAAU,yEAAV;AACA,aAAAC,iBAAA,GAAoB,mFAApB;AAEA,aAAAC,WAAA,GAAc,IAAI,+CAAJ,EAAd;AACA,aAAAC,YAAA,GAAe,WAAf;AAlBmE;;;;mCAqB3D;AAAA;;AACN,cAAI,KAAKC,kBAAL,IAA2B,KAAKC,WAApC,EAAiD;AAC/C,gBAAMC,MAAM,GAAG,KAAKF,kBAAL,CAAwBE,MAAxB,CACb,UAACzB,GAAD;AAAA,qBAASA,GAAG,CAACvG,EAAJ,KAAW,MAAI,CAAC2F,QAAL,CAAc3F,EAAlC;AAAA,aADa,CAAf;AAGA,gBAAIgI,MAAM,CAAC/E,MAAP,GAAgB,CAApB,EAAuB,KAAKgF,UAAL,GAAkB,IAAlB;AACxB;AACF;;;kCAESC,I,EAAMC,G,EAAK;AACnB,eAAKX,KAAL,CAAWhB,IAAX,CAAgB;AAAEC,gBAAI,EAAEyB,IAAI,IAAI,CAAR,GAAY,SAAZ,GAAwB,OAAhC;AAAyCxH,iBAAK,EAAEyH;AAAhD,WAAhB;AACD,S,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;yCAEiBxC,Q,EAAU;AAAA;;AACzB,cAAMyC,OAAO,GAAG;AACd1H,iBAAK,EAAEiF,QAAQ,CAACD,IADF;AAEdxC,gBAAI,EAAE,mCAFQ;AAGdmF,oBAAQ,EACN1C,QAAQ,CAAC2C,MAAT,CAAgBrF,MAAhB,GAAyB,CAAzB,GACI0C,QAAQ,CAAC2C,MAAT,CAAgB,CAAhB,EAAmBC,GADvB,GAEI,2BANQ;AAOdC,6BAAiB,EAAE;AAPL,WAAhB;AAUA,eAAKf,QAAL,CAAc,UAACgB,MAAD,EAAY;AACxB,gBAAIA,MAAM,CAACvC,KAAX,EAAkB;AAChB,oBAAI,CAAC0B,WAAL,CAAiBxB,IAAjB,GAAwB,MAAI,CAACgB,MAAL,CACrBsB,gBADqB,CACJ/C,QAAQ,CAAC3F,EADL,EAErBsG,SAFqB,CAGpB,UAACC,GAAD,EAAS;AACP,sBAAI,CAACoC,SAAL,CAAe,CAAf,EAAkB,8BAAlB;;AACA,sBAAI,CAACV,UAAL,GAAkB,KAAlB;;AACA,sBAAI,CAAClG,KAAL,CAAWiB,QAAX,CAAoB,IAAI,4DAAJ,CAAe,wEAAf,CAApB;;AACA,sBAAI,CAACqE,eAAL,CAAqB;AAAEuB,uBAAK,EAAE;AAAT,iBAArB;AACD,eARmB,EASpB,UAAClC,GAAD;AAAA,uBAAS,MAAI,CAACiC,SAAL,CAAe,CAAf,EAAkB,0BAAlB,CAAT;AAAA,eAToB,CAAxB;AAWD;AACF,WAdD,EAcGP,OAdH;AAeD;;;uCAEczC,Q,EAAU;AAAA;;AACvB,cAAMyC,OAAO,GAAG;AACd1H,iBAAK,EAAEiF,QAAQ,CAACD,IADF;AAEdmD,iBAAK,EAAE,OAFO;AAGdC,wBAAY,EAAE;AAAE,mBAAK,QAAP;AAAiB,mBAAK;AAAtB,aAHA;AAIdT,oBAAQ,EACN1C,QAAQ,CAAC2C,MAAT,CAAgBrF,MAAhB,GAAyB,CAAzB,GACI0C,QAAQ,CAAC2C,MAAT,CAAgB,CAAhB,EAAmBC,GADvB,GAEI,2BAPQ;AAQdC,6BAAiB,EAAE;AARL,WAAhB;AAWA,eAAKf,QAAL,CAAc,UAACgB,MAAD,EAAY;AACxB,gBAAIA,MAAM,CAACvC,KAAX,EAAkB;AAChB,oBAAI,CAAC0B,WAAL,CAAiBxB,IAAjB,GAAwB,MAAI,CAACgB,MAAL,CACrB2B,cADqB,CACNpD,QAAQ,CAAC3F,EADH,EAErBsG,SAFqB,CAGpB,UAACC,GAAD,EAAS;AACP,sBAAI,CAACoC,SAAL,CAAe,CAAf,EAAkB,4BAAlB;;AACA,sBAAI,CAACV,UAAL,GAAkB,IAAlB;;AACA,sBAAI,CAAClG,KAAL,CAAWiB,QAAX,CAAoB,IAAI,4DAAJ,CAAe,wEAAf,CAApB;;AACA,sBAAI,CAACqE,eAAL,CAAqB;AAAEuB,uBAAK,EAAE;AAAT,iBAArB;AACD,eARmB,EASpB,UAAClC,GAAD;AAAA,uBAAS,MAAI,CAACiC,SAAL,CAAe,CAAf,EAAkB,wBAAlB,CAAT;AAAA,eAToB,CAAxB;AAWD;AACF,WAdD,EAcGP,OAdH;AAeD;;;6CAEoBzC,Q,EAAU;AAAA;;AAC7B,cAAMyC,OAAO,GAAG;AACd1H,iBAAK,EAAEiF,QAAQ,CAACD,IADF;AAEdxC,gBAAI,EACF,iFAHY;AAIdmF,oBAAQ,EACN1C,QAAQ,CAAC2C,MAAT,CAAgBrF,MAAhB,GAAyB,CAAzB,GACI0C,QAAQ,CAAC2C,MAAT,CAAgB,CAAhB,EAAmBC,GADvB,GAEI,2BAPQ;AAQdC,6BAAiB,EAAE;AARL,WAAhB;AAWA,eAAKf,QAAL,CAAc,UAACgB,MAAD,EAAY;AACxB,gBAAIA,MAAM,CAACvC,KAAP,IAAgB,MAAI,CAAC8C,YAAzB,EAAuC;AACrC,oBAAI,CAACpB,WAAL,CAAiBxB,IAAjB,GAAwB,MAAI,CAACgB,MAAL,CACrB6B,oBADqB,CACAtD,QAAQ,CAACuD,KAAT,CAAelJ,EADf,EACmB2F,QAAQ,CAAC3F,EAD5B,EAErBsG,SAFqB,CAGpB,UAACC,GAAD,EAAS;AACP,sBAAI,CAACoC,SAAL,CAAe,CAAf,EAAkB,0BAAlB;;AACA,sBAAI,CAACV,UAAL,GAAkB,KAAlB;;AACA,sBAAI,CAAClG,KAAL,CAAWiB,QAAX,CAAoB,IAAI,4DAAJ,CAAe,wEAAf,CAApB;;AACA,sBAAI,CAACqE,eAAL,CAAqB;AAAEuB,uBAAK,EAAE;AAAT,iBAArB;AACD,eARmB,EASpB,UAAClC,GAAD;AAAA,uBAAS,MAAI,CAACiC,SAAL,CAAe,CAAf,EAAkB,0BAAlB,CAAT;AAAA,eAToB,CAAxB;AAWD;AACF,WAdD,EAcGP,OAdH;AAeD;;;2CAEkBzC,Q,EAAU;AAAA;;AAC3B,cAAMyC,OAAO,GAAG;AACd1H,iBAAK,EAAEiF,QAAQ,CAACD,IADF;AAEdmD,iBAAK,EAAE,OAFO;AAGdC,wBAAY,EAAE;AAAE,mBAAK,QAAP;AAAiB,mBAAK;AAAtB,aAHA;AAIdT,oBAAQ,EACN1C,QAAQ,CAAC2C,MAAT,CAAgBrF,MAAhB,GAAyB,CAAzB,GACI0C,QAAQ,CAAC2C,MAAT,CAAgB,CAAhB,EAAmBC,GADvB,GAEI,2BAPQ;AAQdC,6BAAiB,EAAE;AARL,WAAhB;AAWA,eAAKf,QAAL,CAAc,UAACgB,MAAD,EAAY;AACxB,gBAAIA,MAAM,CAACvC,KAAP,IAAgB,MAAI,CAAC8C,YAAzB,EAAuC;AACrC,kBAAMG,QAAQ,GAAGV,MAAM,CAACvC,KAAP,IAAgB,GAAhB,GAAsB,IAAtB,GAA6B,KAA9C;AACA,oBAAI,CAAC0B,WAAL,CAAiBxB,IAAjB,GAAwB,MAAI,CAACgB,MAAL,CACrBgC,kBADqB,CACFzD,QAAQ,CAACuD,KAAT,CAAelJ,EADb,EACiB2F,QAAQ,CAAC3F,EAD1B,EAC8BmJ,QAD9B,EAErB7C,SAFqB,CAGpB,UAACC,GAAD,EAAS;AACP,sBAAI,CAACoC,SAAL,CAAe,CAAf,EAAkB,4BAAlB;;AACA,sBAAI,CAACV,UAAL,GAAkB,IAAlB;;AACA,sBAAI,CAAClG,KAAL,CAAWiB,QAAX,CAAoB,IAAI,4DAAJ,CAAe,wEAAf,CAApB;;AACA,sBAAI,CAACqE,eAAL,CAAqB;AAAEuB,uBAAK,EAAE;AAAT,iBAArB;AACD,eARmB,EASpB,UAAClC,GAAD;AAAA,uBAAS,MAAI,CAACiC,SAAL,CAAe,CAAf,EAAkB,0BAAlB,CAAT;AAAA,eAToB,CAAxB;AAWD;AACF,WAfD,EAeGP,OAfH;AAgBD;;;;;;;uBAhKUjB,0B,EAA0B,8I,EAAA,mH;AAAA,K;;;YAA1BA,0B;AAA0B,8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,yT;AAAA;AAAA;ADxBvC;;AAgBA;;;;;;AAhBc,6FAAoC,UAApC,EAAoC,GAApC;;;;;;AC2BA,8DAAX,gFAAW,G,oCAAA,E,iBAAA,E,MAAA;;;;sEAHDA,0B,EAA0B;cALtC,uDAKsC;eAL5B;AACTxG,kBAAQ,EAAE,yBADD;AAETC,qBAAW,EAAE,sCAFJ;AAGTC,mBAAS,EAAE,CAAC,sCAAD;AAHF,S;AAK4B,Q;;;;;;;;;gBAMpC;;;gBACA;;;gBACA;;;gBACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uECvBH;;;;;;;ACTE;;AAIE;AAAA;;AAAA;;AAAA,yCAA8B,IAA9B;AAAkC,SAAlC,EAAmC,UAAnC,EAAmC;AAAA;;AAAA;;AAAA,yCACN,KADM;AACD,SADlC,EAAmC,OAAnC,EAAmC;AAAA;;AAAA;;AAAA;AAAA,SAAnC;;AAGD;;;;;;AAJC;;;;;;;;AAKF;;AAAwB;AAAA;;AAAA;;AAAA;AAAA;;AACtB;;AACF;;;;QDOWwI,kB;AACX,kCAAoBjC,MAApB,EAA2C;AAAA;;AAAvB,aAAAA,MAAA,GAAAA,MAAA;;AAER,aAAAkC,kBAAA,GAAqB;AAAA,iBAC/B,IAAI,6EAAkBC,kBAAtB,EAD+B;AAAA,SAArB;;AAMZ,aAAA/B,KAAA,GAAQ,+DAAR;AACA,aAAAC,QAAA,GAAW,wDAAX;AACA,aAAAG,WAAA,GAAc,IAAI,+CAAJ,EAAd;AACA,aAAA4B,WAAA,GAAc,KAAd;AACA,aAAAC,cAAA,GAAiB,KAAjB;AAZ6C;;;;sCAc/B;AACZ,eAAK7B,WAAL,CAAiBjB,WAAjB;AACD;;;mCAEO;AAAA;;AACN,cAAM+C,GAAG,GAAG,KAAKC,SAAL,CAAe3B,MAAf,CAAsB,UAACZ,MAAD;AAAA,mBAAYA,MAAM,CAACpH,EAAP,KAAc,MAAI,CAAC4J,MAAL,CAAY5J,EAAtC;AAAA,WAAtB,CAAZ;AACA,eAAKwJ,WAAL,GAAmBE,GAAG,CAACzG,MAAJ,GAAa,CAAb,GAAiB,IAAjB,GAAwB,KAA3C,CAFM,CAGN;AACD;;;kCAESiF,I,EAAMC,G,EAAK;AACnB,eAAKX,KAAL,CAAWhB,IAAX,CAAgB;AAAEC,gBAAI,EAAEyB,IAAI,IAAI,CAAR,GAAY,SAAZ,GAAwB,OAAhC;AAAyCxH,iBAAK,EAAEyH;AAAhD,WAAhB;AACD,S,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;qCAEayB,M,EAAQ;AAAA;;AACnB,cAAMxB,OAAO,GAAG;AACd1H,iBAAK,EAAEkJ,MAAM,CAAClE,IADA;AAEd2C,oBAAQ,EAAEuB,MAAM,CAACtB,MAAP,CAAc,CAAd,EAAiBC,GAFb;AAGdC,6BAAiB,EAAE;AAHL,WAAhB;AAMA,eAAKf,QAAL,CAAc,UAACgB,MAAD,EAAY;AACxB,gBAAIA,MAAM,CAACvC,KAAX,EAAkB;AAChB,oBAAI,CAAC0B,WAAL,CAAiBxB,IAAjB,GAAwB,MAAI,CAACgB,MAAL,CAAYyC,YAAZ,CAAyBD,MAAM,CAAC5J,EAAhC,EAAoCsG,SAApC,CACtB,UAACC,GAAD,EAAS;AACP,sBAAI,CAACoC,SAAL,CAAe,CAAf,EAAkB,0BAAlB;;AACA,sBAAI,CAACW,kBAAL;;AACA,sBAAI,CAACE,WAAL,GAAmB,IAAnB;AACD,eALqB,EAMtB,UAAC9C,GAAD;AAAA,uBAAS,MAAI,CAACiC,SAAL,CAAe,CAAf,EAAkB,wBAAlB,CAAT;AAAA,eANsB,CAAxB;AAQD;AACF,WAXD,EAWGP,OAXH;AAYD;;;uCAEcwB,M,EAAQ;AAAA;;AACrB,cAAMxB,OAAO,GAAG;AACd1H,iBAAK,EAAEkJ,MAAM,CAAClE,IADA;AAEdxC,gBAAI,EAAE,oCAFQ;AAGdmF,oBAAQ,EAAEuB,MAAM,CAACtB,MAAP,CAAc,CAAd,EAAiBC,GAHb;AAIdC,6BAAiB,EAAE;AAJL,WAAhB;AAOA,eAAKf,QAAL,CAAc,UAACgB,MAAD,EAAY;AACxB,gBAAIA,MAAM,CAACvC,KAAX,EAAkB;AAChB,oBAAI,CAAC0B,WAAL,CAAiBxB,IAAjB,GAAwB,MAAI,CAACgB,MAAL,CAAY0C,cAAZ,CAA2BF,MAAM,CAAC5J,EAAlC,EAAsCsG,SAAtC,CACtB,UAACC,GAAD,EAAS;AACP,sBAAI,CAACoC,SAAL,CAAe,CAAf,EAAkB,4BAAlB;;AACA,sBAAI,CAACW,kBAAL;;AACA,sBAAI,CAACE,WAAL,GAAmB,KAAnB;AACD,eALqB,EAMtB,UAAC9C,GAAD;AAAA,uBAAS,MAAI,CAACiC,SAAL,CAAe,CAAf,EAAkB,wBAAlB,CAAT;AAAA,eANsB,CAAxB;AAQD;AACF,WAXD,EAWGP,OAXH;AAYD;;;;;;;uBAjFUiB,kB,EAAkB,8I;AAAA,K;;;YAAlBA,kB;AAAkB,qC;AAAA;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,4P;AAAA;AAAA;AClB/B;;AACE;;AAQA;;AAGF;;;;AAVI;;AAAA;;AAOC;;AAAA;;;;;;ADYS,8DAAX,gFAAW,G,4BAAA,E,oBAAA,E,MAAA;;;;sEAHDA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACT1I,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKoB,Q;;;;;;;gBAM5B;;;gBACA;;;;;;;;;;;;;;;;;;;;AEzBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACCE;;AAGE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACE;;AAKF;;AACA;;AACE;;AAAI;;AAAiB;;AACrB;;AACE;;AAAQ;;AAAY;;AACpB;;AAAM;;AAAuC;;AAC/C;;AACA;;AACE;;AAAQ;;AAAa;;AAAU;;AAAM;;AAAwB;;AAC/D;;AACA;;AACE;;AACF;;AACF;;AACF;;;;;;;;AAlBM;;AAAA;;AAME;;AAAA;;AAGI;;AAAA;;AAG+B;;AAAA;;AAG5B;;AAAA;;;;QDZJkJ,qB;AAOX,qCAAoBC,KAApB,EAAmC;AAAA;;AAAf,aAAAA,KAAA,GAAAA,KAAA;AANpB,aAAAC,KAAA,GAAQ,uEAAR;AAGA,aAAAC,YAAA,GAAe,qCAAf;AACA,aAAAC,KAAA,GAAQ,qEAAR;AAEqC;;;;mCAE7B,CAAW;;;kCAETC,C,EAAG;AACX,iBAAOA,CAAC,CAACvH,QAAF,GAAaC,OAAb,CAAqB,uBAArB,EAA8C,GAA9C,CAAP;AACD;;;sCAEa8G,M,EAAQ;AACpB,eAAKI,KAAL,CAAWrI,QAAX,CAAoB,CAAC,QAAD,EAAWiI,MAAM,CAAC5J,EAAlB,CAApB;AACD;;;;;;;uBAjBU+J,qB,EAAqB,uH;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,gU;AAAA;AAAA;ACXlC;;AACE;;AA0BF;;;;AAxBI;;AAAA;;;;;;;;;sEDQSA,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTpJ,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKuB,Q;;;;;;gBAE/B;;;;;;;;;;;;;;;;;;;;AEbH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACqBU;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;;;AArBV;;AAEE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAGA;;AACE;;AASF;;AACA;;AACE;;AAAI;;AAAmB;;AACvB;;AACE;;AACE;;AAGA;;AACF;;AACF;;AACA;;AACE;;AACF;;AACF;;AACF;;;;;;;;AAtBM;;AAAA;;AASE;;AAAA;;AAGM;;AAAA;;AAOC;;AAAA;;;;QDdJwJ,qB;AAGX,qCAAoBL,KAApB,EAA2CjI,KAA3C,EAAyD;AAAA;;AAArC,aAAAiI,KAAA,GAAAA,KAAA;AAAuB,aAAAjI,KAAA,GAAAA,KAAA;AAF3C,aAAAkI,KAAA,GAAQ,uEAAR;AAE2D;;;;mCAEnD;AACNK,iBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKxI,KAAL,CAAWyI,QAAX,EAArB;AACD;;;wCAEeZ,M,EAA6B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAK7H,KAAL,CAAWiB,QAAX,CAAoB,IAAI,4DAAJ,CAAe,kFAAf,CAApB;AACA,eAAKgH,KAAL,CAAWrI,QAAX,CAAoB,CAAC,aAAD,EAAgBiI,MAAM,CAAC5J,EAAvB,CAApB;AACD;;;;;;;uBApBUqK,qB,EAAqB,uH,EAAA,kH;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,0T;AAAA;AAAA;ACdlC;;AACE;;AA+BF;;;;AA5BI;;AAAA;;;;;;;;;sEDUSA,qB,EAAqB;cALjC,uDAKiC;eALvB;AACT1J,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKuB,Q;;;;;;;;gBAE/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AENK;;;;;;AAEE;;;;;;;;AAKF;;AAEE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAGA;;AAAqC;;AACvC;;;;;;AADW;;AAAA;;;;;;AAIT;;AACE;;AACF;;;;;;;AADE;;AAAA;;;;;;;;AAzBR;;AAIE;;AACE;;AACE;;AACF;;AACA;;AAKF;;AACA;;AACE;;AAOA;;AAAI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAmC;;AAAqB;;AAC5D;;AACE;;AAGA;;AAAE;;AAAM;;AAA2B;;AACrC;;AACF;;AACF;;;;;;;;AAzBO;;AAAA;;AACQ;;AAAA;;AAGT;;AAAA;;AAOA;;AAAA;;AAMqC;;AAAA;;AAE/B;;AAAA;;AAGE;;AAAA;;;;;;AA5BhB;;AACE;;;;AA+BF;;;;;;AA7BI;;AAAA;;;;;;AAoCE;;;;;;AAEE;;;;;;AAOA;;AACE;;AACF;;;;;;;AADE;;AAAA;;;;;;;;AAfR;;AACE;;AACE;;AACE;;AACF;;AACA;;AAKF;;AACA;;AACE;;AAAI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA8B;;AAAgB;;AAClD;;AACE;;AAGA;;AAAE;;AAAM;;AAAsB;;AAChC;;AACF;;AACF;;;;;;;;AAlBO;;AAAA;;AACQ;;AAAA;;AAGT;;AAAA;;AAMgC;;AAAA;;AAE1B;;AAAA;;AAGE;;AAAA;;;;;;AAlBhB;;AACE;;AAqBF;;;;;;AArBqC;;AAAA;;;;QCd1B4J,sB;AAiBX,sCACUT,KADV,EAEUlI,IAFV,EAGUC,KAHV,EAGsB;AAAA;;AAFZ,aAAAiI,KAAA,GAAAA,KAAA;AACA,aAAAlI,IAAA,GAAAA,IAAA;AACA,aAAAC,KAAA,GAAAA,KAAA;AAjBD,0BAAmB,KAAnB;AAIT,aAAA2I,MAAA,GAAS,wEAAT;AACA,aAAAC,OAAA,GAAU,yEAAV;AAEA,aAAAzF,KAAA,GAAQ,+DAAR;AACA,aAAAuC,QAAA,GAAW,wDAAX;AACA,aAAAxC,IAAA,GAAO,IAAI,+CAAJ,EAAP;;AAEY,aAAAI,eAAA,GAAkB,UAACC,UAAD;AAAA,iBAC5B,IAAI,gGAA2BC,oBAA/B,CAAoDD,UAApD,CAD4B;AAAA,SAAlB;AAOR;;;;mCAEI,CAAW;;;oCAEPsF,K,EAAO;AACjB,eAAKC,MAAL,CAAYC,WAAZ,GAA0BF,KAA1B;AACD;;;qCAEYG,K,EAAO;AAClB9I,sBAAY,CAAC+I,UAAb,CAAwB,wBAAxB;AACA/I,sBAAY,CAACI,OAAb,CACE,wBADF,EAEE4I,IAAI,CAACC,SAAL,CAAe;AACbf,iBAAK,EAAEY,KAAK,CAACI,KAAN,CAAY7C,MAAZ,CAAmB,CAAnB,EAAsBC,GADhB;AAEb7C,gBAAI,EAAEqF,KAAK,CAACrF,IAFC;AAGb0F,mBAAO,EAAEL,KAAK,CAACK,OAHF;AAIbtF,uBAAW,EAAEiF,KAAK,CAACI,KAAN,CAAYzF,IAJZ;AAKb2F,sBAAU,EAAEN,KAAK,CAACM,UALL;AAMbrL,cAAE,EAAE+K,KAAK,CAAC/K,EANG;AAObsL,yBAAa,EAAEP,KAAK,CAACO;AAPR,WAAf,CAFF;AAaA,eAAKtB,KAAL,CAAWrI,QAAX,CAAoB,CAAC,eAAD,EAAkBoJ,KAAK,CAAC/K,EAAxB,CAApB;AACD;;;wCAEeuL,I,EAAqC;AAAA;;AACnD,cAAMC,GAAG,GAAGD,IAAI,CAACR,KAAL,CAAWI,KAAX,CAAiB7C,MAA7B;AACA,cAAMF,OAAO,GAAG;AACd1H,iBAAK,EAAE6K,IAAI,CAACR,KAAL,CAAWrF,IADJ;AAEdxC,gBAAI,EAAE,qDAFQ;AAGdmF,oBAAQ,EAAEmD,GAAG,CAACvI,MAAJ,GAAa,CAAb,GAAiBuI,GAAG,CAAC,CAAD,CAAH,CAAOjD,GAAxB,GAA8B,2BAH1B;AAIdC,6BAAiB,EAAE;AAJL,WAAhB;AAOA,eAAKf,QAAL,CAAc,UAACgB,MAAD,EAAY;AACxB,gBAAIA,MAAM,CAACvC,KAAX,EAAkB;AAChB,qBAAI,CAACjB,IAAL,CAAUmB,IAAV,GAAiB,OAAI,CAACtE,IAAL,CACd2J,kBADc,CACK,OAAI,CAACnG,UADV,EACsB;AACnCoG,sBAAM,EAAE,CAAC;AAAEC,qBAAG,EAAEJ,IAAI,CAACR,KAAL,CAAWY;AAAlB,iBAAD;AAD2B,eADtB,EAIdrF,SAJc,CAKb,UAACC,GAAD,EAAS;AACP,uBAAI,CAACrB,KAAL,CAAWsB,IAAX,CAAgB;AACdC,sBAAI,EAAE,SADQ;AAEd/F,uBAAK,EAAE;AAFO,iBAAhB;;AAIA,uBAAI,CAACqB,KAAL,CAAWiB,QAAX,CAAoB,IAAI,4DAAJ,CAAe,kFAAf,CAApB;;AACA,uBAAI,CAACqC,eAAL,CAAqB,OAAI,CAACC,UAA1B;AACD,eAZY,EAab,UAACoB,GAAD,EAAS;AACP,uBAAI,CAACxB,KAAL,CAAWsB,IAAX,CAAgB;AACdC,sBAAI,EAAE,OADQ;AAEd/F,uBAAK,EAAE;AAFO,iBAAhB;;AAIA4J,uBAAO,CAACC,GAAR,CAAY7D,GAAZ;AACD,eAnBY,CAAjB;AAqBD;AACF,WAxBD,EAwBG0B,OAxBH;AAyBD;;;sCAEa;AACZ,eAAKnD,IAAL,CAAU0B,WAAV;AACD;;;;;;;uBArFU8D,sB,EAAsB,uH,EAAA,6J,EAAA,mH;AAAA,K;;;YAAtBA,sB;AAAsB,yC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,yb;AAAA;AAAA;ADrBnC;;AACE;;AAiCA;;AAuBF;;;;AAxD+B;;AAAA;;AAiCA;;AAAA;;;;;;;ACCjB,8DAAX,gFAAW,G,gCAAA,E,iBAAA,E,MAAA;;;;sEAdDA,sB,EAAsB;cALlC,uDAKkC;eALxB;AACT9J,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKwB,Q;;;;;;;;;;gBAChC;;;gBACA;;;gBACA;;;gBACA;;;gBACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBD;;AAKE;AAAA;;AAAA;;AAAA;AAAA;;AAEC;;AAAe;;;;;;;;AAGhB;;AAEE;AAAA;;AAAA;;AAAA;AAAA;;AAEC;;AACH;;;;;;AANF;;AACE;;AAMF;;;;;;;;AALI;;AAAA;;;;;;AAiBM;;;;;;AAWE;;AAIE;;AACF;;;;;;AADE;;AAAA;;;;;;AALJ;;AACE;;AAMF;;;;;;;;AALI;;AAAA;;;;;;AAHN;;AACE;;AAQF;;;;;;AARO;;AAAA;;;;;;AAcP;;;;;;AASI;;AAIE;;AACF;;;;;;AADE;;AAAA;;;;;;AALJ;;AACE;;AAMF;;;;;;;;AALI;;AAAA;;;;;;AAHN;;AACE;;AAQF;;;;;;AARO;;AAAA;;;;;;;;AAgCL;;AAEE;AAAA;;AAAA;;AAAA;AAAA;;AAGA;;AACF;;;;;;;;AAhFV;;AACE;;AAA8B;AAAA;;AAAA;;AAAA,yCAAyB,KAAzB;AAA8B,SAA9B;;AAAgC;;AAC9D;;AACE;;AACE;;AAAI;;AAAqC;;AACzC;;AACE;;AACE;;AAAS;;AAAuB;;AAAU;;AAC5C;;AACA;;AACE;;AAQF;;AACA;;AAUF;;AACA;;AACE;;AACE;;AAAY;;AAAuB;;AAAU;;AAC/C;;AACA;;AAOA;;AAUF;;AACA;;AACE;;AACE;;AACE;;AAMA;;AACF;;AACA;;AACE;;AAMA;;AACF;;AACF;;AACA;;AACE;;AAOA;;AACE;AAAA;;AAAA;;AAAA,kCAAyB,KAAzB;AAAgC,iBAAF,qBAAe,KAAb;AAAkB,SAAlD;;AAEC;;AACH;;AACF;;AACF;;AACF;;AACF;;AACA;;AAGE;AAAA;;AAAA;;AAAA,yCAAyB,KAAzB;AAA8B,SAA9B;;AACD;;AACH;;;;;;AA/FsB;;AAGb;;AAAA;;AAQG;;AAAA;;AAQgB;;AAAA;;AAgBlB;;AAAA;;AAMkB;;AAAA;;AAkBd;;AAAA;;AASA;;AAAA;;AAOF;;AAAA;;;;QClED+K,2B;AAwBX,2CACU7G,EADV,EAEUjD,IAFV,EAGUC,KAHV,EAIUiI,KAJV,EAIuB;AAAA;;AAHb,aAAAjF,EAAA,GAAAA,EAAA;AACA,aAAAjD,IAAA,GAAAA,IAAA;AACA,aAAAC,KAAA,GAAAA,KAAA;AACA,aAAAiI,KAAA,GAAAA,KAAA;AA1BV,aAAAhF,WAAA,GAAmB,6CAAnB;AAKA,aAAAC,IAAA,GAAO,IAAI,+CAAJ,EAAP;AACA,aAAA4G,YAAA,GAAe,IAAI,+CAAJ,EAAf;AACA,aAAA3G,KAAA,GAAQ,+DAAR;AACA,aAAA4G,cAAA,GAAsBb,IAAI,CAACc,KAAL,CAAW9J,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAX,CAAtB;;AAOY,aAAAmF,eAAA,GAAkB;AAAA,cAACC,GAAD,uEAAO,IAAP;AAAA,iBAC5B,IAAI,sFAAsBC,aAA1B,CAAwCD,GAAxC,CAD4B;AAAA,SAAlB;AAYR;;;;mCAMI;AAAA;;AACN,eAAK0E,SAAL,GAAiB,KAAKjH,EAAL,CAAQU,KAAR,CAAc;AAC7BC,gBAAI,EAAE,wCAC4B,KAAKC,QAAL,CAAcD,IAD1C,GAEJ,CAAC,0DAAWE,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,CAArB,CAAtB,CAFI,CADuB;AAK7BC,uBAAW,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWD,SAAX,CAAqB,EAArB,CAAD,CAAL,CALgB;AAM7B,sBAAQ,CAAC,IAAD;AANqB,WAAd,CAAjB;AASA,eAAKgG,YAAL,CAAkBzF,IAAlB,GAAyB,KAAK6F,SAAL,CAAe3F,SAAf,CAAyB,UAAC4F,IAAD,EAAU;AAC1D,gBAAIA,IAAI,IAAI,OAAI,CAACJ,cAAjB,EAAiC;AAC/B,kBAAMK,OAAO,GAAGD,IAAI,CAACE,KAAL,CAAWpE,MAAX,CACd,UAACuD,IAAD;AAAA,uBAAUA,IAAI,CAACvL,EAAL,KAAY,OAAI,CAAC8L,cAAL,CAAoBxG,UAA1C;AAAA,eADc,CAAhB;;AAGA,kBAAI6G,OAAO,CAAClJ,MAAR,GAAiB,CAArB,EAAwB;AACtB,uBAAI,CAACoJ,YAAL,GAAoB,IAApB;AACD;AACF;AACF,WATwB,CAAzB;AAUD;;;uCAEcC,I,EAAwBC,K,EAA4B;AACjE,cAAID,IAAI,IAAIC,KAAZ,EAAmB;AACjB,iBAAKC,IAAL,GAAYD,KAAK,CAACb,MAAN,CAAae,GAAb,CAAiB,UAAC1B,KAAD;AAAA,qBAAWA,KAAK,CAACY,GAAjB;AAAA,aAAjB,EAAuC9I,QAAvC,EAAZ;AACA,iBAAK6J,aAAL,GAAqB,IAArB;AACD;AACF;;;sCAEaC,M,EAAQ;AAAA;;AACpB,eAAK5G,UAAL,GAAkB,IAAlB;AACA,cAAI,CAAC,KAAKiG,SAAL,CAAehG,KAApB,EAA2B;AAE3B,cAAMC,IAAI,GAAG,KAAK+F,SAAL,CAAe9F,KAA5B;AACA,cAAM0G,OAAO,GACX3G,IAAI,CAACH,WAAL,KAAqB,EAArB,GAA0BG,IAA1B,GAAiC;AAAEP,gBAAI,EAAEO,IAAI,CAACP,IAAb;AAAmB,sBAAQO,IAAI;AAA/B,WADnC;AAGA,eAAKhB,IAAL,CAAUmB,IAAV,GAAiB,KAAKtE,IAAL,CAAU+K,cAAV,CAAyBF,MAAzB,EAAiCC,OAAjC,EAA0CtG,SAA1C,CACf,UAACC,GAAD,EAAS;AACP,mBAAI,CAACuG,cAAL,CAAoBvG,GAApB;;AACA,mBAAI,CAACwG,eAAL;AACD,WAJc,EAKf,UAACrG,GAAD,EAAS;AACP,mBAAI,CAACxB,KAAL,CAAWsB,IAAX,CAAgB;AACdC,kBAAI,EAAE,OADQ;AAEd/F,mBAAK,EAAE;AAFO,aAAhB;;AAIA4J,mBAAO,CAACC,GAAR,CAAY7D,GAAZ;AACD,WAXc,CAAjB;AAaD;;;0CAEiB;AAAA;;AAChBzE,sBAAY,CAAC+I,UAAb,CAAwB,gBAAxB;AACA,eAAKjJ,KAAL,CAAWiB,QAAX,CAAoB,IAAI,4DAAJ,CAAe,yEAAf,CAApB;AACA,eAAK0J,aAAL,GAAqB,KAArB;AACA,eAAK3G,UAAL,GAAkB,KAAlB;AAEA9D,sBAAY,CAACI,OAAb,CACE,gBADF,EAEE4I,IAAI,CAACC,SAAL,CAAe;AAAE5F,sBAAU,EAAE,KAAKK,QAAL,CAAc3F,EAA5B;AAAgCgN,uBAAW,EAAE;AAA7C,WAAf,CAFF;AAKAC,oBAAU,CAAC,YAAM;AACf,mBAAI,CAACZ,YAAL,GAAoB,IAApB;AACA,mBAAI,CAACP,cAAL,GAAsBb,IAAI,CAACc,KAAL,CAAW9J,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAX,CAAtB;AACD,WAHS,EAGP,IAHO,CAAV;AAID;;;uCAEcqE,G,EAA2B;AAAA;;AACxC,cAAM2G,WAAW,GAAG,KAAKC,cAAL,CAAoBzB,MAApB,CACjBe,GADiB,CACb,UAAC1B,KAAD;AAAA,mBAAWA,KAAK,CAACY,GAAjB;AAAA,WADa,EAEjB9I,QAFiB,EAApB;;AAIA,cAAI0D,GAAJ,EAAS;AACP,iBAAKzE,IAAL,CAAUsL,oBAAV,CAA+B7G,GAAG,CAACvG,EAAnC,EAAuCkN,WAAvC,EAAoD5G,SAApD,CACE,UAACC,GAAD,EAAS;AACP,qBAAI,CAACc,eAAL,CAAqB;AAAEuB,qBAAK,EAAE;AAAT,eAArB;;AACA,qBAAI,CAAC1D,KAAL,CAAWsB,IAAX,CAAgB;AACdC,oBAAI,EAAE,SADQ;AAEd/F,qBAAK,EAAE;AAFO,eAAhB;AAID,aAPH,EAQE,UAACgG,GAAD,EAAS;AACP,qBAAI,CAACxB,KAAL,CAAWsB,IAAX,CAAgB;AACdC,oBAAI,EAAE,OADQ;AAEd/F,qBAAK,EAAE;AAFO,eAAhB;;AAIA4J,qBAAO,CAACC,GAAR,CAAY7D,GAAZ;AACD,aAdH;AAgBD;AACF;;;uCAEc;AACb,eAAKsD,KAAL,CAAWrI,QAAX,CAAoB,CAAC,aAAD,CAApB;AACD;;;sCAEa;AACZ,eAAKsD,IAAL,CAAU0B,WAAV;AACA,eAAKkF,YAAL,CAAkBlF,WAAlB;AACD;;;4BAzGQ;AACP,iBAAO,KAAKqF,SAAL,CAAepF,QAAtB;AACD;;;;;;;uBAjCUgF,2B,EAA2B,2H,EAAA,6J,EAAA,kH,EAAA,wH;AAAA,K;;;YAA3BA,2B;AAA2B,8C;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,k9C;AAAA;AAAA;AD5BxC;;AACE;;AASA;;AASA;;AAgGF;;;;AAjHI;;AAAA;;AAQG;;AAAA;;AASA;;AAAA;;;;;;AC0BO,8DAAX,gFAAW,G,qCAAA,E,iBAAA,E,MAAA;AAG+B,8DAA1C,2DAAO,kFAAoByB,aAA3B,CAA0C,G,qCAAA,E,WAAA,E,MAAA;;;;sEApBhCzB,2B,EAA2B;cALvC,uDAKuC;eAL7B;AACTjL,kBAAQ,EAAE,yBADD;AAETC,qBAAW,EAAE,sCAFJ;AAGTC,mBAAS,EAAE,CAAC,sCAAD;AAHF,S;AAK6B,Q;;;;;;;;;;;;gBAarC;;;gBACA;;;gBACA;;;;;;;;;;;;;;;;;;;;;;AC3CH;AAAA;;;AAAA;AAAA;AAAA;;AAAA,QAAMkG,MAAM,GAAG;AACbrB,UAAI,EAAE,CACJ;AAAEsB,aAAK,EAAE,UAAT;AAAqBC,aAAK,EAAE;AAA5B,OADI,EAEJ;AAAED,aAAK,EAAE,WAAT;AAAsBC,aAAK,EAAE;AAA7B,OAFI,CADO;AAKbnB,iBAAW,EAAE,CAAC;AAAEkB,aAAK,EAAE,WAAT;AAAsBC,aAAK,EAAE;AAA7B,OAAD;AALA,KAAf;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaqG,gB;AAEX,kCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,gB;AAAgB,K;;;YAAhBA,gB;AAAgB,kC;AAAA,c;AAAA,a;AAAA,8K;AAAA;AAAA;ACP7B;;AACE;;AACE;;AACA;;AACA;;AACA;;AACF;;AACF;;;;;;;;sEDAaA,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACT3M,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEP7B;;AAIE;;AACA;;AACE;;AACE;;AACE;;AAAS;;AAAK;;AAAsC;;AACtD;;AACA;;AACE;;AAEF;;AAEA;;AACA;;AAAG;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AAAa;;AAElB;;AACF;;AACF;;;;;;;;AAnBE;;AAM6B;;AAAA;;;;QCmBlB0M,6B;AAmBX,6CAAoBC,IAApB,EAA+CzL,KAA/C,EAA6D;AAAA;;AAAzC,aAAAyL,IAAA,GAAAA,IAAA;AAA2B,aAAAzL,KAAA,GAAAA,KAAA;AAlB/C,aAAA0L,QAAA,GAAW,IAAI,+CAAJ,EAAX;AACA,aAAAC,SAAA,GAAY,uFAAZ;AAEU,aAAAC,cAAA,GAAiB,IAAI,0DAAJ,EAAjB;;AAGE,aAAAC,WAAA,GAAc,UAAC9J,MAAD;AAAA,iBACxB,IAAI,iFAAoB8J,WAAxB,CAAoC9J,MAApC,CADwB;AAAA,SAAd;;AAGA,aAAA+J,gBAAA,GAAmB;AAAA,iBAC7B,IAAI,wFAAuBC,gBAA3B,EAD6B;AAAA,SAAnB;;AAGA,aAAAzG,eAAA,GAAkB,UAACC,GAAD;AAAA,iBAC5B,IAAI,sFAAsBC,aAA1B,CAAwCD,GAAxC,CAD4B;AAAA,SAAlB;;AAGA,aAAAgC,kBAAA,GAAqB;AAAA,iBAC/B,IAAI,6EAAkBC,kBAAtB,EAD+B;AAAA,SAArB;AAGmD;;;;mCAEvD,CAAW;;;yCAEF;AAAA;;AAAA,qCACU,KAAKxH,KAAL,CAAWyI,QAAX,EADV;AAAA,cACPuD,YADO,wBACPA,YADO;;AAGf,eAAKN,QAAL,CAAcrH,IAAd,GAAqB,KAAKoH,IAAL,CAAUtJ,YAAV,GAAyBoC,SAAzB,CAAmC,UAACC,GAAD,EAAS;AAC/DtE,wBAAY,CAAC+I,UAAb,CAAwB,cAAxB;AACA/I,wBAAY,CAACI,OAAb,CAAqB,cAArB,EAAqCkE,GAAG,CAACyH,YAAzC;;AAEA,mBAAI,CAACJ,WAAL,CAAiB;AAAEK,yBAAW,EAAE;AAAf,aAAjB;;AACA,mBAAI,CAACN,cAAL,CAAoBO,IAApB;;AAEA,gBAAI,CAACH,YAAL,EAAmB;AACjB,qBAAI,CAACF,gBAAL;;AACA,qBAAI,CAACvE,kBAAL;;AACA,qBAAI,CAACjC,eAAL,CAAqB;AACnBuB,qBAAK,EAAE;AADY,eAArB;AAGD;AACF,WAdoB,CAArB;AAeD;;;sCAEa;AACZ,eAAK6E,QAAL,CAAc9G,WAAd;AACD;;;;;;;uBA7CU4G,6B,EAA6B,gI,EAAA,kH;AAAA,K;;;YAA7BA,6B;AAA6B,iD;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,kN;AAAA;AAAA;AD3B1C;;;;;;AACE;;;;;;;AC+ByC,8DAAxC,2DAAO,6EAAkBY,aAAzB,CAAwC,G,uCAAA,E,SAAA,E,MAAA;AAE7B,8DAAX,gFAAW,G,uCAAA,E,aAAA,E,MAAA;AAGA,8DAAX,gFAAW,G,uCAAA,E,kBAAA,E,MAAA;AAGA,8DAAX,gFAAW,G,uCAAA,E,iBAAA,E,MAAA;AAGA,8DAAX,gFAAW,G,uCAAA,E,oBAAA,E,MAAA;;;;sEAhBDZ,6B,EAA6B;cALzC,uDAKyC;eAL/B;AACT5M,kBAAQ,EAAE,4BADD;AAETC,qBAAW,EAAE,yCAFJ;AAGTC,mBAAS,EAAE,CAAC,yCAAD;AAHF,S;AAK+B,Q;;;;;;;;gBAIvC;;;;;;;;;;;;;;;;;;;;;;;;;AC/BH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACaM;;AACG;;AACH;;;;;;;AADG;;AAAA;;;;QDFIuN,kB;AAOX,kCAAoBpE,KAApB,EAAmC;AAAA;;AAAf,aAAAA,KAAA,GAAAA,KAAA;AANpB,aAAAqE,WAAA,GAAc,6EAAd;AACA,aAAA3D,MAAA,GAAS,wEAAT;AACA,aAAA4D,QAAA,GAAW,kDAAX;AAIqC;;;;mCAE7B,CAAW;;;4CAECvD,K,EAAO;AACzB9I,sBAAY,CAAC+I,UAAb,CAAwB,wBAAxB;AACA/I,sBAAY,CAACI,OAAb,CACE,wBADF,EAEE4I,IAAI,CAACC,SAAL,CAAe;AACbf,iBAAK,EAAEY,KAAK,CAACI,KAAN,CAAY7C,MAAZ,CAAmB,CAAnB,EAAsBC,GADhB;AAEb7C,gBAAI,EAAEqF,KAAK,CAACrF,IAFC;AAGb0F,mBAAO,EAAEL,KAAK,CAACK,OAHF;AAIbtF,uBAAW,EAAEiF,KAAK,CAACI,KAAN,CAAYzF,IAJZ;AAKb2F,sBAAU,EAAEN,KAAK,CAACM,UALL;AAMbrL,cAAE,EAAE+K,KAAK,CAAC/K,EANG;AAObsL,yBAAa,EAAEP,KAAK,CAACO;AAPR,WAAf,CAFF;AAaA,eAAKtB,KAAL,CAAWrI,QAAX,CAAoB,CAAC,eAAD,EAAkBoJ,KAAK,CAAC/K,EAAxB,CAApB;AACD;;;;;;;uBA3BUoO,kB,EAAkB,uH;AAAA,K;;;YAAlBA,kB;AAAkB,qC;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,mW;AAAA;AAAA;ACZ/B;;AACE;;AACE;;AAKF;;AACA;;AACE;;AAAG;AAAA,mBAAS,IAAAG,mBAAA,WAAT;AAAmC,WAAnC;;AACD;;AAAI;;AAAgB;;AACtB;;AACA;;AACE;;AAGF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AAKE;;AACF;;AACA;;AAAG;AAAA,mBAAS,IAAAA,mBAAA,WAAT;AAAmC,WAAnC;;AACD;;AACF;;AACF;;AACF;;AACF;;;;AA/BM;;AAAA;;AAMI;;AAAA;;AAGE;;AAAA;;AAON;;AAAA;;AAIE;;AAAA;;AAIS;;AAAA;;AAGA;;AAAA;;;;;;;;;sEDnBJH,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTzN,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKoB,Q;;;;;;gBAK5B;;;;;;;;;;;;;;;;;;;;AEjBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,sE,CAUA;;;QAWa2N,uB;AAEX;AAEA,uCACUhB,IADV,EAEUzL,KAFV,EAGUiI,KAHV,EAGuB;AAAA;;AAFb,aAAAwD,IAAA,GAAAA,IAAA;AACA,aAAAzL,KAAA,GAAAA,KAAA;AACA,aAAAiI,KAAA,GAAAA,KAAA;AANV,aAAA9E,KAAA,GAAQ,yDAAR;AAOI;;;;kCAGFuJ,O,EACAlN,I,EAAiB;AAAA;;AAEjB;AACA,cAAMmN,SAAS,GAAG,yDAAUD,OAAO,CAAClG,GAAlB,EAAuB,CAAC,OAAD,CAAvB,CAAlB;;AACA,cAAImG,SAAS,CAACzL,MAAV,GAAmB,CAAvB,EAA0B;AACxB,mBAAO1B,IAAI,CAACoN,MAAL,CAAYF,OAAZ,EAAqBG,IAArB,CACL,6DAAM,CAAN,CADK,EAEL,kEAAW,UAAClI,GAAD,EAAS;AAClB,qBAAI,CAACsD,KAAL,CAAWrI,QAAX,CAAoB,CAAC,OAAD,CAApB;;AACA,qBAAO,wDAAW+E,GAAX,CAAP;AACD,aAHD,CAFK,CAAP;AAOD;;AAED,iBAAOnF,IAAI,CAACoN,MAAL,CAAYF,OAAZ,EAAqBG,IAArB,EACL;AACA,uEAAM,CAAN,CAFK,EAGL;AACA,4EAAW,UAAClI,GAAD,EAAS;AAClB,mBAAI,CAACxB,KAAL,CAAWsB,IAAX,CAAgB;AACdC,kBAAI,EAAE,OADQ;AAEd/F,mBAAK,EAAE,cAFO;AAGdwC,kBAAI,EAAE;AAHQ,aAAhB;;AAMA,mBAAI,CAACnB,KAAL,CAAWiB,QAAX,CACE,IAAI,gEAAJ,CAAmB,CAAC,mEAAD,EAAgB;AAAEiL,yBAAW,EAAE;AAAf,aAAhB,CAAnB,CADF;;AAGA,mBAAO,wDAAWvH,GAAX,CAAP;AACD,WAXD,CAJK,EAgBL,gEAAS,YAAM,CACb;AACD,WAFD,CAhBK,CAAP;AAoBD;;;;;;;uBA9CU8H,uB,EAAuB,sH,EAAA,yG,EAAA,8G;AAAA,K;;;aAAvBA,uB;AAAuB,eAAvBA,uBAAuB;;;;;sEAAvBA,uB,EAAuB;cADnC;AACmC,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWaK,sB;AACX,wCAAc;AAAA;AAAE;;;;kCAGdJ,O,EACAlN,I,EAAiB;AAEjB;AAEA,cAAMmN,SAAS,GAAG,yDAAUD,OAAO,CAAClG,GAAlB,EAAuB,CAAC,OAAD,CAAvB,CAAlB;AACA,cAAImG,SAAS,CAACzL,MAAV,GAAmB,CAAvB,EAA0B,OAAO1B,IAAI,CAACoN,MAAL,CAAYF,OAAZ,CAAP;AAE1B,cAAMK,SAAS,GAAGL,OAAO,CAACM,KAAR,CAAc;AAC9BC,sBAAU,EAAE;AACVC,oBAAM,EAAE,kBADE;AAEV,8BAAgB,kBAFN;AAGVxL,2BAAa,mBAAYxB,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAZ;AAHH;AADkB,WAAd,CAAlB;AAOA,iBAAOX,IAAI,CAACoN,MAAL,CAAYG,SAAZ,CAAP;AACD;;;;;;;uBApBUD,sB;AAAsB,K;;;aAAtBA,sB;AAAsB,eAAtBA,sBAAsB;;;;;sEAAtBA,sB,EAAsB;cADlC;AACkC,Q;;;;;;;;;;;;;;;;;;;;ACXnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIO,QAAMK,wBAAwB,GAAG,CACtC;AACEC,aAAO,EAAE,sEADX;AAEEC,cAAQ,EAAE,kFAFZ;AAGEC,WAAK,EAAE;AAHT,KADsC,EAMtC;AACEF,aAAO,EAAE,sEADX;AAEEC,cAAQ,EAAE,gFAFZ;AAGEC,WAAK,EAAE;AAHT,KANsC,CAAjC;;;;;;;;;;;;;;;;ACJP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAEO,QAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD,EAAiBC,QAAjB,EAA6C;AACpE,UAAMC,MAAM,GAAGF,MAAM,CAACG,KAAP,CAAa,GAAb,EAAkB,CAAlB,EAAqBA,KAArB,CAA2B,GAA3B,EAAgC1H,MAAhC,CAAuC2H,OAAvC,CAAf;AACA,aAAO,4DAAaF,MAAb,EAAqBD,QAArB,CAAP;AACD,KAHM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACgBG;;AAAsC;;;;AAEpC;;;;;;;;AAFoC;;AAAA;;;;;;AAWpC;;;;;;;;;;;;;AAEE,mKAAiC,WAAjC,EAAiC,SAAjC;;;;;;AAKF;;AAOE;;AAAY;;;;;;AAAZ;;AAAA;;;;;;AAiBR;;;;;;;;;;;AAEE,sFAAuC,SAAvC,EAAuC,IAAvC;;;;;;;;AAWF;;AAIE;;AACE;;AACF;;AACA;;AACE;;AACE;;AAAI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACF;;AACF;;AACA;;AACE;;AAAa;;AAAM;;AAAwB;;AAC7C;;AACF;;AACF;;AACF;;;;;;AAZS;;AAAA;;AAKD;;AAAA;;AAGmB;;AAAA;;;;;;AAY/B;;MC3EF;;;QAOaI,sB;AACX,sCAAoB5F,KAApB,EAA2C6F,WAA3C,EAAwE;AAAA;;AAApD,aAAA7F,KAAA,GAAAA,KAAA;AAAuB,aAAA6F,WAAA,GAAAA,WAAA;;AAI/B,aAAAC,kBAAA,GAAqB,UAACC,QAAD;AAAA,iBAC/B,IAAI,4FAAyBC,kBAA7B,CAAgDD,QAAhD,CAD+B;AAAA,SAArB;;AAGA,aAAAE,mBAAA,GAAsB,UAACF,QAAD;AAAA,iBAChC,IAAI,6FAAyBG,kBAA7B,CAAgDH,QAAhD,CADgC;AAAA,SAAtB;;AAGA,aAAAI,oBAAA,GAAuB,UAACJ,QAAD;AAAA,iBACjC,IAAI,iGAA2BK,oBAA/B,CAAoDL,QAApD,CADiC;AAAA,SAAvB;;AATV,aAAK/F,KAAL,CAAWqG,kBAAX,CAA8BC,gBAA9B,GAAiD;AAAA,iBAAM,KAAN;AAAA,SAAjD;AACD;;;;mCAuBO;AACN,cAAMP,QAAQ,GAAG,KAAKF,WAAL,CAAiBrF,QAAjB,CAA0B+F,QAA1B,CAAmCpM,GAAnC,CAAuC,UAAvC,CAAjB;AACA,eAAK2L,kBAAL,CAAwBC,QAAxB;AACA,eAAKE,mBAAL,CAAyBF,QAAzB;AACA,eAAKI,oBAAL,CAA0BJ,QAA1B;AACD;;;kCAES3F,C,EAAG;AACX,iBAAOA,CAAC,CAACvH,QAAF,GAAaC,OAAb,CAAqB,uBAArB,EAA8C,GAA9C,CAAP;AACD;;;8CAEqBiN,Q,EAAU;AAC9B,eAAK/F,KAAL,CAAWrI,QAAX,CAAoB,CAAC,QAAD,EAAWoO,QAAX,CAApB;AACAzF,iBAAO,CAACC,GAAR,CAAYwF,QAAZ;AACD;;;;;;;uBAxCUH,sB,EAAsB,wH,EAAA,gI;AAAA,K;;;YAAtBA,sB;AAAsB,yC;AAAA,e;AAAA,c;AAAA,kpB;AAAA;AAAA;AD9BnC;;AACE;;AACE;;AACE;;AAAI;;AAAkB;;AACtB;;AAAG;;AAAkD;;AACvD;;AACA;;AACF;;AAEA;;AACE;;AACE;;AACE;;;;AACF;;AACA;;AACE;;AAAkB;;;;AAAoC;;AACtD;;AACE;;AAAO;;AAAQ;;AAAS;;AAAS;;AACjC;;;;AAGF;;AACA;;AACE;;AAAO;;AAAQ;;AAAU;;AAAS;;AAClC;;AAAO;;;;AAA2C;;AACpD;;AACA;;AACE;;AACG;;AAAQ;;AAAM;;AACf;;;;;;AAKF;;AACA;;AACE;;;;AAQC;;AACH;;AACF;;AACF;;AACF;;AAEA;;AACE;;AAAI;;AAAU;;AAChB;;AACA;;AACA;;AAME;;AAMF;;AAEA;;AACE;;AAAI;;AAAe;;AACrB;;AACA;;AACA;;AACE;;;;AAkBF;;AACF;;AAEA;;AACE;AAAA,mBAAkB,IAAAY,QAAA,EAAlB;AAA4B,WAA5B;;AACD;;AAED;;;;AACF;;;;;;;;;;;;;AAvFa;;AAAA;;AAGa;;AAAA;;AAGT;;AAAA;;AAMA;;AAAA;;AAMH;;AAAA;;AAOA;;AAAA;;AAwBN;;AAAA;;AAcA;;AAAA;;AAuBO;;AAAA;;;;;;;AC/DD,8DAAX,gFAAW,G,gCAAA,E,oBAAA,E,MAAA;AAGA,8DAAX,gFAAW,G,gCAAA,E,qBAAA,E,MAAA;AAGA,8DAAX,gFAAW,G,gCAAA,E,sBAAA,E,MAAA;AAIZ,8DADC,2DAAO,uFAAuBV,kBAA9B,CACD,G,gCAAA,E,gBAAA,E,MAAA;AAGA,8DADC,2DAAO,yFAAwBW,eAA/B,CACD,G,gCAAA,E,iBAAA,E,MAAA;AAGA,8DADC,2DAAO,4FAAyBC,cAAhC,CACD,G,gCAAA,E,YAAA,E,MAAA;AAGA,8DADC,2DAAO,yEAAgBpH,kBAAvB,CACD,G,gCAAA,E,eAAA,E,MAAA;;;;sEAxBWsG,sB,EAAsB;cALlC,uDAKkC;eALxB;AACTjP,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKwB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNzB;;AAGE;;AACF;;;;;;;AADE;;AAAA;;;;;;AAmEF;;AAAkC;;;;AAEhC;;;;;;;;AAFgC;;AAAA;;;;;;AAwB1C;;;;;;;;;;QCjGW8P,qB;AAUX,qCAAoB3G,KAApB,EAA2C;AAAA;;AAAvB,aAAAA,KAAA,GAAAA,KAAA;AATpB,aAAAsE,QAAA,GAAW,kDAAX;;AAEY,aAAAsC,iBAAA,GAAoB,UAAC7F,KAAD;AAAA,iBAC9B,IAAI,0FAAwB8F,iBAA5B,CAA8C9F,KAA9C,CAD8B;AAAA,SAApB;AAOiC;;;;mCAErC;AACN,cAAMA,KAAK,GAAGE,IAAI,CAACc,KAAL,CAAW9J,YAAY,CAACC,OAAb,CAAqB,wBAArB,CAAX,CAAd;AACA,eAAK0O,iBAAL,CAAuB7F,KAAvB,EAFM,CAIN;AACA;AACA;AACD;;;mCAEU+F,G,EAAU;AACnB,kBAAQA,GAAR;AACE,iBAAK,CAAL;AACE,qBAAO,kBAAP;;AACF,iBAAK,CAAL;AACE,qBAAO,mBAAP;;AACF,iBAAK,CAAL;AACE,qBAAO,mBAAP;;AACF,iBAAK,CAAL;AACE,qBAAO,kBAAP;;AACF,iBAAK,CAAL;AACE,qBAAO,kBAAP;;AACF,iBAAK,CAAL;AACE,qBAAO,mBAAP;;AACF,iBAAK,CAAL;AACE,qBAAO,mBAAP;;AACF,iBAAK,CAAL;AACE,qBAAO,QAAP;;AACF,iBAAK,CAAL;AACE,qBAAO,mBAAP;;AACF,iBAAK,MAAM,KAAN,IAAa,KAAlB;AACE,qBAAO,mBAAP;;AACF,iBAAK,MAAM,KAAN,IAAa,KAAlB;AACE,qBAAO,kBAAP;;AACF;AACE,qBAAO,kBAAP;AAxBJ;AA0BD;;;qCAEYC,I,EAAM;AACjB,iBAAOA,IAAI,KAAK,CAAT,GAAa,OAAb,GAAuB,OAA9B;AACD;;;kCAESC,C,EAAG;AACX,cAAIA,CAAJ,EAAO;AACL,gBAAIC,GAAG,GAAGC,UAAU,CAAC,CAACF,CAAC,CAACG,WAAF,GAAgB,IAAhB,GAAuB,EAAxB,EAA4BC,OAA5B,CAAoC,CAApC,CAAD,CAApB;AACA,gBAAIC,IAAI,GAAG7M,QAAQ,CAACwM,CAAC,CAACM,KAAF,CAAQF,OAAR,EAAD,CAAnB;AACA,mBAAO9N,IAAI,CAACC,KAAL,CAAW0N,GAAG,GAAGI,IAAjB,CAAP;AACD;AACF;;;iCAEQL,C,EAAG;AACV,iBAAO1N,IAAI,CAACC,KAAL,CAAW,KAAKgO,SAAL,CAAeP,CAAf,KAAoBA,CAAC,SAAD,IAAAA,CAAC,WAAD,GAAC,MAAD,GAAAA,CAAC,CAAEQ,cAAvB,CAAX,CAAP;AACD;;;;;;;uBAhEUb,qB,EAAqB,+H;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA,e;AAAA,c;AAAA,0c;AAAA;AAAA;ADrBlC;;AACE;;AACE;;AACE;;AAAI;;AAAa;;AACjB;;AAAG;;AAAqC;;AAC1C;;AACA;;AACF;;AACA;;AAAM;;AACN;;AACE;;AAOE;;;;AAIA;;AACE;;AAAkB;;;;AAA4B;;AAC9C;;AACE;;;;AAKF;;AACA;;AAAgB;;;;AAAmC;;AACnD;;;;AAIG;;AAAe;;AAEpB;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAmB;;;;AAEjB;;AACF;;AAAoB;;AAAQ;;AAC9B;;AACF;;AACA;;AACE;;AACE;;AAA4B;;;;AAE1B;;AACF;;AAAoB;;AAAG;;AACzB;;AACF;;AACA;;AACE;;AACE;;AAAmB;;;;AAEjB;;AACF;;AAAoB;;AAAQ;;AAC9B;;AACF;;AACA;;AACE;;AACE;;AAAmB;;;;AAEjB;;AACF;;AAAoB;;AAAc;;AACpC;;AACF;;AACA;;AACE;;AACE;;AAAmB;;;;AAEjB;;AACF;;AAAoB;;AAAU;;AAChC;;AACF;;AACA;;AACE;;AACE;;AAAmB;;;;AAAmC;;AACtD;;AAAoB;;AAAU;;AAChC;;AACF;;AACA;;AACE;;AACE;;AAAmB;;;;AAAyC;;AAC5D;;AAAoB;;AAAI;;AAC1B;;AACF;;AACA;;AACE;;AACE;;AAGA;;AAAoB;;AAAK;;AAC3B;;AACF;;AACA;;AACE;;AACE;;AAAmB;;AAAE;;AACrB;;AAAoB;;AAAQ;;AAC9B;;AACF;;AACA;;AACE;;AACE;;AAAmB;;AAAE;;AACrB;;AAAoB;;AAAQ;;AAC9B;;AACF;;AACF;;AACF;;AACA;;AACE;AAAA,mBAAkB,IAAAH,QAAA,EAAlB;AAA4B,WAA5B;;AACD;;AAED;;;;AACF;;;;;;;;;;;;;;;;;;;;;;AArGQ;;AAAA;;AAIkB;;AAAA;;AAGd;;AAAA;;AAKY;;AAAA;;AAEd;;AAAA;;AAUmB;;AAAA;;AAQS;;AAAA;;AAQT;;AAAA;;AAQA;;AAAA;;AAQA;;AAAA;;AAQA;;AAAA;;AAMA;;AAAA;;AAMA;;AAAA;;AAwBd;;AAAA;;;;;;;AC9FD,8DAAX,gFAAW,G,+BAAA,E,mBAAA,E,MAAA;AAGqC,8DAAhD,2DAAO,qFAAsBI,iBAA7B,CAAgD,G,+BAAA,E,QAAA,E,MAAA;;;;sEANtCD,qB,EAAqB;cALjC,uDAKiC;eALvB;AACThQ,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;;;;ACrBlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWa4Q,iB;AAGX,iCACSjE,IADT,EAESqC,WAFT,EAGSvO,MAHT,EAGuB;AAAA;;AAFd,aAAAkM,IAAA,GAAAA,IAAA;AACA,aAAAqC,WAAA,GAAAA,WAAA;AACA,aAAAvO,MAAA,GAAAA,MAAA;AALT,aAAAoQ,QAAA,GAAW,IAAI,+CAAJ,EAAX;AAMI;;;;mCAEI;AAAA;;AACN,eAAKlE,IAAL,CAAUmE,gBAAV;AAEA,cAAMC,UAAU,GAAG3P,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAnB;AACA,eAAK2N,WAAL,CAAiBgC,WAAjB,CAA6BjD,IAA7B,GAAoCtI,SAApC,CAA8C,UAACC,GAAD,EAAS;AACrD,gBAAIA,GAAG,CAAC/E,KAAJ,KAAc,IAAd,IAAsB+E,GAAG,CAAC/E,KAAJ,KAAcoQ,UAAxC,EAAoD;AAClDtH,qBAAO,CAACC,GAAR,CAAY,gBAAZ;;AACA,qBAAI,CAACjJ,MAAL,CAAYK,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD,aAHD,MAGO;AACLM,0BAAY,CAAC+I,UAAb,CAAwB,OAAxB;AACA,qBAAI,CAAC0G,QAAL,CAActL,IAAd,GAAqB,OAAI,CAACoH,IAAL,CAAUsE,aAAV,CAAwBvL,GAAG,CAAC3G,IAA5B,EAAkC0G,SAAlC,CACnB,UAACC,GAAD,EAAS;AACPtE,4BAAY,CAACI,OAAb,CAAqB,cAArB,EAAqCkE,GAAG,CAACyH,YAAzC;AACA/L,4BAAY,CAACI,OAAb,CAAqB,eAArB,EAAsCkE,GAAG,CAACwL,aAA1C;AACA9P,4BAAY,CAACI,OAAb,CAAqB,OAArB,EAA8BkE,GAAG,CAAC3D,KAAlC;AACAX,4BAAY,CAACI,OAAb,CAAqB,YAArB,EAAmCkE,GAAG,CAACyL,UAAvC;AACA/P,4BAAY,CAACI,OAAb,CAAqB,YAArB,EAAmCkE,GAAG,CAAC0L,UAAvC;;AACA,oBAAI,OAAI,CAACzE,IAAL,CAAU/L,eAAV,EAAJ,EAAiC;AAC/B;AACA,yBAAI,CAACyQ,iBAAL;AACD;AACF,eAXkB,EAYnB,UAACxL,GAAD,EAAS;AACP4D,uBAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC7D,GAAnC;AACD,eAdkB,CAArB;AAgBD;AACF,WAvBD;AAwBD;;;4CAEmB;AAClB,cAAMpC,KAAK,GAAGrC,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAd;;AACA,cAAIoC,KAAK,KAAK,IAAV,IAAkBE,QAAQ,CAACF,KAAD,CAAR,GAAkB,CAAxC,EAA2C;AACzCrC,wBAAY,CAAC+I,UAAb,CAAwB,cAAxB;AACA,iBAAK1J,MAAL,CAAYK,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD;;AAED,eAAKL,MAAL,CAAYK,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACD;;;sCAEU;AACT,eAAK+P,QAAL,CAAc/K,WAAd;AACD;;;;;;;uBAnDU8K,iB,EAAiB,sI,EAAA,+H,EAAA,uH;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,c;AAAA,a;AAAA,2D;AAAA;AAAA;ACX9B;;AACE;;AACE;;AAAI;;AAA6B;;AACnC;;AACF;;;;;;;;sEDOaA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACT9Q,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEX9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQasR,c;AACX,8BAAoB3E,IAApB,EAAuC;AAAA;;AAAnB,aAAAA,IAAA,GAAAA,IAAA;AAAqB;;;;mCAEjC,CAAW;;;mCAER;AACT,eAAKA,IAAL,CAAU4E,gBAAV;AACD;;;;;;;uBAPUD,c,EAAc,+H;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,c;AAAA,a;AAAA,2F;AAAA;AAAA;ACR3B;;AACE;;AACE;;AAAI;;AAA4B;;AAChC;;AAAQ;AAAA,mBAAS,IAAAE,QAAA,EAAT;AAAmB,WAAnB;;AAAyC;;AAAiB;;AACpE;;AACF;;;;;;;;sEDGaF,c,EAAc;cAL1B,uDAK0B;eALhB;AACTxR,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;AER3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,kE,CAGA;AACA;;;AASA,QAAMZ,MAAM,GAAW,CACrB;AACA;AAAEC,UAAI,EAAE,EAAR;AAAYC,eAAS,EAAE;AAAvB,KAFqB,EAGrB;AAAED,UAAI,EAAE,yBAAR;AAAmCC,eAAS,EAAE;AAA9C,KAHqB,EAIrB;AAAED,UAAI,EAAE,YAAR;AAAsBC,eAAS,EAAE;AAAjC,KAJqB,EAKrB;AAAED,UAAI,EAAE,wBAAR;AAAkCC,eAAS,EAAE;AAA7C,KALqB,EAMrB;AAAED,UAAI,EAAE,aAAR;AAAuBC,eAAS,EAAE;AAAlC,KANqB,EAOrB;AAAED,UAAI,EAAE,kBAAR;AAA4BC,eAAS,EAAE;AAAvC,KAPqB,EAQrB;AACED,UAAI,EAAE,wCADR;AAEEC,eAAS,EAAE;AAFb,KARqB,CAAvB;;QAkBamS,iB;;;;;YAAAA;;;;yBAAAA,iB;AAAiB,O;AAAA,gBAHnB,CAAC,6DAAaC,QAAb,CAAsBtS,MAAtB,CAAD,CAGmB,EAFlB,4DAEkB;;;;0HAAjBqS,iB,EAAiB;AAAA;AAAA,kBAFlB,4DAEkB;AAAA,O;AAFN,K;;;;;sEAEXA,iB,EAAiB;cAJ7B,sDAI6B;eAJpB;AACR9R,iBAAO,EAAE,CAAC,6DAAa+R,QAAb,CAAsBtS,MAAtB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAIoB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BpB;;;;;;AAGE;;;;;;AAIF;;;;;;AAYE;;AAGG;;AAA+C;;;;;;AAA/C;;AAAA;;;;;;AAEH;;AAA+B;;AAAE;;;;;;AAIjC;;AAGG;;AAA8C;;;;;;AAA9C;;AAAA;;;;;;AACF;;AAAkC;;AAAE;;;;;;AAIrC;;AAGG;;AAAkD;;;;;;AAAlD;;AAAA;;;;;;AACF;;AAAmC;;AAAE;;;;;;;;;;;;;;;;;;;;;;QCdrCyS,a;AA+BX,+BAAc;AAAA;;AA9Bd,aAAAC,eAAA,GAAkB,iFAAlB;AACA,aAAAC,OAAA,GAAU,yEAAV;AACA,aAAAhI,MAAA,GAAS,wEAAT;AAEA,aAAAiI,QAAA,GAAW,IAAI,+CAAJ,EAAX;;AAEY,aAAA9E,gBAAA,GAAmB;AAAA,iBAC7B,IAAI,wFAAuBC,gBAA3B,EAD6B;AAAA,SAAnB;;AAGA,aAAAzG,eAAA,GAAkB,UAACC,GAAD;AAAA,iBAC5B,IAAI,sFAAsBC,aAA1B,CAAwCD,GAAxC,CAD4B;AAAA,SAAlB;;AAGA,aAAAgC,kBAAA,GAAqB;AAAA,iBAC/B,IAAI,8EAAkBC,kBAAtB,EAD+B;AAAA,SAArB;;AAGA,aAAAqE,WAAA,GAAc,UAAC9J,MAAD;AAAA,iBACxB,IAAI,kFAAoB8J,WAAxB,CAAoC9J,MAApC,CADwB;AAAA,SAAd;AAeI;;;;mCAER;AAAA;;AACN7B,sBAAY,CAAC+I,UAAb,CAAwB,gBAAxB;AACA,eAAK6C,gBAAL;AAEA,eAAK8E,QAAL,CAAcvM,IAAd,GAAqB,KAAKwM,KAAL,CAAWtM,SAAX,CAAqB,UAACC,GAAD,EAAS;AACjD,gBAAIA,GAAJ,EAAS;AACP,qBAAI,CAACqH,WAAL,CAAiB;AAAEK,2BAAW,EAAE;AAAf,eAAjB;;AACA,qBAAI,CAAC3E,kBAAL;;AACA,qBAAI,CAACjC,eAAL,CAAqB;AACnBuB,qBAAK,EAAE;AADY,eAArB;AAGD;AACF,WARoB,CAArB;AASD;;;sCAEa;AACZ,eAAK+J,QAAL,CAAchM,WAAd;AACD;;;;;;;uBAlDU6L,a;AAAa,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,c;AAAA,quB;AAAA;AAAA;AD/B1B;;AACE;;AACE;;AACE;;AACE;;AACE;;;;AAOA;;;;AAKF;;AACA;;AACE;;AAAI;;;;AAAmC;;AACzC;;AACA;;AACE;;AACE;;AAAM;;AAAS;;AACf;;;;AAKA;;;;AACF;;AACA;;AACE;;AAAM;;AAAS;;AACf;;;;AAIC;;;;AACH;;AACA;;AACE;;AAAM;;AAAQ;;AACd;;;;AAIC;;;;AACH;;AACF;;AACF;;AACA;;AACE;;AAME;;AACA;;AAAM;;AAAW;;AACnB;;AACA;;AAME;;AACA;;AAAM;;AAAU;;AAClB;;AACA;;AAME;;AACA;;AAAM;;AAAU;;AAClB;;AACF;;AACA;;AACF;;AACF;;AACA;;AACE;;AACA;;AACF;;AACF;;;;;;;;;;;;;;AA/EY;;AAAA;;AAOA;;AAAA;;AAME;;AAAA;;AAOA;;AAAA;;AAGI;;AAAA;;AAMJ;;AAAA;;AAEK;;AAAA;;AAML;;AAAA;;AAEK;;AAAA;;AAMT;;AAAA,yJAAoB,yBAApB,EAAoB,sEAApB;;AAKS;;AAAA;;AAIT;;AAAA,yJAA8B,yBAA9B,EAA8B,sEAA9B;;AAKS;;AAAA;;AAIT;;AAAA,yJAA+B,yBAA/B,EAA+B,sEAA/B;;AAKS;;AAAA;;;;;;;ACpCL,8DAAX,gFAAW,G,uBAAA,E,kBAAA,E,MAAA;AAGA,8DAAX,gFAAW,G,uBAAA,E,iBAAA,E,MAAA;AAGA,8DAAX,gFAAW,G,uBAAA,E,oBAAA,E,MAAA;AAGA,8DAAX,gFAAW,G,uBAAA,E,aAAA,E,MAAA;AAGmC,8DAA9C,2DAAO,mFAAqB3E,gBAA5B,CAA8C,G,uBAAA,E,OAAA,E,MAAA;AAIJ,8DAA1C,2DAAO,iFAAoBR,aAA3B,CAA0C,G,uBAAA,E,WAAA,E,MAAA;AAIC,8DAA3C,2DAAO,yEAAgB/D,kBAAvB,CAA2C,G,uBAAA,E,UAAA,E,MAAA;;;;sEA3BjCkJ,a,EAAa;cALzB,uDAKyB;eALf;AACT7R,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/B1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,kE,CAmBA;;;QAeagS,U;;;;;YAAAA;;;;yBAAAA,U;AAAU,O;AAAA,gBAHZ,CAAC,4DAAD,EAAe,4DAAf,EAA6B,sEAA7B,EAAgD,2DAAhD,CAGY;;;;0HAAVA,U,EAAU;AAAA,uBAXnB,mFAWmB,EAVnB,4FAUmB,EATnB,sFASmB,EARnB,+FAQmB,EAPnB,sFAOmB,EANnB,sGAMmB,EALnB,iGAKmB;AALI,kBAEf,4DAFe,EAED,4DAFC,EAEa,sEAFb,EAEgC,2DAFhC;AAKJ,O;AAHgD,K;;;;;sEAG1DA,U,EAAU;cAbtB,sDAasB;eAbb;AACR5R,sBAAY,EAAE,CACZ,mFADY,EAEZ,4FAFY,EAGZ,sFAHY,EAIZ,+FAJY,EAKZ,sFALY,EAMZ,sGANY,EAOZ,iGAPY,CADN;AAURT,iBAAO,EAAE,CAAC,4DAAD,EAAe,4DAAf,EAA6B,sEAA7B,EAAgD,2DAAhD,CAVD;AAWRsS,iBAAO,EAAE,CAAC,8DAAD,EAAmB,oEAAnB;AAXD,S;AAaa,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfrB;;;;QCJWC,mB;AAQX,qCAAc;AAAA;;AAPF,aAAA1L,eAAA,GAAkB;AAAA,cAACC,GAAD,uEAAO,IAAP;AAAA,iBAC5B,IAAI,sFAAsBC,aAA1B,CAAwCD,GAAxC,CAD4B;AAAA,SAAlB;AAOI;;;;mCAER;AACN,eAAKD,eAAL,CAAqB;AACnBuB,iBAAK,EAAE;AADY,WAArB;AAGD;;;;;;;uBAdUmK,mB;AAAmB,K;;;YAAnBA,mB;AAAmB,sC;AAAA,e;AAAA,a;AAAA,yJ;AAAA;AAAA;ADfhC;;AACE;;AACE;;AACE;;AAAI;;AAAW;;AACf;;AAAG;;AAAwB;;AAC7B;;AACA;;AACF;;AAEA;;AACE;;;;AAGF;;AAEA;;AACE;AAAA,mBAAkB,IAAAvC,QAAA,EAAlB;AAA4B,WAA5B;;AACD;;AAED;;;;AACF;;;;;;;AATM;;AAAA;;AAQS;;AAAA;;;;;;;ACHD,8DAAX,gFAAW,G,6BAAA,E,iBAAA,E,MAAA;AAG+B,8DAA1C,2DAAO,iFAAoBnD,aAA3B,CAA0C,G,6BAAA,E,WAAA,E,MAAA;;;;sEAJhC0F,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTpS,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0DCHhC;;;;;ACYU;;;;;;;;AAEE;;;;;;AANJ;;AAIE;;;;AAIF;;;;;;AAHI;;AAAA;;;;;;AAMJ;;;;;;;;;;;;;;;;;;;;;AAME,gKAA8B,oBAA9B,EAA8B,SAA9B,EAA8B,aAA9B,EAA8B,oFAA9B,EAA8B,cAA9B,EAA8B,SAA9B;;;;;;;;AAWF;;AAEE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEC;;AACH;;;;;;AA3CJ;;AACE;;AACE;;AAQA;;;;;;AASF;;AACA;;AACE;;;;;;;;AAeA;;AAAI;;;;AAA8B;;AAClC;;;;AACA;;;;AAMF;;AACF;;;;;;;;AA1CM;;AAAA;;AASA;;AAAA;;AAUA;;AAAA;;AAcE;;AAAA;;AACD;;AAAA;;AAED;;AAAA;;;;;;AAQJ;;AACE;;;;AACF;;;;;;AADE;;AAAA;;;;;;AA2BJ;;;;;;;;;;;;;AAEE,4FAAsB,QAAtB,EAAsB,aAAtB,EAAsB,cAAtB,EAAsB,SAAtB,EAAsB,YAAtB,EAAsB,WAAtB;;;;;;;;AASF;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AACD;;;;AAHC;;;;;;AAUJ;;;;QDlFWmS,wB;AAiBX,wCACUnD,WADV,EAEU7F,KAFV,EAGUjI,KAHV,EAGsB;AAAA;;AAFZ,aAAA8N,WAAA,GAAAA,WAAA;AACA,aAAA7F,KAAA,GAAAA,KAAA;AACA,aAAAjI,KAAA,GAAAA,KAAA;;AAnBE,aAAAsD,eAAA,GAAkB,UAACC,UAAD;AAAA,iBAC5B,IAAI,gGAA2BC,oBAA/B,CAAoDD,UAApD,CAD4B;AAAA,SAAlB;;AAYZ,aAAAL,IAAA,GAAO,IAAI,+CAAJ,EAAP;AAEA,aAAAgO,SAAA,GAAY,KAAZ;AAMI;;;;mCAEI;AAAA;;AACN,cAAM3N,UAAU,GAAG,KAAKuK,WAAL,CAAiBrF,QAAjB,CAA0B1G,MAA1B,CAAiCwB,UAApD;AACA,eAAKD,eAAL,CAAqBC,UAArB;AAEA,eAAKL,IAAL,CAAUmB,IAAV,GAAiB,KAAK6F,SAAL,CAAe3F,SAAf,CACf,UAACX,QAAD,EAAoC;AAClC,gBAAIA,QAAJ,EAAc;AACZ,qBAAI,CAACkF,MAAL,GAAc;AACZqI,4BAAY,EAAE,EADF;AAEZpI,2BAAW,EAAE,CAFD;AAGZqI,0BAAU,EAAExN,QAAQ,CAAC+F,MAAT,CAAgBU,KAAhB,CAAsBnJ;AAHtB,eAAd;AAKD;AACF,WATc,CAAjB;AAYA,eAAKlB,KAAL,CAAWiB,QAAX,CAAoB,IAAI,4DAAJ,CAAe,gFAAf,CAApB;AACD;;;oCAEW4H,K,EAAO;AACjB,eAAKC,MAAL,CAAYC,WAAZ,GAA0BF,KAA1B;AACD;;;wCAEelL,C,EAAG;AACjB,eAAKuT,SAAL,GAAiB,KAAjB;AACD;;;0CAEiB3N,U,EAAY;AAC5BrD,sBAAY,CAAC+I,UAAb,CAAwB,gBAAxB;AACA,eAAKhB,KAAL,CAAWrI,QAAX,CAAoB,CAAC,aAAD,EAAgB2D,UAAhB,EAA4B,gBAA5B,CAApB;AACD;;;sCAEa;AACZ,eAAKL,IAAL,CAAU0B,WAAV;AACD;;;;;;;uBAzDUqM,wB,EAAwB,gI,EAAA,wH,EAAA,kH;AAAA,K;;;YAAxBA,wB;AAAwB,2C;AAAA,e;AAAA,c;AAAA,s5B;AAAA;AAAA;AC1BrC;;AACE;;AACE;;AACE;;AAAI;;AAAoB;;AACxB;;AAAG;;AAA2C;;AAChD;;AACA;;AACF;;AACA;;AACA;;AACE;;;;AA8CA;;AACE;;;;AAGF;;AACA;;AAwBA;;;;AAWA;;AAMF;;AAEA;;AACE;AAAA,mBAAkB,IAAAxC,QAAA,EAAlB;AAA4B,WAA5B;;AACD;;AAED;;;;AACF;;;;AAnGuC;;AAAA;;AA+C7B;;AAAA;;AA6BJ;;AAAA;;AAWA;;AAAA;;AAWS;;AAAA;;;;;;;ADjFD,8DAAX,gFAAW,G,kCAAA,E,iBAAA,E,MAAA;AAIZ,8DADC,2DAAO,2FAAyB4C,oBAAhC,CACD,G,kCAAA,E,WAAA,E,MAAA;AAGA,8DADC,2DAAO,iFAAoB/F,aAA3B,CACD,G,kCAAA,E,aAAA,E,MAAA;AAGA,8DADC,2DAAO,mFAAqBQ,gBAA5B,CACD,G,kCAAA,E,cAAA,E,MAAA;;;;sEAXWmF,wB,EAAwB;cALpC,uDAKoC;eAL1B;AACTrS,kBAAQ,EAAE,sBADD;AAETC,qBAAW,EAAE,mCAFJ;AAGTC,mBAAS,EAAE,CAAC,mCAAD;AAHF,S;AAK0B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0DEjBrC;;;;;ACEM;;;;;;;;;;AAEE,8FAAqB,aAArB,EAAqB,oFAArB,EAAqB,gBAArB,EAAqB,uFAArB;;;;;;AAMF;;AACE;;;;AACF;;;;;;AADE;;AAAA;;;;;;AAQF;;;;;;;;AAEE,2KAA2C,SAA3C,EAA2C,IAA3C;;;;;;AAWN;;;;QDbWwS,uB;AAoBX,uCACUxD,WADV,CACsC;AADtC,Q;;;AACU,aAAAA,WAAA,GAAAA,WAAA;;AApBE,aAAAxK,eAAA,GAAkB,UAACC,UAAD;AAAA,iBAC5B,IAAI,gGAA2BC,oBAA/B,CAAoDD,UAApD,CAD4B;AAAA,SAAlB;;AAGA,aAAA6H,cAAA,GAAiB,UAACrJ,MAAD;AAAA,iBAC3B,IAAI,6FAA0BwP,mBAA9B,CAAkDxP,MAAlD,CAD2B;AAAA,SAAjB;;AAYZ,aAAAmB,IAAA,GAAO,IAAI,+CAAJ,EAAP;AACA,aAAAC,KAAA,GAAQ,+DAAR;AAKI;;;;mCACI;AAAA;;AACN,cAAMI,UAAU,GAAG,KAAKuK,WAAL,CAAiBrF,QAAjB,CAA0B1G,MAA1B,CAAiCwB,UAApD;AACA,eAAKD,eAAL,CAAqBC,UAArB;AAEA,eAAKL,IAAL,CAAUmB,IAAV,GAAiB,KAAK6F,SAAL,CAAe3F,SAAf,CACf,UAACC,GAAD,EAAS;AACP,gBAAIA,GAAJ,EAAS;AACP,qBAAI,CAACZ,QAAL,GAAgBY,GAAhB;AACA,kBAAMgN,QAAQ,GAAGhN,GAAG,CAACmF,MAAJ,CAAWU,KAAX,CAAiBoH,KAAjB,CAAuB,CAAvB,EAA0B,CAA1B,EAA6B/G,GAA7B,CAAiC,UAACrJ,CAAD;AAAA,uBAAOA,CAAC,CAAC2H,KAAF,CAAQ/K,EAAf;AAAA,eAAjC,CAAjB;;AAEA,qBAAI,CAACyT,iBAAL,CAAuBF,QAAvB;AACD;AACF,WARc,EASf,UAACvM,KAAD,EAAW;AACTsD,mBAAO,CAACC,GAAR,CAAY,kBAAZ;;AACA,mBAAI,CAACrF,KAAL,CAAWsB,IAAX,CAAgB;AAAEC,kBAAI,EAAE,OAAR;AAAiB/F,mBAAK,EAAE;AAAxB,aAAhB;AACD,WAZc,CAAjB;AAcD;;;0CAEiB6S,Q,EAAyB;AACzC,eAAKpG,cAAL,CAAoB;AAClBvE,iBAAK,EAAE,EADW;AAElB8K,uBAAW,EAAEH,QAAQ,CAAC1Q,QAAT;AAFK,WAApB;AAID;;;sCAEa;AACZ,eAAKoC,IAAL,CAAU0B,WAAV;AACD;;;;;;;uBApDU0M,uB,EAAuB,gI;AAAA,K;;;YAAvBA,uB;AAAuB,yC;AAAA,e;AAAA,c;AAAA,iV;AAAA;AAAA;AC5BpC;;AACE;;AACE;;AASE;;;;;;AAOA;;AAAI;;AAAqB;;AACzB;;;;AAGF;;AACA;;AACF;;AACA;;AACA;;AACE;;AACE;;;;AAMF;;AACF;;AAEA;;AACE;AAAA,mBAAkB,IAAA7C,QAAA,EAAlB;AAA4B,WAA5B;;AACD;;AAED;;;;AACF;;;;AA9BQ;;AAAA;;AAOC;;AAAA;;AAUD;;AAAA;;AAYO;;AAAA;;;;;;;ADZD,8DAAX,gFAAW,G,iCAAA,E,iBAAA,E,MAAA;AAGA,8DAAX,gFAAW,G,iCAAA,E,gBAAA,E,MAAA;AAIZ,8DADC,2DAAO,2FAAyB4C,oBAAhC,CACD,G,iCAAA,E,WAAA,E,MAAA;AAGA,8DADC,2DAAO,wFAAwBO,mBAA/B,CACD,G,iCAAA,E,iBAAA,E,MAAA;AAGA,8DADC,2DAAO,oFAAqB9F,gBAA5B,CACD,G,iCAAA,E,cAAA,E,MAAA;;;;sEAdWwF,uB,EAAuB;cALnC,uDAKmC;eALzB;AACT1S,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKyB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE5BpC;AAAA;;;AAAA;AAAA;AAAA;;AAAO,QAAM+S,IAAI,GAAG,CAClB;AAAE3M,WAAK,EAAE,UAAT;AAAqB4M,eAAS,EAAE,WAAhC;AAA6CC,YAAM,EAAE;AAArD,KADkB,EAElB;AAAE7M,WAAK,EAAE,eAAT;AAA0B4M,eAAS,EAAE,aAArC;AAAoDC,YAAM,EAAE;AAA5D,KAFkB,EAGlB;AAAE7M,WAAK,EAAE,cAAT;AAAyB4M,eAAS,EAAE,YAApC;AAAkDC,YAAM,EAAE;AAA1D,KAHkB,CAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACYC;;AACE;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAqC;;AAAiB;;AAC3D;;;;;;AAFgC;;AACU;;AAAA;;;;;;AAYhD;;;;QCTWC,mB;AACX,mCAAoBhS,KAApB,EAAkC;AAAA;;AAAd,aAAAA,KAAA,GAAAA,KAAA;AAEpB,aAAAiS,KAAA,GAAQ,sDAAR;;AACY,aAAAvD,eAAA,GAAkB;AAAA,cAACnJ,GAAD,uEAAO,IAAP;AAAA,iBAC5B,IAAI,sFAAsB2M,eAA1B,CAA0C3M,GAA1C,CAD4B;AAAA,SAAlB;AAHwB;;;;mCAU5B;AAAA,sCACkB,KAAKvF,KAAL,CAAWyI,QAAX,EADlB;AAAA,cACE0J,WADF,yBACEA,WADF;;AAEN,cAAIA,WAAW,KAAK,IAApB,EAA0B;AACxB,gBAAMC,KAAK,GAAGlJ,IAAI,CAACc,KAAL,CAAW9J,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAAd;;AACA,gBAAI,CAACiS,KAAD,IAAUA,KAAK,CAACC,UAAN,KAAqB,WAAnC,EAAgD;AAC9C,mBAAK3D,eAAL,CAAqB;AAAE7H,qBAAK,EAAE,EAAT;AAAawL,0BAAU,EAAE;AAAzB,eAArB;AACA,mBAAKC,YAAL,CAAkB,WAAlB;AACD,aAHD,MAGO;AACL,mBAAK5D,eAAL,CAAqB;AAAE7H,qBAAK,EAAE,EAAT;AAAawL,0BAAU,EAAED,KAAK,CAACC;AAA/B,eAArB;AACA,mBAAKC,YAAL,CAAkBF,KAAK,CAACC,UAAxB;AACD;AACF;AACF;;;kCAESA,U,EAAY;AACpB,eAAK3D,eAAL,CAAqB;AAAE7H,iBAAK,EAAE,EAAT;AAAawL,sBAAU,EAAVA;AAAb,WAArB;AACA,eAAKC,YAAL,CAAkBD,UAAlB;AACD;;;qCAEYA,U,EAAoB;AAC/B,eAAKJ,KAAL,CAAWvH,GAAX,CAAe,UAAC6H,GAAD,EAAS;AACtBA,eAAG,CAACR,MAAJ,GAAaQ,GAAG,CAACT,SAAJ,KAAkBO,UAAlB,GAA+B,WAA/B,GAA6C,EAA1D;AACA,mBAAOE,GAAP;AACD,WAHD;AAID;;;;;;;uBAnCUP,mB,EAAmB,kH;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,e;AAAA,a;AAAA,2P;AAAA;AAAA;ADhBhC;;AACE;;AACE;;AACE;;AAAI;;AAAU;;AACd;;AAAG;;AAA8B;;AACnC;;AACA;;AACF;;AAEA;;AACE;;AACE;;AACE;;AAGF;;AACF;;AACA;;;;AAGF;;AACA;;AACE;AAAA,mBAAkB,IAAAvD,QAAA,EAAlB;AAA4B,WAA5B;;AACD;;AAED;;;;AACF;;;;;;;AAdY;;AAAA;;AAMN;;AAAA;;AAOS;;AAAA;;;;;;;ACLD,8DAAX,gFAAW,G,6BAAA,E,iBAAA,E,MAAA;AAGiC,8DAA5C,2DAAO,iFAAoBC,eAA3B,CAA4C,G,6BAAA,E,aAAA,E,MAAA;;;;sEAPlCsD,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTpT,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;;AChBhC;AAAA;;;AAAA;AAAA;AAAA;;AAAO,QAAM+S,IAAI,GAAG,CAClB;AAAE3M,WAAK,EAAE,UAAT;AAAqB4M,eAAS,EAAE,WAAhC;AAA6CC,YAAM,EAAE;AAArD,KADkB,EAElB;AAAE7M,WAAK,EAAE,eAAT;AAA0B4M,eAAS,EAAE,aAArC;AAAoDC,YAAM,EAAE;AAA5D,KAFkB,EAGlB;AAAE7M,WAAK,EAAE,cAAT;AAAyB4M,eAAS,EAAE,YAApC;AAAkDC,YAAM,EAAE;AAA1D,KAHkB,CAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACYC;;AACE;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAqC;;AAAiB;;AAC3D;;;;;;AAFgC;;AACU;;AAAA;;;;;;AAI9C;;;;;;AACE;;;;;;AAWJ;;;;QCZWS,kB;AAGX,kCAAoBxS,KAApB,EAAkC;AAAA;;AAAd,aAAAA,KAAA,GAAAA,KAAA;AAFpB,aAAAiS,KAAA,GAAQ,qDAAR;;AAIY,aAAAtD,cAAA,GAAiB;AAAA,cAACpJ,GAAD,uEAAO,IAAP;AAAA,iBAC3B,IAAI,oFAAqBkN,cAAzB,CAAwClN,GAAxC,CAD2B;AAAA,SAAjB;AAFwB;;;;mCAS5B;AAAA,sCACiB,KAAKvF,KAAL,CAAWyI,QAAX,EADjB;AAAA,cACEiK,UADF,yBACEA,UADF;;AAGN,cAAIA,UAAU,KAAK,IAAnB,EAAyB;AACvB,gBAAMN,KAAK,GAAGlJ,IAAI,CAACc,KAAL,CAAW9J,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAAd;;AACA,gBAAI,CAACiS,KAAD,IAAUA,KAAK,CAACC,UAAN,KAAqB,WAAnC,EAAgD;AAC9C,mBAAK1D,cAAL,CAAoB;AAAE9H,qBAAK,EAAE,EAAT;AAAawL,0BAAU,EAAE;AAAzB,eAApB;AACA,mBAAKC,YAAL,CAAkB,WAAlB;AACD,aAHD,MAGO;AACL,mBAAK3D,cAAL,CAAoB;AAAE9H,qBAAK,EAAE,EAAT;AAAawL,0BAAU,EAAED,KAAK,CAACC;AAA/B,eAApB;AACA,mBAAKC,YAAL,CAAkBF,KAAK,CAACC,UAAxB;AACD;AACF;AACF;;;kCAESA,U,EAAY;AACpB,eAAK1D,cAAL,CAAoB;AAAE9H,iBAAK,EAAE,EAAT;AAAawL,sBAAU,EAAVA;AAAb,WAApB;AACA,eAAKC,YAAL,CAAkBD,UAAlB;AACD;;;qCAEYA,U,EAAoB;AAC/B,eAAKJ,KAAL,CAAWvH,GAAX,CAAe,UAAC6H,GAAD,EAAS;AACtBA,eAAG,CAACR,MAAJ,GAAaQ,GAAG,CAACT,SAAJ,KAAkBO,UAAlB,GAA+B,WAA/B,GAA6C,EAA1D;AACA,mBAAOE,GAAP;AACD,WAHD;AAID;;;;;;;uBArCUC,kB,EAAkB,kH;AAAA,K;;;YAAlBA,kB;AAAkB,qC;AAAA,e;AAAA,a;AAAA,sT;AAAA;AAAA;ADjB/B;;AACE;;AACE;;AACE;;AAAI;;AAAU;;AACd;;AAAG;;AAAqC;;AAC1C;;AACA;;AACF;;AAEA;;AACE;;AACE;;AACE;;AAGF;;AACF;;AACA;;;;AAOA;;AACE;AAAA,mBAAkB,IAAA/D,QAAA,EAAlB;AAA4B,WAA5B;;AACD;;AACH;;AAEA;;;;AACF;;;;;;;AAlBY;;AAAA;;AAON;;AAAA;;AAUS;;AAAA;;;;;;;ACPD,8DAAX,gFAAW,G,4BAAA,E,gBAAA,E,MAAA;AAG+B,8DAA1C,2DAAO,+EAAmBE,cAA1B,CAA0C,G,4BAAA,E,YAAA,E,MAAA;;;;sEARhC6D,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACT5T,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;;;;ACjB/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASa6T,oB;AACX,oCAAoB5S,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAoB;;;;2CAErBiO,Q,EAAkB;AACnC,iBAAO,KAAKjO,IAAL,CAAUqC,GAAV,WACF,yEAAYC,WADV,qBACgC2L,QADhC,EAEL;AAFK,WAAP;AAID;;;;;;;uBARU2E,oB,EAAoB,uH;AAAA,K;;;aAApBA,oB;AAAoB,eAApBA,oBAAoB,K;AAAA,kBAFnB;;;;;sEAEDA,oB,EAAoB;cAHhC,wDAGgC;eAHrB;AACV9S,oBAAU,EAAE;AADF,S;AAGqB,Q;;;;;;;;;;;;;;;;;;;;;;ACTjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASa+S,sB;AACX,sCAAoB7S,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAoB;;;;uCAEzBiO,Q,EAAkB;AAC/B,cAAM6E,OAAO,GAAG3S,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAhB;AACA,iBAAO,KAAKJ,IAAL,CAAUqC,GAAV,WACF,yEAAYC,WADV,qBACgC2L,QADhC,iCAC+D6E,OAD/D,EAEL;AAFK,WAAP;AAID;;;;;;;uBATUD,sB,EAAsB,uH;AAAA,K;;;aAAtBA,sB;AAAsB,eAAtBA,sBAAsB,K;AAAA,kBAFrB;;;;;sEAEDA,sB,EAAsB;cAHlC,wDAGkC;eAHvB;AACV/S,oBAAU,EAAE;AADF,S;AAGuB,Q;;;;;;;;;;;;;;;;;;;;;;ACTnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaiT,mB;AACX,mCAAoB/S,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAoB;;;;0CAEtBgT,O,EAAiB;AACjC,iBAAO,KAAKhT,IAAL,CAAUqC,GAAV,WACF,yEAAYC,WADV,4BACuC0Q,OADvC,EAEL;AAFK,WAAP;AAID;;;;;;;uBARUD,mB,EAAmB,uH;AAAA,K;;;aAAnBA,mB;AAAmB,eAAnBA,mBAAmB,K;AAAA,kBAFlB;;;;;sEAEDA,mB,EAAmB;cAH/B,wDAG+B;eAHpB;AACVjT,oBAAU,EAAE;AADF,S;AAGoB,Q;;;;;;;;;;;;;;;;;;;;;;ACThC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUamT,a;AACX,6BAAoBjT,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAoB;;;;6CAEY;AAAA,cAAjC+P,WAAiC,uEAAN,IAAM;AAClD,cAAMmD,YAAY,GAAG,8DAAenD,WAAf,CAArB;AAEA,iBAAO,KAAK/P,IAAL,CAAUqC,GAAV,WACF,yEAAYC,WADV,sCACiD4Q,YADjD,EAEL;AAFK,WAAP;AAID;;;4CAEkD;AAAA,cAAjCnD,WAAiC,uEAAN,IAAM;AACjD,cAAMmD,YAAY,GAAG,8DAAenD,WAAf,CAArB;AAEA,iBAAO,KAAK/P,IAAL,CAAUqC,GAAV,WACF,yEAAYC,WADV,sCACiD4Q,YADjD,EAEL;AAFK,WAAP;AAID;;;qCAEYjF,Q,EAAkB;AAC7B,iBAAO,KAAKjO,IAAL,CAAUmT,GAAV,WACF,yEAAY7Q,WADV,0CACqD2L,QADrD,GAEL,EAFK,CAGL;AAHK,WAAP;AAKD;;;uCAEcA,Q,EAAkB;AAC/B,iBAAO,KAAKjO,IAAL,qBACF,yEAAYsC,WADV,0CACqD2L,QADrD,EAEL;AAFK,WAAP;AAID,S,CACD;;;;uCACezK,U,EAAoB;AACjC,iBAAO,KAAKxD,IAAL,CAAUmT,GAAV,WACF,yEAAY7Q,WADV,uBACkCkB,UADlC,iBAEL,EAFK,CAGL;AAHK,WAAP;AAKD;;;yCAEgBA,U,EAAoB;AACnC,iBAAO,KAAKxD,IAAL,qBACF,yEAAYsC,WADV,uBACkCkB,UADlC,gBAEL;AAFK,WAAP;AAID,S,CAED;;;;6CACqBqH,M,EAAgBrH,U,EAAoB;AACvD,iBAAO,KAAKxD,IAAL,qBACF,yEAAYsC,WADV,mBAC8BuI,MAD9B,wBACkDrH,UADlD,gBAEL;AAFK,WAAP;AAID;;;2CAGCqH,M,EACArH,U,EACyB;AAAA,cAAzB6D,QAAyB,uEAAL,KAAK;AAEzB,iBAAO,KAAKrH,IAAL,CAAUmT,GAAV,WACF,yEAAY7Q,WADV,mBAC8BuI,MAD9B,wBACkDrH,UADlD,iBAEL;AAAE4P,kBAAM,EAAE/L;AAAV,WAFK,CAGL;AAHK,WAAP;AAKD;;;;;;;uBArEU4L,a,EAAa,uH;AAAA,K;;;aAAbA,a;AAAa,eAAbA,aAAa,K;AAAA,kBAFZ;;;;;sEAEDA,a,EAAa;cAHzB,wDAGyB;eAHd;AACVnT,oBAAU,EAAE;AADF,S;AAGc,Q;;;;;;;;;;;;;;;;;;;;;;ACT1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAEO,QAAMuT,WAAW,GAAG;AACzBvR,aAAO,EAAE;AACPqL,cAAM,EAAE,kBADD;AAEP,wBAAgB,kBAFT;AAGPxL,qBAAa,mBAAYxB,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAZ;AAHN;AADgB,KAApB;;AAQA,QAAMkT,cAAc,GAAG,SAAjBA,cAAiB,GAAqC;AAAA,UAApCvD,WAAoC,uEAAT,IAAS;AACjE,UAAMwD,MAAM,GAAG,EAAf;;AACA,UAAIxD,WAAW,KAAK,IAApB,EAA0B;AACxB,2CAA2ByD,MAAM,CAACC,OAAP,CAAe1D,WAAf,CAA3B,qCAAwD;AAAA;AAAA,cAA5Cf,GAA4C;AAAA,cAAvC5K,KAAuC;;AACtDmP,gBAAM,CAACG,IAAP,CAAY,UAAG1E,GAAH,cAAU5K,KAAV,EAAkBpD,OAAlB,CAA0B,IAA1B,EAAgC,IAAhC,CAAZ;AACD,SAHuB,CAKxB;AACA;AACA;AACA;;AACD;;AAED,aAAOuS,MAAM,CAACxS,QAAP,GAAkBC,OAAlB,CAA0B,IAA1B,EAAgC,GAAhC,EAAqCA,OAArC,CAA6C,KAA7C,EAAoD,GAApD,CAAP;AACD,KAdM;;AAgBA,QAAMwL,QAAQ,GAAG,SAAXA,QAAW,CAACmH,CAAD,EAAO;AAC7B,UAAIC,EAAE,GAAGD,CAAC,GAAG,IAAb;AACAA,OAAC,GAAG,CAACA,CAAC,GAAGC,EAAL,IAAW,IAAf;AACA,UAAIC,IAAI,GAAGF,CAAC,GAAG,EAAf;AACAA,OAAC,GAAG,CAACA,CAAC,GAAGE,IAAL,IAAa,EAAjB;AACA,UAAIC,IAAI,GAAGH,CAAC,GAAG,EAAf;AACA,UAAII,GAAG,GAAG,CAACJ,CAAC,GAAGG,IAAL,IAAa,EAAvB,CAN6B,CAQ7B;;AACA,aAAO,CAACA,IAAI,GAAG,EAAP,GAAY,MAAMA,IAAlB,GAAyBA,IAA1B,IAAkC,GAAlC,GAAwCD,IAA/C;AACD,KAVM;;AAYA,QAAMnO,KAAK,GAAG,SAARA,KAAQ;AAAA,aACnB,mDAAKsO,KAAL,CAAW;AACT5Q,aAAK,EAAE,IADE;AAET6Q,gBAAQ,EAAE,SAFD;AAGTC,yBAAiB,EAAE,KAHV;AAITC,aAAK,EAAE,IAJE;AAKTC,wBAAgB,EAAE,IALT;AAMTC,cAAM,EAAE,gBAACjR,KAAD,EAAW;AACjBA,eAAK,CAACkR,gBAAN,CAAuB,YAAvB,EAAqC,mDAAKC,SAA1C;AACAnR,eAAK,CAACkR,gBAAN,CAAuB,YAAvB,EAAqC,mDAAKE,WAA1C;AACD;AATQ,OAAX,CADmB;AAAA,KAAd;;AAaA,QAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,QAAD,EAAWpO,OAAX,EAAuB;AAC7C,yDAAK5B,IAAL,CAAU,MAAD,OAAC,CAAD,kBACJ4B,OADI,CAAC,EACE;AACVqO,kBAAU,EAAE,GADF;AAEVC,mBAAW,EAAE,GAFH;AAGVC,0BAAkB,EAAE,SAHV;AAIVC,yBAAiB,EAAE,SAJT;AAKVC,wBAAgB,EAAE;AALR,OADF,CAAV,EAOGpX,IAPH,CAOQ+W,QAPR;AAQD,KATM;;;;;;;;;;;;;;;;;ACpDP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWaM,iB;AAGX,iCAAoBhV,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAFpB,aAAAiV,KAAA,GAAQ,uDAAR;AAEwC;;;;wCAEO;AAAA,cAAjClF,WAAiC,uEAAN,IAAM;AAC7C,cAAMmD,YAAY,GAAG,8DAAenD,WAAf,CAArB;AAEA,iBAAO,KAAK/P,IAAL,CAAUqC,GAAV,WACF,yEAAYC,WADV,0BACqC4Q,YADrC,EAEL;AAFK,WAAP;AAID;;;6CAEoB1P,U,EAAoB;AACvC,iBAAO,KAAKxD,IAAL,CAAUqC,GAAV,WACF,yEAAYC,WADV,uBACkCkB,UADlC,EAEL;AAFK,WAAP;AAID;;;4CAEmBA,U,EAAoB0R,O,EAAc;AACpD,iBAAO,KAAKlV,IAAL,CAAUmT,GAAV,WACF,yEAAY7Q,WADV,uBACkCkB,UADlC,GAEL0R,OAFK,CAGL;AAHK,WAAP;AAKD;;;0CAEiBnF,W,EAA0B;AAC1C,cAAMmD,YAAY,GAAG,8DAAenD,WAAf,CAArB;AAEA,iBAAO,KAAK/P,IAAL,CAAUqC,GAAV,WACF,yEAAYC,WADV,6BACwC4Q,YADxC,EAEL;AAFK,WAAP;AAID;;;uCAEcrI,M,EAAgB7I,M,EAAa;AAC1C,iBAAO,KAAKhC,IAAL,CAAUkC,IAAV,WACF,yEAAYI,WADV,mBAC8BuI,MAD9B,iBAEL7I,MAFK,CAGL;AAHK,WAAP;AAKD;;;6CAEoBwB,U,EAAoBkH,I,EAAc;AACrD,iBAAO,KAAK1K,IAAL,CAAUkC,IAAV,WACF,yEAAYI,WADV,uBACkCkB,UADlC,0BAC4DkH,IAD5D,GAEL,EAFK,CAGL;AAHK,WAAP;AAKD;;;2CAEkBlH,U,EAAoBoG,M,EAAa;AAClD,iBAAO,KAAKqL,KAAL,qBACF,yEAAY3S,WADV,uBACkCkB,UADlC,cACqD,gCAErD,kDAFqD,GAE1C;AACd2R,gBAAI,EAAEvL;AADQ,WAF0C,CADrD,CAAP;AAOD;;;;;;;uBA9DUoL,iB,EAAiB,uH;AAAA,K;;;aAAjBA,iB;AAAiB,eAAjBA,iBAAiB,K;AAAA,kBAFhB;;;;;sEAEDA,iB,EAAiB;cAH7B,wDAG6B;eAHlB;AACVlV,oBAAU,EAAE;AADF,S;AAGkB,Q;;;;;;;;;;;;;;;;;;;;;;ACX9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASasV,qB;AACX,qCAAoBpV,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAoB;;;;4CAEpBiO,Q,EAAkB;AACpC,iBAAO,KAAKjO,IAAL,CAAUqC,GAAV,WACF,yEAAYC,WADV,qBACgC2L,QADhC,sBAEL;AAFK,WAAP;AAID;;;;;;;uBARUmH,qB,EAAqB,uH;AAAA,K;;;aAArBA,qB;AAAqB,eAArBA,qBAAqB,K;AAAA,kBAFpB;;;;;sEAEDA,qB,EAAqB;cAHjC,wDAGiC;eAHtB;AACVtV,oBAAU,EAAE;AADF,S;AAGsB,Q;;;;;;;;;;;;;;;;;;;;;;ACTlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUauV,iB;AACX,iCAAoBrV,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAoB;;;;0CAES;AAAA,cAAjC+P,WAAiC,uEAAN,IAAM;AAC/C,cAAMmD,YAAY,GAAG,8DAAenD,WAAf,CAArB;AAEA,iBAAO,KAAK/P,IAAL,CAAUqC,GAAV,WACF,yEAAYC,WADV,4BACuC4Q,YADvC,EAEL;AAFK,WAAP;AAID;;;;;;;uBAVUmC,iB,EAAiB,uH;AAAA,K;;;aAAjBA,iB;AAAiB,eAAjBA,iBAAiB,K;AAAA,kBAFhB;;;;;sEAEDA,iB,EAAiB;cAH7B,wDAG6B;eAHlB;AACVvV,oBAAU,EAAE;AADF,S;AAGkB,Q;;;;;;;;;;;;;;;;;;;;;;ACV9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUawV,gB;AACX,gCAAoBtV,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAoB;;;;yCAEQ;AAAA,cAAjC+P,WAAiC,uEAAN,IAAM;AAC9C,cAAMmD,YAAY,GAAG,8DAAenD,WAAf,CAArB;AAEA,iBAAO,KAAK/P,IAAL,CAAUqC,GAAV,WACF,yEAAYC,WADV,2BACsC4Q,YADtC,EAEL;AAFK,WAAP;AAID;;;;;;;uBAVUoC,gB,EAAgB,uH;AAAA,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB,K;AAAA,kBAFf;;;;;sEAEDA,gB,EAAgB;cAH5B,wDAG4B;eAHjB;AACVxV,oBAAU,EAAE;AADF,S;AAGiB,Q;;;;;;;;;;;;;;;;;;;;;;ACV7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QA6EayV,Y;;;;;YAAAA;;;;yBAAAA,Y;AAAY,O;AAAA,iBAHZ,CAAC,4EAAD,C;AAA0B,gBAT5B,CACP,4DADO,EAEP,kFAFO,EAGP,4DAHO,EAIP,qEAJO,EAKP,kEALO,EAMP,0DANO,EAOP,kEAPO,CAS4B,EAnBnC,qEAmBmC,EAdnC,kEAcmC;;;;0HAG1BA,Y,EAAY;AAAA,uBA7CrB,yEA6CqB,EA5CrB;AACA,mFA2CqB,EA1CrB,oFA0CqB,EAzCrB,+FAyCqB,EAxCrB,wGAwCqB,EAvCrB,wGAuCqB,EAtCrB,qGAsCqB,EArCrB,+FAqCqB,EApCrB,2GAoCqB,EAnCrB,yHAmCqB,EAlCrB,mHAkCqB,EAjCrB,0HAiCqB,EAhCrB,kIAgCqB,EA/BrB,uFA+BqB,EA9BrB,+FA8BqB;AA9BH,kBAmBlB,4DAnBkB,EAoBlB,kFApBkB,EAqBlB,4DArBkB,EAsBlB,qEAtBkB,EAuBlB,kEAvBkB,EAwBlB,0DAxBkB,EAyBlB,kEAzBkB,CA8BG;AALF,kBAtBnB,+FAsBmB,EArBnB,wGAqBmB,EApBnB,wGAoBmB,EAnBnB,qGAmBmB,EAlBnB,+FAkBmB,EAjBnB,qEAiBmB,EAhBnB,2GAgBmB,EAfnB,yHAemB,EAdnB,mHAcmB,EAbnB,0HAamB,EAZnB,kEAYmB,EAXnB,kIAWmB,EAVnB,uFAUmB,EATnB,+FASmB;AAKE,O;AAdH,K;;;;;sEAcTA,Y,EAAY;cA/CxB,sDA+CwB;eA/Cf;AACRpW,sBAAY,EAAE,CACZ,yEADY,EAEZ;AACA,qFAHY,EAIZ,oFAJY,EAKZ,+FALY,EAMZ,wGANY,EAOZ,wGAPY,EAQZ,qGARY,EASZ,+FATY,EAUZ,2GAVY,EAWZ,yHAXY,EAYZ,mHAZY,EAaZ,0HAbY,EAcZ,kIAdY,EAeZ,uFAfY,EAgBZ,+FAhBY,CADN;AAmBRlB,iBAAO,EAAE,CACP,+FADO,EAEP,wGAFO,EAGP,wGAHO,EAIP,qGAJO,EAKP,+FALO,EAMP,qEANO,EAOP,2GAPO,EAQP,yHARO,EASP,mHATO,EAUP,0HAVO,EAWP,kEAXO,EAYP,kIAZO,EAaP,uFAbO,EAcP,+FAdO,CAnBD;AAmCRS,iBAAO,EAAE,CACP,4DADO,EAEP,kFAFO,EAGP,4DAHO,EAIP,qEAJO,EAKP,kEALO,EAMP,0DANO,EAOP,kEAPO,CAnCD;AA4CRU,mBAAS,EAAE,CAAC,4EAAD,CA5CH;AA6CR4R,iBAAO,EAAE,CAAC,8DAAD,EAAmB,oEAAnB;AA7CD,S;AA+Ce,Q;;;;;;;;;;;;;;;;;;AC7EzB;AAAA;;;AAAA;AAAA;AAAA;;AAAO,QAAUwE,wBAAV;;AAAP,eAAiBA,wBAAjB,EAAyC;AAAA,UAC1BtH,kBAD0B,GAGrC,4BAAmBD,QAAnB,EAAqC;AAAA;;AAAlB,aAAAA,QAAA,GAAAA,QAAA;AAAoB,OAHF;;AAErB,yBAAAwH,IAAA,GAAO,6BAAP;AADL,+BAAAvH,kBAAA,GAAkB,kBAAlB;AAId,KALD,EAAiBsH,wBAAwB,KAAxBA,wBAAwB,MAAzC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCIaE,sB;;;;;;;2CAEsBhW,K,EAA2B;AAC1D,iBAAOA,KAAP;AACD;;;;;;AAFD,8DADC,6DAAS,CAAC,yDAAD,CAAT,CACD,G,sBAAA,E,oBAAA,E,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCWWiW,kBAAkB;AAC7B,kCACUC,OADV,EAEUlK,IAFV,EAE2B;AAAA;;AADjB,aAAAkK,OAAA,GAAAA,OAAA;AACA,aAAAlK,IAAA,GAAAA,IAAA;AACN;;AAJyB;AAAA;AAAA,wDAS8B;AAAA,cADvDmK,QACuD,QADvDA,QACuD;AAAA,cAD7CC,UAC6C,QAD7CA,UAC6C;AAAA,cAAvD7H,QAAuD,SAAvDA,QAAuD;AAEzD,iBAAO,KAAK2H,OAAL,CAAa5H,kBAAb,CAAgCC,QAAhC,EAA0CnB,IAA1C,CACL,2DAAI,UAACnG,MAAD,EAAiB;AACnBmP,sBAAU,CAACnP,MAAD,CAAV;AACD,WAFD,CADK,EAIL,kEAAW,UAACzB,KAAD,EAAgB;AACzBsD,mBAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BvD,KAA1B,EADyB,CAEzB;;AACA,mBAAO,wDAAWA,KAAX,CAAP;AACD,WAJD,CAJK,CAAP;AAUD;AArB4B;;AAAA;AAAA,O;;;uBAAlByQ,kB,EAAkB,4J,EAAA,sH;AAAA,K;;;aAAlBA,kB;AAAkB,eAAlBA,kBAAkB;;AAO7B,8DADC,2DAAO,uEAAyBzH,kBAAhC,CACD,G,4BAAA,E,oBAAA,E,IAAA;AAPWyH,sBAAkB,6DAL9B,0DAA0B;AACzB/R,UAAI,EAAE,gBADmB;AAEzBmS,cAAQ,EAAE;AAFe,KAA1B,CAK8B,GAAlBJ,kBAAkB,CAAlB;;;;sEAAAA,kB,EAAkB;cAD9B;AAC8B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACjB/B;AAAA;;;AAAA;AAAA;AAAA;;AAAO,QAAUK,0BAAV;;AAAP,eAAiBA,0BAAjB,EAA2C;AAAA,UAC5B1H,oBAD4B,GAGvC,8BAAmBL,QAAnB,EAAqC;AAAA;;AAAlB,aAAAA,QAAA,GAAAA,QAAA;AAAoB,OAHA;;AAEvB,2BAAAwH,IAAA,GAAO,kCAAP;AADL,iCAAAnH,oBAAA,GAAoB,oBAApB;AAId,KALD,EAAiB0H,0BAA0B,KAA1BA,0BAA0B,MAA3C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCIaC,wB;;;;;;;uCAEkBvW,K,EAA6B;AACxD,iBAAOA,KAAP;AACD;;;;;;AAFD,8DADC,6DAAS,CAAC,2DAAD,CAAT,CACD,G,wBAAA,E,gBAAA,E,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCWWwW,oBAAoB;AAC/B,oCACUN,OADV,EAEUlK,IAFV,EAE2B;AAAA;;AADjB,aAAAkK,OAAA,GAAAA,OAAA;AACA,aAAAlK,IAAA,GAAAA,IAAA;AACN;;AAJ2B;AAAA;AAAA,qDASgC;AAAA,cAD3DmK,QAC2D,SAD3DA,QAC2D;AAAA,cADjDC,UACiD,SADjDA,UACiD;AAAA,cAA3D7H,QAA2D,SAA3DA,QAA2D;AAE7D,iBAAO,KAAK2H,OAAL,CAAahH,cAAb,CAA4BX,QAA5B,EAAsCnB,IAAtC,CACL,2DAAI,UAACnG,MAAD,EAAiB;AACnBmP,sBAAU,CAACnP,MAAD,CAAV;AACD,WAFD,CADK,EAIL,kEAAW,UAACzB,KAAD,EAAgB;AACzBsD,mBAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BvD,KAA1B,EADyB,CAEzB;;AACA,mBAAO,wDAAWA,KAAX,CAAP;AACD,WAJD,CAJK,CAAP;AAUD;AArB8B;;AAAA;AAAA,O;;;uBAApBgR,oB,EAAoB,oK,EAAA,sH;AAAA,K;;;aAApBA,oB;AAAoB,eAApBA,oBAAoB;;AAO/B,8DADC,2DAAO,yEAA2B5H,oBAAlC,CACD,G,8BAAA,E,gBAAA,E,IAAA;AAPW4H,wBAAoB,6DALhC,0DAA4B;AAC3BtS,UAAI,EAAE,mBADqB;AAE3BmS,cAAQ,EAAE;AAFiB,KAA5B,CAKgC,GAApBG,oBAAoB,CAApB;;;;sEAAAA,oB,EAAoB;cADhC;AACgC,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACfjC;AAAA;;;AAAA;AAAA;AAAA;;AAAO,QAAUC,uBAAV;;AAAP,eAAiBA,uBAAjB,EAAwC;AAAA,UACzBpH,iBADyB,GAGpC,2BAAmB9F,KAAnB,EAA8C;AAAA;;AAA3B,aAAAA,KAAA,GAAAA,KAAA;AAA6B,OAHZ;;AAEpB,wBAAAwM,IAAA,GAAO,iBAAP;AADL,8BAAA1G,iBAAA,GAAiB,iBAAjB;AAId,KALD,EAAiBoH,uBAAuB,KAAvBA,uBAAuB,MAAxC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCEaC,qB;;;;;;;0CAEqB1W,K,EAA0B;AACxD,iBAAOA,KAAP;AACD;;;;;;AAFD,8DADC,6DAAS,CAAC,wDAAD,CAAT,CACD,G,qBAAA,E,mBAAA,E,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCWW2W,iBAAiB;AAC5B,iCACUT,OADV,EAEUlK,IAFV,EAE2B;AAAA;;AADjB,aAAAkK,OAAA,GAAAA,OAAA;AACA,aAAAlK,IAAA,GAAAA,IAAA;AACN;;AAJwB;AAAA;AAAA,wDAS0B;AAAA,cADlDmK,QACkD,SADlDA,QACkD;AAAA,cADxCC,UACwC,SADxCA,UACwC;AAAA,cAAlD7M,KAAkD,SAAlDA,KAAkD;AAEpD,iBAAO,KAAK2M,OAAL,CAAa9G,iBAAb,CAA+B7F,KAAK,CAAC/K,EAArC,EAAyC4O,IAAzC,CACL,2DAAI,UAACnG,MAAD,EAAiB;AACnBmP,sBAAU,CAAC,MAAD,OAAC,CAAD,kBACL7M,KADK,CAAC,EACD;AACRqN,qBAAO,EAAE3P;AADD,aADC,CAAD,CAAV;AAID,WALD,CADK,EAOL,kEAAW,UAACzB,KAAD,EAAgB;AACzBsD,mBAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BvD,KAA5B,EADyB,CAEzB;;AACA,mBAAO,wDAAWA,KAAX,CAAP;AACD,WAJD,CAPK,CAAP;AAaD;AAxB2B;;AAAA;AAAA,O;;;uBAAjBmR,iB,EAAiB,yJ,EAAA,sH;AAAA,K;;;aAAjBA,iB;AAAiB,eAAjBA,iBAAiB;;AAO5B,8DADC,2DAAO,sEAAwBtH,iBAA/B,CACD,G,2BAAA,E,mBAAA,E,IAAA;AAPWsH,qBAAiB,6DAL7B,0DAAyB;AACxBzS,UAAI,EAAE,eADkB;AAExBmS,cAAQ,EAAE;AAFc,KAAzB,CAK6B,GAAjBM,iBAAiB,CAAjB;;;;sEAAAA,iB,EAAiB;cAD7B;AAC6B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACjB9B;AAAA;;;AAAA;AAAA;AAAA;;AAAO,QAAUE,sBAAV;;AAAP,eAAiBA,sBAAjB,EAAuC;AAAA,UACxBvK,gBADwB;AAAA;AAAA;;AAEnB,uBAAAyJ,IAAA,GAAO,8BAAP;AADL,6BAAAzJ,gBAAA,GAAgB,gBAAhB;AAGd,KAJD,EAAiBuK,sBAAsB,KAAtBA,sBAAsB,MAAvC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCIaC,oB;;;;;;;yCAEoB9W,K,EAAyB;AACtD,iBAAOA,KAAP;AACD;;;;;;AAFD,8DADC,6DAAS,CAAC,uDAAD,CAAT,CACD,G,oBAAA,E,kBAAA,E,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCSW+W,gBAAgB;AAC3B,gCAAoB/K,IAApB,EAAuC;AAAA;;AAAnB,aAAAA,IAAA,GAAAA,IAAA;AAAqB;;AADd;AAAA;AAAA,gDAIgD;AAAA,cAAxDmK,QAAwD,SAAxDA,QAAwD;AAAA,cAA9CC,UAA8C,SAA9CA,UAA8C;AACzE,cAAMzV,MAAM,GAAGwV,QAAQ,EAAvB;;AAEA,cAAIxV,MAAM,IAAI,IAAd,EAAoB;AAClB,mBAAO,KAAKqL,IAAL,CAAUK,gBAAV,GAA6Be,IAA7B,CACL,2DAAI,UAACnG,MAAD,EAAiB;AACnBxG,0BAAY,CAACI,OAAb,CAAqB,SAArB,EAAgCoG,MAAM,CAACmM,OAAvC;AACAgD,wBAAU,CAACnP,MAAD,CAAV;AACD,aAHD,CADK,EAKL,kEAAW,UAACzB,KAAD,EAAgB;AACzBsD,qBAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BvD,KAA5B,EADyB,CAEzB;;AACA,qBAAO,wDAAWA,KAAX,CAAP;AACD,aAJD,CALK,CAAP;AAWD;AACF;AApB0B;;AAAA;AAAA,O;;;uBAAhBuR,gB,EAAgB,sH;AAAA,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB;;AAI3B,8DADC,2DAAO,qEAAuBzK,gBAA9B,CACD,G,0BAAA,E,kBAAA,E,IAAA;AAJWyK,oBAAgB,6DAL5B,0DAAwB;AACvB7S,UAAI,EAAE,cADiB;AAEvBmS,cAAQ,EAAE;AAFa,KAAxB,CAK4B,GAAhBU,gBAAgB,CAAhB;;;;sEAAAA,gB,EAAgB;cAD5B;AAC4B,Q;;;;;;;;;;;;;;;;;;;;;;;;ACb7B;AAAA;;;AAAA;AAAA;AAAA;;AAAO,QAAUC,iBAAV;;AAAP,eAAiBA,iBAAjB,EAAkC;AAAA,UACnBjP,kBADmB,GAG9B,8BAAoD;AAAA,YAAjCsI,WAAiC,uEAAN,IAAM;;AAAA;;AAAjC,aAAAA,WAAA,GAAAA,WAAA;AAAmC,OAHxB;;AAEd,yBAAA0F,IAAA,GAAO,mCAAP;AADL,wBAAAhO,kBAAA,GAAkB,kBAAlB;;AADmB,UAMnBkP,iBANmB,GAQ9B,6BAAoD;AAAA,YAAjC5G,WAAiC,uEAAN,IAAM;;AAAA;;AAAjC,aAAAA,WAAA,GAAAA,WAAA;AAAmC,OARxB;;AAOd,wBAAA0F,IAAA,GAAO,kCAAP;AADL,wBAAAkB,iBAAA,GAAiB,iBAAjB;AAId,KAVD,EAAiBD,iBAAiB,KAAjBA,iBAAiB,MAAlC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCeaE,kBAAkB;AAC7B,kCAAoBhB,OAApB,EAAoDlK,IAApD,EAAuE;AAAA;;AAAnD,aAAAkK,OAAA,GAAAA,OAAA;AAAgC,aAAAlK,IAAA,GAAAA,IAAA;AAAqB;;AAD5C;AAAA;AAAA,yDAM0B;AAAA,cADnDmK,QACmD,SADnDA,QACmD;AAAA,cADzCC,UACyC,SADzCA,UACyC;AAAA,cAAnD/F,WAAmD,SAAnDA,WAAmD;AAErD,cAAM1P,MAAM,GAAGwV,QAAQ,EAAvB;;AAEA,cAAIxV,MAAM,IAAI,IAAd,EAAoB;AAClB,mBAAO,KAAKuV,OAAL,CAAapO,kBAAb,CAAgCuI,WAAhC,EAA6CjD,IAA7C,CACL,2DAAI,UAACnG,MAAD,EAAiB;AACnBmP,wBAAU,CAACnP,MAAD,CAAV;AACD,aAFD,CADK,EAIL,kEAAW,UAACzB,KAAD,EAAgB;AACzBsD,qBAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BvD,KAA1B,EADyB,CAEzB;;AACA,qBAAO,wDAAWA,KAAX,CAAP;AACD,aAJD,CAJK,CAAP;AAUD;AACF;AAtB4B;;AAAA;AAAA,O;;;uBAAlB0R,kB,EAAkB,qI,EAAA,sH;AAAA,K;;;aAAlBA,kB;AAAkB,eAAlBA,kBAAkB;;AAI7B,8DADC,2DAAO,gEAAkBnP,kBAAzB,CACD,G,4BAAA,E,oBAAA,E,IAAA;AAJWmP,sBAAkB,6DAL9B,0DAAyB;AACxBhT,UAAI,EAAE,gBADkB;AAExBmS,cAAQ,EAAE;AAFc,KAAzB,CAK8B,GAAlBa,kBAAkB,CAAlB;;;;sEAAAA,kB,EAAkB;cAD9B;AAC8B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCblBC,e;;;;;;;2CAEsBnX,K,EAA0B;AACzD,iBAAOA,KAAP;AACD;;;;;;AAFD,8DADC,6DAAS,CAAC,iEAAD,CAAT,CACD,G,eAAA,E,oBAAA,E,IAAA;;;;;;;;;;;;;;;;ACNF;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAaO,QAAMoX,KAAK,GAAG,CACnB,oEADmB,EAEnB,gEAFmB,EAGnB,sEAHmB,EAInB,kEAJmB,EAKnB,0EALmB,EAMnB,wEANmB,EAOnB,6EAPmB,EAQnB,kEARmB,EASnB,wEATmB,EAUnB,4EAVmB,EAWnB,0EAXmB,EAYnB,8DAZmB,CAAd;;;;;;;;;;;;;;;;ACXP;AAAA;;;AAAA;AAAA;AAAA;;AAAO,QAAUC,mBAAV;;AAAP,eAAiBA,mBAAjB,EAAoC;AAAA,UACrBjL,WADqB,GAGhC,qBAAmB9J,MAAnB,EAA0C;AAAA;;AAAvB,aAAAA,MAAA,GAAAA,MAAA;AAAyB,OAHZ;;AAEhB,kBAAAyT,IAAA,GAAO,kCAAP;AADL,0BAAA3J,WAAA,GAAW,WAAX;AAId,KALD,EAAiBiL,mBAAmB,KAAnBA,mBAAmB,MAApC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCEaC,iB;;;;;;;sCAEiBtX,K,EAAsB;AAChD,iBAAOA,KAAP;AACD;;;;;;AAFD,8DADC,6DAAS,CAAC,oDAAD,CAAT,CACD,G,iBAAA,E,eAAA,E,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iDCHF;AACA;AAKA;;;QAOauX,aAAa;AACxB,+BAAc;AAAA;AAAE;;AADQ;AAAA;AAAA,oDAMqB;AAAA,cADzCpB,QACyC,UADzCA,QACyC;AAAA,cAD/BC,UAC+B,UAD/BA,UAC+B;AAAA,cAAzC9T,MAAyC,UAAzCA,MAAyC;AAE3C,cAAM3B,MAAM,GAAGwV,QAAQ,EAAvB;AAEAC,oBAAU,CAAC,MAAD,OAAC,CAAD,kBAAMzV,MAAN,CAAC,EAAgB2B,MAAhB,CAAD,CAAV;AACD;AAXuB;;AAAA;AAAA,O;;;uBAAbiV,a;AAAa,K;;;aAAbA,a;AAAa,eAAbA,aAAa;;AAIxB,8DADC,2DAAO,kEAAoBnL,WAA3B,CACD,G,uBAAA,E,aAAA,E,IAAA;AAJWmL,iBAAa,6DALzB,0DAAqB;AACpBrT,UAAI,EAAE,UADc;AAEpBmS,cAAQ,EAAE;AAFU,KAArB,CAKyB,GAAbkB,aAAa,CAAb;;;;sEAAAA,a,EAAa;cADzB;AACyB,Q;;;;;;;;;;;;;;;;;;;;;;ACd1B;AAAA;;;AAAA;AAAA;AAAA;;AAAO,QAAUC,qBAAV;;AAAP,eAAiBA,qBAAjB,EAAsC;AAAA,UACvBzR,aADuB,GAGlC,yBAAoD;AAAA,YAAjCsK,WAAiC,uEAAN,IAAM;;AAAA;;AAAjC,aAAAA,WAAA,GAAAA,WAAA;AAAmC,OAHpB;;AAElB,oBAAA0F,IAAA,GAAO,gCAAP;AADL,4BAAAhQ,aAAA,GAAa,aAAb;AAId,KALD,EAAiByR,qBAAqB,KAArBA,qBAAqB,MAAtC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCEaC,mB;;;;;;;sCAEiBzX,K,EAAqB;AAC/C,iBAAOA,KAAP;AACD;;;;;;AAFD,8DADC,6DAAS,CAAC,sDAAD,CAAT,CACD,G,mBAAA,E,eAAA,E,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCWW0X,eAAe;AAC1B,+BAAoBxB,OAApB,EAAwDlK,IAAxD,EAA2E;AAAA;;AAAvD,aAAAkK,OAAA,GAAAA,OAAA;AAAoC,aAAAlK,IAAA,GAAAA,IAAA;AAAqB;;AADnD;AAAA;AAAA,sDAM4B;AAAA,cADlDmK,QACkD,UADlDA,QACkD;AAAA,cADxCC,UACwC,UADxCA,UACwC;AAAA,cAAlD/F,WAAkD,UAAlDA,WAAkD;AAEpD,cAAM1P,MAAM,GAAGwV,QAAQ,EAAvB;;AAEA,cAAIxV,MAAM,IAAI,IAAd,EAAoB;AAClB,mBAAO,KAAKuV,OAAL,CAAarK,aAAb,CAA2BwE,WAA3B,EAAwCjD,IAAxC,CACL,2DAAI,UAACnG,MAAD,EAAiB;AACnBmP,wBAAU,CAACnP,MAAD,CAAV;AACD,aAFD,CADK,EAIL,kEAAW,UAACzB,KAAD,EAAgB;AACzBsD,qBAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BvD,KAA1B,EADyB,CAEzB;;AACA,qBAAO,wDAAWA,KAAX,CAAP;AACD,aAJD,CAJK,CAAP;AAUD;AACF;AAtByB;;AAAA;AAAA,O;;;uBAAfkS,e,EAAe,mJ,EAAA,sH;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe;;AAI1B,8DADC,2DAAO,oEAAsB3R,aAA7B,CACD,G,yBAAA,E,eAAA,E,IAAA;AAJW2R,mBAAe,6DAL3B,0DAAoB;AACnBxT,UAAI,EAAE,aADa;AAEnBmS,cAAQ,EAAE;AAFS,KAApB,CAK2B,GAAfqB,eAAe,CAAf;;;;sEAAAA,e,EAAe;cAD3B;AAC2B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACjB5B;AAAA;;;AAAA;AAAA;AAAA;;AAAO,QAAUC,0BAAV;;AAAP,eAAiBA,0BAAjB,EAA2C;AAAA,UAC5B5T,oBAD4B,GAGvC,8BAAmBD,UAAnB,EAAuC;AAAA;;AAApB,aAAAA,UAAA,GAAAA,UAAA;AAAsB,OAHF;;AAEvB,2BAAAiS,IAAA,GAAO,4BAAP;AADL,iCAAAhS,oBAAA,GAAoB,oBAApB;AAId,KALD,EAAiB4T,0BAA0B,KAA1BA,0BAA0B,MAA3C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCIaC,wB;;;;;;;6CAEwB5X,K,EAA6B;AAC9D,iBAAOA,KAAP;AACD;;;;;;AAFD,8DADC,6DAAS,CAAC,2DAAD,CAAT,CACD,G,wBAAA,E,sBAAA,E,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCWW6X,oBAAoB;AAC/B,oCAAoB3B,OAApB,EAAwDlK,IAAxD,EAA2E;AAAA;;AAAvD,aAAAkK,OAAA,GAAAA,OAAA;AAAoC,aAAAlK,IAAA,GAAAA,IAAA;AAAqB;;AAD9C;AAAA;AAAA,6DAMkC;AAAA,cAD7DmK,QAC6D,UAD7DA,QAC6D;AAAA,cADnDC,UACmD,UADnDA,UACmD;AAAA,cAA7DtS,UAA6D,UAA7DA,UAA6D;AAE/D,cAAMnD,MAAM,GAAGwV,QAAQ,EAAvB;;AAEA,cAAIxV,MAAM,IAAI,IAAd,EAAoB;AAClB,mBAAO,KAAKuV,OAAL,CAAa4B,oBAAb,CAAkChU,UAAlC,EAA8CsJ,IAA9C,CACL,2DAAI,UAACnG,MAAD,EAAiB;AACnBmP,wBAAU,CAACnP,MAAD,CAAV;AACD,aAFD,CADK,EAIL,kEAAW,UAACzB,KAAD,EAAgB;AACzBsD,qBAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCvD,KAAhC,EADyB,CAEzB;;AACA,qBAAO,wDAAWA,KAAX,CAAP;AACD,aAJD,CAJK,CAAP;AAUD;AACF;AAtB8B;;AAAA;AAAA,O;;;uBAApBqS,oB,EAAoB,mJ,EAAA,sH;AAAA,K;;;aAApBA,oB;AAAoB,eAApBA,oBAAoB;;AAI/B,8DADC,2DAAO,yEAA2B9T,oBAAlC,CACD,G,8BAAA,E,sBAAA,E,IAAA;AAJW8T,wBAAoB,6DALhC,0DAA4B;AAC3B3T,UAAI,EAAE,kBADqB;AAE3BmS,cAAQ,EAAE;AAFiB,KAA5B,CAKgC,GAApBwB,oBAAoB,CAApB;;;;sEAAAA,oB,EAAoB;cADhC;AACgC,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACfjC;AAAA;;;AAAA;AAAA;AAAA;;AAAO,QAAUE,yBAAV;;AAAP,eAAiBA,yBAAjB,EAA0C;AAAA,UAC3BjG,mBAD2B,GAGtC,6BAAmBzB,WAAnB,EAA6C;AAAA;;AAA1B,aAAAA,WAAA,GAAAA,WAAA;AAA4B,OAHT;;AAEtB,0BAAA0F,IAAA,GAAO,sCAAP;AADL,gCAAAjE,mBAAA,GAAmB,mBAAnB;AAId,KALD,EAAiBiG,yBAAyB,KAAzBA,yBAAyB,MAA1C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCEaC,uB;;;;;;;4CAEuBhY,K,EAA4B;AAC5D,iBAAOA,KAAP;AACD;;;;;;AAFD,8DADC,6DAAS,CAAC,0DAAD,CAAT,CACD,G,uBAAA,E,qBAAA,E,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCSWiY,mBAAmB;AAC9B,mCAAoB/B,OAApB,EAAgD;AAAA;;AAA5B,aAAAA,OAAA,GAAAA,OAAA;AAA8B;;AADpB;AAAA;AAAA,4DAMkC;AAAA,cAD5DC,QAC4D,UAD5DA,QAC4D;AAAA,cADlDC,UACkD,UADlDA,UACkD;AAAA,cAA5D/F,WAA4D,UAA5DA,WAA4D;AAE9D,cAAM1P,MAAM,GAAGwV,QAAQ,EAAvB;;AAEA,cAAIxV,MAAM,IAAI,IAAd,EAAoB;AAClB,mBAAO,KAAKuV,OAAL,CAAajE,iBAAb,CAA+B5B,WAA/B,EAA4CjD,IAA5C,CACL,2DAAI,UAACnG,MAAD,EAAiB;AACnBmP,wBAAU,CAACnP,MAAD,CAAV;AACD,aAFD,CADK,EAIL,kEAAW,UAACzB,KAAD,EAAgB;AACzBsD,qBAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCvD,KAAlC,EADyB,CAEzB;;AACA,qBAAO,wDAAWA,KAAX,CAAP;AACD,aAJD,CAJK,CAAP;AAUD;AACF;AAtB6B;;AAAA;AAAA,O;;;uBAAnByS,mB,EAAmB,mJ;AAAA,K;;;aAAnBA,mB;AAAmB,eAAnBA,mBAAmB;;AAI9B,8DADC,2DAAO,wEAA0BnG,mBAAjC,CACD,G,6BAAA,E,qBAAA,E,IAAA;AAJWmG,uBAAmB,6DAL/B,0DAA2B;AAC1B/T,UAAI,EAAE,gBADoB;AAE1BmS,cAAQ,EAAE;AAFgB,KAA3B,CAK+B,GAAnB4B,mBAAmB,CAAnB;;;;sEAAAA,mB,EAAmB;cAD/B;AAC+B,Q;;;;;;;;;;;;;;;;;;;;;;;;ACfhC;AAAA;;;AAAA;AAAA;AAAA;;AAAO,QAAUC,wBAAV;;AAAP,eAAiBA,wBAAjB,EAAyC;AAAA,UAC1BxJ,kBAD0B,GAGrC,4BAAmBH,QAAnB,EAAqC;AAAA;;AAAlB,aAAAA,QAAA,GAAAA,QAAA;AAAoB,OAHF;;AAErB,yBAAAwH,IAAA,GAAO,8BAAP;AADL,+BAAArH,kBAAA,GAAkB,kBAAlB;AAId,KALD,EAAiBwJ,wBAAwB,KAAxBA,wBAAwB,MAAzC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCIaC,uB;;;;;;;wCAEmBnY,K,EAA4B;AACxD,iBAAOA,KAAP;AACD;;;;;;AAFD,8DADC,6DAAS,CAAC,0DAAD,CAAT,CACD,G,uBAAA,E,iBAAA,E,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCWWoY,mBAAmB;AAC9B,mCACUlC,OADV,EAEUlK,IAFV,EAE2B;AAAA;;AADjB,aAAAkK,OAAA,GAAAA,OAAA;AACA,aAAAlK,IAAA,GAAAA,IAAA;AACN;;AAJ0B;AAAA;AAAA,4DAS6B;AAAA,cADvDmK,QACuD,UADvDA,QACuD;AAAA,cAD7CC,UAC6C,UAD7CA,UAC6C;AAAA,cAAvD7H,QAAuD,UAAvDA,QAAuD;AAEzD,iBAAO,KAAK2H,OAAL,CAAazH,mBAAb,CAAiCF,QAAjC,EAA2CnB,IAA3C,CACL,2DAAI,UAACnG,MAAD,EAAiB;AACnBmP,sBAAU,CAACnP,MAAD,CAAV;AACD,WAFD,CADK,EAIL,kEAAW,UAACzB,KAAD,EAAgB;AACzBsD,mBAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BvD,KAA1B,EADyB,CAEzB;;AACA,mBAAO,wDAAWA,KAAX,CAAP;AACD,WAJD,CAJK,CAAP;AAUD;AArB6B;;AAAA;AAAA,O;;;uBAAnB4S,mB,EAAmB,+J,EAAA,sH;AAAA,K;;;aAAnBA,mB;AAAmB,eAAnBA,mBAAmB;;AAO9B,8DADC,2DAAO,uEAAyB1J,kBAAhC,CACD,G,6BAAA,E,qBAAA,E,IAAA;AAPW0J,uBAAmB,6DAL/B,0DAA2B;AAC1BlU,UAAI,EAAE,iBADoB;AAE1BmS,cAAQ,EAAE;AAFgB,KAA3B,CAK+B,GAAnB+B,mBAAmB,CAAnB;;;;sEAAAA,mB,EAAmB;cAD/B;AAC+B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACfhC;AAAA;;;AAAA;AAAA;AAAA;;AAAO,QAAUC,qBAAV;;AAAP,eAAiBA,qBAAjB,EAAsC;AAAA,UACvB5F,eADuB,GAGlC,2BAAoD;AAAA,YAAjCpC,WAAiC,uEAAN,IAAM;;AAAA;;AAAjC,aAAAA,WAAA,GAAAA,WAAA;AAAmC,OAHpB;;AAElB,sBAAA0F,IAAA,GAAO,0BAAP;AADL,4BAAAtD,eAAA,GAAe,eAAf;AAId,KALD,EAAiB4F,qBAAqB,KAArBA,qBAAqB,MAAtC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCEaC,mB;;;;;;;wCAEmBtY,K,EAAqB;AACjD,iBAAOA,KAAP;AACD;;;;;;AAFD,8DADC,6DAAS,CAAC,sDAAD,CAAT,CACD,G,mBAAA,E,iBAAA,E,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCWWuY,eAAe;AAC1B,+BAAoBrC,OAApB,EAAwDlK,IAAxD,EAA2E;AAAA;;AAAvD,aAAAkK,OAAA,GAAAA,OAAA;AAAoC,aAAAlK,IAAA,GAAAA,IAAA;AAAqB;;AADnD;AAAA;AAAA,wDAM8B;AAAA,cADpDmK,QACoD,UADpDA,QACoD;AAAA,cAD1CC,UAC0C,UAD1CA,UAC0C;AAAA,cAApD/F,WAAoD,UAApDA,WAAoD;AAEtD,cAAM1P,MAAM,GAAGwV,QAAQ,EAAvB;AACA,cAAMqC,EAAE,GAAG/O,IAAI,CAACc,KAAL,CAAW9J,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAAX;;AAEA,cACEC,MAAM,IAAI,IAAV,IACA6X,EAAE,CAAC5F,UAAH,KAAkB,WADlB,IAEA4F,EAAE,CAAC5F,UAAH,MAAkBvC,WAAW,SAAX,IAAAA,WAAW,WAAX,GAAW,MAAX,GAAAA,WAAW,CAAEuC,UAA/B,CAHF,EAIE;AACA,mBAAO,KAAKsD,OAAL,CAAajH,eAAb,CAA6BoB,WAA7B,EAA0CjD,IAA1C,CACL,2DAAI,UAACnG,MAAD,EAAiB;AACnBmP,wBAAU,CAACnP,MAAD,CAAV;AACAxG,0BAAY,CAACI,OAAb,CACE,aADF,EAEE4I,IAAI,CAACC,SAAL,CAAe;AAAEkJ,0BAAU,EAAEvC,WAAW,SAAX,IAAAA,WAAW,WAAX,GAAW,MAAX,GAAAA,WAAW,CAAEuC;AAA3B,eAAf,CAFF;AAID,aAND,CADK,EAQL,kEAAW,UAACpN,KAAD,EAAgB;AACzBsD,qBAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BvD,KAA1B,EADyB,CAEzB;;AACA,qBAAO,wDAAWA,KAAX,CAAP;AACD,aAJD,CARK,CAAP;AAcD;AACF;AA/ByB;;AAAA;AAAA,O;;;uBAAf+S,e,EAAe,mJ,EAAA,sH;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe;;AAI1B,8DADC,2DAAO,oEAAsB9F,eAA7B,CACD,G,yBAAA,E,iBAAA,E,IAAA;AAJW8F,mBAAe,6DAL3B,0DAAoB;AACnBrU,UAAI,EAAE,aADa;AAEnBmS,cAAQ,EAAE;AAFS,KAApB,CAK2B,GAAfkC,eAAe,CAAf;;;;sEAAAA,e,EAAe;cAD3B;AAC2B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACf5B;AAAA;;;AAAA;AAAA;AAAA;;AAAO,QAAUE,oBAAV;;AAAP,eAAiBA,oBAAjB,EAAqC;AAAA,UACtBzF,cADsB,GAGjC,0BAAoD;AAAA,YAAjC3C,WAAiC,uEAAN,IAAM;;AAAA;;AAAjC,aAAAA,WAAA,GAAAA,WAAA;AAAmC,OAHrB;;AAEjB,qBAAA0F,IAAA,GAAO,yBAAP;AADL,2BAAA/C,cAAA,GAAc,cAAd;AAId,KALD,EAAiByF,oBAAoB,KAApBA,oBAAoB,MAArC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCEaC,kB;;;;;;;uCAEkB1Y,K,EAAqB;AAChD,iBAAOA,KAAP;AACD;;;;;;AAFD,8DADC,6DAAS,CAAC,qDAAD,CAAT,CACD,G,kBAAA,E,gBAAA,E,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCWW2Y,cAAc;AACzB,8BAAoBzC,OAApB,EAAuDlK,IAAvD,EAA0E;AAAA;;AAAtD,aAAAkK,OAAA,GAAAA,OAAA;AAAmC,aAAAlK,IAAA,GAAAA,IAAA;AAAqB;;AADnD;AAAA;AAAA,uDAM6B;AAAA,cADlDmK,QACkD,UADlDA,QACkD;AAAA,cADxCC,UACwC,UADxCA,UACwC;AAAA,cAAlD/F,WAAkD,UAAlDA,WAAkD;AAEpD,cAAM1P,MAAM,GAAGwV,QAAQ,EAAvB;AACA,cAAMqC,EAAE,GAAG/O,IAAI,CAACc,KAAL,CAAW9J,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAAX;;AAEA,cACEC,MAAM,IAAI,IAAV,IACA6X,EAAE,CAAC5F,UAAH,KAAkB,WADlB,IAEA4F,EAAE,CAAC5F,UAAH,MAAkBvC,WAAW,SAAX,IAAAA,WAAW,WAAX,GAAW,MAAX,GAAAA,WAAW,CAAEuC,UAA/B,CAHF,EAIE;AACA,mBAAO,KAAKsD,OAAL,CAAahH,cAAb,CAA4BmB,WAA5B,EAAyCjD,IAAzC,CACL,2DAAI,UAACnG,MAAD,EAAiB;AACnBmP,wBAAU,CAACnP,MAAD,CAAV;AACAxG,0BAAY,CAACI,OAAb,CACE,YADF,EAEE4I,IAAI,CAACC,SAAL,CAAe;AAAEkJ,0BAAU,EAAEvC,WAAW,SAAX,IAAAA,WAAW,WAAX,GAAW,MAAX,GAAAA,WAAW,CAAEuC;AAA3B,eAAf,CAFF;AAID,aAND,CADK,EAQL,kEAAW,UAACpN,KAAD,EAAgB;AACzBsD,qBAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BvD,KAA1B,EADyB,CAEzB;;AACA,qBAAO,wDAAWA,KAAX,CAAP;AACD,aAJD,CARK,CAAP;AAcD;AACF;AA/BwB;;AAAA;AAAA,O;;;uBAAdmT,c,EAAc,gJ,EAAA,sH;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc;;AAIzB,8DADC,2DAAO,mEAAqB3F,cAA5B,CACD,G,wBAAA,E,gBAAA,E,IAAA;AAJW2F,kBAAc,6DAL1B,0DAAoB;AACnBzU,UAAI,EAAE,YADa;AAEnBmS,cAAQ,EAAE;AAFS,KAApB,CAK0B,GAAdsC,cAAc,CAAd;;;;sEAAAA,c,EAAc;cAD1B;AAC0B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACjB3B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMC,WAAW,GAAG;AACzBpZ,gBAAU,EAAE,KADa;AAEzB2B,eAAS,EAAE,kCAFc;AAGzBgB,mBAAa,EAAE,kCAHU;AAIzBZ,kBAAY,EAAE,gCAJW;AAKzBqB,iBAAW,EAAE,6BALY;AAMzBH,uBAAiB,EAAE;AANM,KAApB;AASP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACpBA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAOA,QAAI,sEAAYjD,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAwB,eAAxB,CACmB,yDADnB,WAES,UAAC0F,GAAD;AAAA,aAAS4D,OAAO,CAACtD,KAAR,CAAcN,GAAd,CAAT;AAAA,KAFT","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './auth/auth.guard';\n\nimport { MainComponent } from './pages/main/main.component';\nimport { MainModule } from './pages/main/main.module';\nimport { LoginComponent } from './pages/login/login.component';\nimport { CallbackComponent } from './pages/callback/callback.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MainComponent,\n    canActivate: [AuthGuard],\n    loadChildren: () => MainModule,\n  },\n  { path: 'login', component: LoginComponent },\n  { path: 'callback', component: CallbackComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'spotify-profile';\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n// import { LazyLoadImageModule } from 'ng-lazyload-image';\n\nimport { NgxsModule } from '@ngxs/store';\nimport { NgxsLoggerPluginModule } from '@ngxs/logger-plugin';\nimport { NgxsDispatchPluginModule } from '@ngxs-labs/dispatch-decorator';\nimport { NgxsResetPluginModule } from 'ngxs-reset-plugin';\nimport { Store } from './store';\nimport { environment } from '../environments/environment';\n\nimport { AppComponent } from './app.component';\nimport { SharedModule } from './shared.module';\nimport { AppRoutingModule } from './app-routing.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    SharedModule,\n    AppRoutingModule,\n    NgxsModule.forRoot(Store, {\n      developmentMode: !environment.production,\n    }),\n    NgxsLoggerPluginModule.forRoot(),\n    NgxsDispatchPluginModule.forRoot(),\n    NgxsResetPluginModule.forRoot(),\n    HttpClientModule,\n  ],\n  providers: [],\n  exports: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from './auth.service';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    if (\n      !this.authService.isAuthenticated() &&\n      this.authService.accessTokenChecker()\n    ) {\n      this.router.navigate(['login']);\n      return false;\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngxs/store';\nimport * as queryString from 'query-string';\nimport { StateClear } from 'ngxs-reset-plugin';\n\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private store: Store\n  ) {}\n\n  /**\n   * isAuthenticated\n   */\n  public isAuthenticated() {\n    const token = localStorage.getItem('access_token');\n\n    if (token == null || token === '' || token == 'undefined') return false;\n\n    return true;\n  }\n\n  /**\n   * authenticateUser\n   */\n  public authenticateUser() {\n    const state$ = this.generateRandomString(16);\n\n    localStorage.setItem('state', state$);\n\n    const scope$ = [\n      'user-read-private',\n      'user-read-email',\n      'user-follow-read',\n      'user-top-read',\n      'playlist-read-private',\n      // modify user follower scope\n      'user-follow-read',\n      'user-follow-modify',\n      // modify public and private playlist scope\n      'playlist-modify-public',\n      'playlist-modify-private',\n    ];\n\n    window.location.href =\n      'https://accounts.spotify.com/authorize?' +\n      queryString.stringify({\n        response_type: 'code',\n        client_id: environment.client_id,\n        scope: scope$.toString().replace(/,/g, ' '),\n        redirect_uri: environment.redirect_uri,\n        state: state$,\n      });\n\n    this.store.dispatch(new StateClear());\n  }\n\n  /**\n   * generateRandomString\n   */\n  public generateRandomString(length) {\n    var text = '';\n    var possible =\n      'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    for (var i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n  }\n\n  /**\n   * authHttpHeaders\n   */\n  public authHttpHeaders() {\n    return new HttpHeaders({\n      Authorization: `Basic ${btoa(\n        environment.client_id + ':' + environment.client_secret\n      )}`,\n      'Content-Type': 'application/x-www-form-urlencoded',\n    });\n  }\n\n  /**\n   * generateToken\n   */\n  public generateToken(code: string) {\n    const headers = this.authHttpHeaders();\n\n    const params = new HttpParams()\n      .set('code', code)\n      .set('redirect_uri', environment.redirect_uri)\n      .set('grant_type', 'authorization_code');\n\n    return this.http.post<any>(\n      `${environment.spotify_api_token}`,\n      params.toString(),\n      { headers }\n    );\n  }\n\n  /**\n   * refreshToken\n   */\n  public refreshToken() {\n    const refreshToken = localStorage.getItem('refresh_token');\n    const headers = this.authHttpHeaders();\n    const params = new HttpParams()\n      .set('grant_type', 'refresh_token')\n      .set('refresh_token', refreshToken);\n\n    return this.http.post<any>(\n      `${environment.spotify_api_token}`,\n      params.toString(),\n      { headers }\n    );\n  }\n\n  /**\n   * UsersProfile\n   */\n  public fetchCurrentUser() {\n    return this.http.get<any[]>(`${environment.spotify_api}me`);\n  }\n\n  /**\n   * accessTokenChecker\n   */\n  public accessTokenChecker() {\n    const accessToken = localStorage.getItem('access_token');\n    return accessToken || accessToken !== '' ? true : false;\n  }\n\n  /**\n   * callback_times\n   */\n  public setCallbackTimes() {\n    let times = localStorage.getItem('callback_times');\n    let cons$ = times === null ? 1 : parseInt(times) + 1;\n    localStorage.setItem('callback_item', cons$.toString());\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  faSpotify,\n  faAngular,\n  faGithub,\n} from '@fortawesome/free-brands-svg-icons';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-built-with',\n  templateUrl: './built-with.component.html',\n  styleUrls: ['./built-with.component.scss'],\n})\nexport class BuiltWithComponent implements OnInit {\n  faSpotify = faSpotify;\n  faAngular = faAngular;\n  faGithub = faGithub;\n  faPlus = faPlus;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"built-container\">\n  <!-- <div class=\"built-content\">\n    <fa-icon [icon]=\"faSpotify\" class=\"fa-spotify\"></fa-icon>\n    <div class=\"fa-plus\">+</div>\n    <fa-icon [icon]=\"faAngular\" class=\"fa-angular\"></fa-icon>\n  </div>\n  <br /> -->\n  <div class=\"social-content\">\n    <a href=\"https://github.com/RyaiStudio\" target=\"_blank\" class=\"fa-github\"\n      ><fa-icon [icon]=\"faGithub\"></fa-icon\n    ></a>\n    <br />\n    <p>Spotify Profile &#169;2020</p>\n  </div>\n</div>\n","<ng-container>\n  <a (click)=\"editPlaylist()\" class=\"edit-playlist\">\n    EDIT DETAILS &nbsp;<fa-icon [icon]=\"faPen\"></fa-icon>\n  </a>\n\n  <div [class]=\"'modal ' + (isActive ? 'is-active' : '')\">\n    <button\n      class=\"modal-close is-large\"\n      (click)=\"isActive = false\"\n      aria-label=\"close\"\n    ></button>\n    <div class=\"modal-background\" (click)=\"isActive = false\"></div>\n    <div class=\"modal-content\">\n      <div class=\"modal-content--wrapper\">\n        <div class=\"container\">\n          <div class=\"columns\">\n            <div class=\"column is-two-fifths\" *ngIf=\"playlist as play\">\n              <figure class=\"image\">\n                <img\n                  [lazyLoad]=\"\n                    play.images.length > 0\n                      ? play.images[0].url\n                      : 'assets/images/spotify.png'\n                  \"\n                  alt=\"\"\n                />\n              </figure>\n            </div>\n            <div [formGroup]=\"editForm\" class=\"column\">\n              <div class=\"field\">\n                <label for=\"name\">PLAYLIST NAME</label>\n                <div class=\"control is-small\">\n                  <input\n                    id=\"name\"\n                    class=\"input is-small\"\n                    type=\"text\"\n                    formControlName=\"name\"\n                    autocomplete=\"off\"\n                  />\n                </div>\n                <div class=\"errors\" *ngIf=\"isSubmited && FC.name.errors\">\n                  <div *ngFor=\"let log of inputErrors.name\">\n                    <span\n                      *ngIf=\"FC.name.hasError(log.error)\"\n                      class=\"tag is-danger is-light\"\n                    >\n                      {{ log.label }}\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <div class=\"field\">\n                <label for=\"desc\">DESCRIPTION</label>\n                <textarea\n                  id=\"desc\"\n                  rows=\"3\"\n                  class=\"is-small textarea\"\n                  formControlName=\"description\"\n                ></textarea>\n                <div class=\"errors\" *ngIf=\"isSubmited && FC.description.errors\">\n                  <div *ngFor=\"let log of inputErrors.description\">\n                    <span\n                      *ngIf=\"FC.description.hasError(log.error)\"\n                      class=\"tag is-danger is-light\"\n                    >\n                      {{ log.label }}\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <div class=\"control dis-inl\">\n                <label class=\"radio\">\n                  <input\n                    type=\"radio\"\n                    name=\"public\"\n                    formControlName=\"public\"\n                    [value]=\"true\"\n                  />\n                  Public\n                </label>\n                <label class=\"radio\">\n                  <input\n                    type=\"radio\"\n                    name=\"public\"\n                    formControlName=\"public\"\n                    [value]=\"false\"\n                  />\n                  Private\n                </label>\n              </div>\n              <div class=\"edit-buttons\">\n                <a class=\"spotify-btn\" (click)=\"savePlaylist(playlist)\">SAVE</a>\n                <a class=\"spotify-btn cancel-btn\" (click)=\"isActive = false\"\n                  >cancel</a\n                >\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-container>\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { faPen } from '@fortawesome/free-solid-svg-icons';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { PlaylistPreviewModel } from '../../store/playlist-preview/model';\nimport { MyPlaylistService } from '../../services/my-playlist/my-playlist.service';\nimport { errors } from './utils';\nimport { SubSink } from 'subsink';\nimport { Toast } from '../../services/index';\n\nimport { Dispatch } from '@ngxs-labs/dispatch-decorator';\nimport { PlaylistPreviewActionsType } from '../../store/playlist-preview/actions.type';\n\n@Component({\n  selector: 'app-edit-playlist-btn',\n  templateUrl: './edit-playlist-btn.component.html',\n  styleUrls: ['./edit-playlist-btn.component.scss'],\n})\nexport class EditPlaylistBtnComponent implements OnInit, OnDestroy {\n  @Input() playlist: PlaylistPreviewModel;\n  editForm: FormGroup;\n  inputErrors: any = errors;\n  req$ = new SubSink();\n  toast = Toast();\n\n  faPen = faPen;\n  isActive: boolean = false;\n  isSubmited: boolean;\n\n  @Dispatch() playlistPreview = (playlistId: string) =>\n    new PlaylistPreviewActionsType.FetchPlaylistPreview(playlistId);\n\n  constructor(private FB: FormBuilder, private http: MyPlaylistService) {}\n\n  get FC() {\n    return this.editForm.controls;\n  }\n\n  ngOnInit(): void {\n    this.editForm = this.FB.group({\n      name: [\n        this.playlist.name,\n        [Validators.required, Validators.minLength(3)],\n      ],\n      description: [this.playlist.description, [Validators.minLength(25)]],\n      public: [true],\n    });\n  }\n\n  editPlaylist() {\n    this.isActive = true;\n  }\n\n  savePlaylist(playlist: PlaylistPreviewModel) {\n    this.isSubmited = true;\n    if (!this.editForm.valid) return;\n    const form = this.editForm.value;\n    const dataObj =\n      form.description !== '' ? form : { name: form.name, public: form.public };\n\n    this.req$.sink = this.http\n      .editPlaylistDetails(playlist.id, dataObj)\n      .subscribe(\n        (res) => {\n          this.toast.fire({\n            icon: 'success',\n            title: 'Success request edit playlist details',\n          });\n          this.playlistPreview(playlist.id);\n        },\n        (err) =>\n          this.toast.fire({\n            icon: 'error',\n            title: 'Failed request edit playlist details',\n          })\n      );\n\n    this.isActive = false;\n  }\n\n  ngOnDestroy() {\n    this.req$.unsubscribe();\n  }\n}\n","const errors = {\n  name: [\n    { error: 'required', label: 'this field is required' },\n    { error: 'minlength', label: 'min length must 3 characters' },\n  ],\n  description: [{ error: 'minlength', label: 'min length must 25 characters' }],\n};\n\nexport { errors };\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-figure-image',\n  templateUrl: './figure-image.component.html',\n  styleUrls: ['./figure-image.component.scss'],\n})\nexport class FigureImageComponent implements OnInit {\n  @Input() image: {\n    url: string;\n    alt?: string;\n  };\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<img\n  [lazyLoad]=\"image.url\"\n  [alt]=\"image.alt\"\n  defaultImage=\"assets/images/blur.jpg\"\n/>\n","<ng-container *ngIf=\"isMyPlaylist; else elseBlock\">\n  <a\n    *ngIf=\"isFollowed\"\n    (click)=\"unFollowUserPlaylist(playlist)\"\n    class=\"btn-unfollow\"\n  >\n    DELETE PLAYLIST &nbsp;<fa-icon [icon]=\"faTrash\"></fa-icon>\n  </a>\n  <a\n    *ngIf=\"!isFollowed\"\n    (click)=\"followUserPlaylist(playlist)\"\n    class=\"btn-unfollow\"\n  >\n    RESTORE PLAYLIST &nbsp;<fa-icon [icon]=\"faTrashRestoreAlt\"></fa-icon>\n  </a>\n</ng-container>\n<ng-template #elseBlock>\n  <a\n    *ngIf=\"isFollowed\"\n    (click)=\"unFollowPlaylist(playlist)\"\n    class=\"btn-unfollow\"\n    (mouseover)=\"ifFollowText = 'UNFOLLOW'\"\n    (mouseout)=\"ifFollowText = 'FOLLOWING'\"\n    [innerHTML]=\"ifFollowText\"\n  >\n  </a>\n  <a\n    *ngIf=\"!isFollowed\"\n    (click)=\"followPlaylist(playlist)\"\n    class=\"btn-unfollow\"\n  >\n    FOLLOW\n  </a>\n</ng-template>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { SubSink } from 'subsink';\n// import Swal from 'sweetalert2';\n\nimport { FollowService } from '../../services/follow/follow.service';\nimport { Dispatch } from '@ngxs-labs/dispatch-decorator';\nimport { StateReset } from 'ngxs-reset-plugin';\nimport { Toast, SwalFire } from '../../services/index';\nimport { Store } from '@ngxs/store';\n\nimport { faTrash, faTrashRestoreAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport { MyPlaylistActionsType } from '../../store/my-playlist/actions.type';\nimport { MyPlaylistState } from '../../store/my-playlist/state';\n\nimport { MyPlaylistItemModel } from '../../store/my-playlist/model';\nimport { CurrentUserModel } from '../../store/current-user/model';\nimport { PlaylistPreviewModel } from '../../store/playlist-preview/model';\n\n@Component({\n  selector: 'app-follow-btn-playlist',\n  templateUrl: './follow-btn-playlist.component.html',\n  styleUrls: ['./follow-btn-playlist.component.scss'],\n})\nexport class FollowBtnPlaylistComponent implements OnInit {\n  constructor(private follow: FollowService, private store: Store) {}\n\n  @Dispatch() fetchMyPlaylist = (qry = null) =>\n    new MyPlaylistActionsType.FetchPlaylist(qry);\n\n  @Input() playlist: PlaylistPreviewModel;\n  @Input() playlistCollection: MyPlaylistItemModel[];\n  @Input() currentUser: CurrentUserModel;\n  @Input() isMyPlaylist: boolean;\n\n  Toast = Toast();\n  swalFire = SwalFire;\n  // Swal = Swal;\n\n  faTrash = faTrash;\n  faTrashRestoreAlt = faTrashRestoreAlt;\n\n  putRequest$ = new SubSink();\n  ifFollowText = 'FOLLOWING';\n  isFollowed: boolean;\n\n  ngOnInit(): void {\n    if (this.playlistCollection && this.currentUser) {\n      const filter = this.playlistCollection.filter(\n        (res) => res.id === this.playlist.id\n      );\n      if (filter.length > 0) this.isFollowed = true;\n    }\n  }\n\n  toastCall(stat, msg) {\n    this.Toast.fire({ icon: stat == 1 ? 'success' : 'error', title: msg });\n  }\n\n  // swalFire(callback, options) {\n  //   Swal.fire({\n  //     ...options,\n  //     imageWidth: 200,\n  //     imageHeight: 200,\n  //     confirmButtonColor: '#1db954',\n  //     cancelButtonColor: '#8e9396',\n  //     showCancelButton: true,\n  //   }).then(callback);\n  // }\n\n  unFollowPlaylist(playlist) {\n    const options = {\n      title: playlist.name,\n      text: 'Are you sure to unfollow playlist',\n      imageUrl:\n        playlist.images.length > 0\n          ? playlist.images[0].url\n          : 'assets/images/spotify.png',\n      confirmButtonText: 'Unfollow Playlist',\n    };\n\n    this.swalFire((result) => {\n      if (result.value) {\n        this.putRequest$.sink = this.follow\n          .unFollowPlaylist(playlist.id)\n          .subscribe(\n            (res) => {\n              this.toastCall(1, 'Playlist has been unfollowed');\n              this.isFollowed = false;\n              this.store.dispatch(new StateReset(MyPlaylistState));\n              this.fetchMyPlaylist({ limit: 50 });\n            },\n            (err) => this.toastCall(2, 'unfollow request failed!')\n          );\n      }\n    }, options);\n  }\n\n  followPlaylist(playlist) {\n    const options = {\n      title: playlist.name,\n      input: 'radio',\n      inputOptions: { '0': 'Public', '1': 'Private' },\n      imageUrl:\n        playlist.images.length > 0\n          ? playlist.images[0].url\n          : 'assets/images/spotify.png',\n      confirmButtonText: 'Follow Playlist',\n    };\n\n    this.swalFire((result) => {\n      if (result.value) {\n        this.putRequest$.sink = this.follow\n          .followPlaylist(playlist.id)\n          .subscribe(\n            (res) => {\n              this.toastCall(1, 'Playlist has been followed');\n              this.isFollowed = true;\n              this.store.dispatch(new StateReset(MyPlaylistState));\n              this.fetchMyPlaylist({ limit: 50 });\n            },\n            (err) => this.toastCall(2, 'Follow request failed!')\n          );\n      }\n    }, options);\n  }\n\n  unFollowUserPlaylist(playlist) {\n    const options = {\n      title: playlist.name,\n      text:\n        'Are you sure!! you lost all tracks from this playlist once you leave this page.',\n      imageUrl:\n        playlist.images.length > 0\n          ? playlist.images[0].url\n          : 'assets/images/spotify.png',\n      confirmButtonText: 'Delete Playlist',\n    };\n\n    this.swalFire((result) => {\n      if (result.value && this.isMyPlaylist) {\n        this.putRequest$.sink = this.follow\n          .unFollowUserPlaylist(playlist.owner.id, playlist.id)\n          .subscribe(\n            (res) => {\n              this.toastCall(1, 'Playlist has been delete');\n              this.isFollowed = false;\n              this.store.dispatch(new StateReset(MyPlaylistState));\n              this.fetchMyPlaylist({ limit: 50 });\n            },\n            (err) => this.toastCall(2, 'Unfollow request failed!')\n          );\n      }\n    }, options);\n  }\n\n  followUserPlaylist(playlist) {\n    const options = {\n      title: playlist.name,\n      input: 'radio',\n      inputOptions: { '0': 'Public', '1': 'Private' },\n      imageUrl:\n        playlist.images.length > 0\n          ? playlist.images[0].url\n          : 'assets/images/spotify.png',\n      confirmButtonText: 'Restore PLaylist',\n    };\n\n    this.swalFire((result) => {\n      if (result.value && this.isMyPlaylist) {\n        const isPublic = result.value == '0' ? true : false;\n        this.putRequest$.sink = this.follow\n          .followUserPlaylist(playlist.owner.id, playlist.id, isPublic)\n          .subscribe(\n            (res) => {\n              this.toastCall(1, 'Playlist has been Restored');\n              this.isFollowed = true;\n              this.store.dispatch(new StateReset(MyPlaylistState));\n              this.fetchMyPlaylist({ limit: 50 });\n            },\n            (err) => this.toastCall(2, 'Unfollow request failed!')\n          );\n      }\n    }, options);\n  }\n}\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\n\nimport { ArtistPreviewModel } from '../../store/artist-preview/model';\nimport { FollowArtistItemModel } from '../../store/follow/artists-model';\n\nimport { FollowActionsType } from '../../store/follow/actions.type';\nimport { FollowService } from '../../services/follow/follow.service';\nimport { Dispatch } from '@ngxs-labs/dispatch-decorator';\nimport { SubSink } from 'subsink';\n\n// import Swal from 'sweetalert2';\nimport { Toast, SwalFire } from '../../services/index';\n\n@Component({\n  selector: 'app-follow-btn',\n  templateUrl: './follow-btn.component.html',\n  styleUrls: ['./follow-btn.component.scss'],\n})\nexport class FollowBtnComponent implements OnInit, OnDestroy {\n  constructor(private follow: FollowService) {}\n\n  @Dispatch() fetchFollowArtists = () =>\n    new FollowActionsType.FetchFollowArtists();\n\n  @Input() artist: ArtistPreviewModel;\n  @Input() following: FollowArtistItemModel[];\n\n  Toast = Toast();\n  swalFire = SwalFire;\n  putRequest$ = new SubSink();\n  $isFollowed = false;\n  $unfollowHover = false;\n\n  ngOnDestroy() {\n    this.putRequest$.unsubscribe();\n  }\n\n  ngOnInit(): void {\n    const fil = this.following.filter((follow) => follow.id === this.artist.id);\n    this.$isFollowed = fil.length > 0 ? true : false;\n    // console.log('this.$isFollowed', this.$isFollowed);\n  }\n\n  toastCall(stat, msg) {\n    this.Toast.fire({ icon: stat == 1 ? 'success' : 'error', title: msg });\n  }\n\n  // swalFire(callback, options) {\n  //   Swal.fire({\n  //     ...options,\n  //     imageWidth: 200,\n  //     imageHeight: 200,\n  //     confirmButtonColor: '#1db954',\n  //     cancelButtonColor: '#8e9396',\n  //     showCancelButton: true,\n  //   }).then(callback);\n  // }\n\n  followArtist(artist) {\n    const options = {\n      title: artist.name,\n      imageUrl: artist.images[0].url,\n      confirmButtonText: 'Confirm Follow',\n    };\n\n    this.swalFire((result) => {\n      if (result.value) {\n        this.putRequest$.sink = this.follow.followArtist(artist.id).subscribe(\n          (res) => {\n            this.toastCall(1, 'Artist has been followed');\n            this.fetchFollowArtists();\n            this.$isFollowed = true;\n          },\n          (err) => this.toastCall(2, 'Follow request failed!')\n        );\n      }\n    }, options);\n  }\n\n  unFollowArtist(artist) {\n    const options = {\n      title: artist.name,\n      text: 'Are you sure you want to continue?',\n      imageUrl: artist.images[0].url,\n      confirmButtonText: 'Unfollow Artist',\n    };\n\n    this.swalFire((result) => {\n      if (result.value) {\n        this.putRequest$.sink = this.follow.unFollowArtist(artist.id).subscribe(\n          (res) => {\n            this.toastCall(1, 'Artist has been unfollowed');\n            this.fetchFollowArtists();\n            this.$isFollowed = false;\n          },\n          (err) => this.toastCall(2, 'Follow request failed!')\n        );\n      }\n    }, options);\n  }\n}\n","<ng-container>\n  <a\n    *ngIf=\"$isFollowed\"\n    class=\"spotify-btn\"\n    [innerHTML]=\"$unfollowHover ? 'UNFOLLOWED' : 'FOLLOWING'\"\n    (mouseover)=\"$unfollowHover = true\"\n    (mouseout)=\"$unfollowHover = false\"\n    (click)=\"unFollowArtist(artist)\"\n  ></a>\n  <a *ngIf=\"!$isFollowed\" (click)=\"followArtist(artist)\" class=\"spotify-btn\">\n    FOLLOW\n  </a>\n</ng-container>\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { TopArtistsModel } from '../../store/top-artists/model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-grid-playlist',\n  templateUrl: './grid-playlist.component.html',\n  styleUrls: ['./grid-playlist.component.scss'],\n})\nexport class GridPlaylistComponent implements OnInit {\n  faEye = faEye;\n  @Input() artists: TopArtistsModel[];\n\n  defaultImage = 'https://www.placecage.com/1000/1000';\n  image = 'https://images.unsplash.com/photo-1443890923422-7819ed4101c0?fm=jpg';\n\n  constructor(private route: Router) {}\n\n  ngOnInit(): void {}\n\n  withComma(n) {\n    return n.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  previewArtist(artist) {\n    this.route.navigate(['artist', artist.id]);\n  }\n}\n","<div class=\"playlist-collection\">\n  <div\n    class=\"playlist-item\"\n    *ngFor=\"let artist of artists\"\n    (click)=\"previewArtist(artist)\"\n  >\n    <figure class=\"image\">\n      <img\n        [lazyLoad]=\"artist.images[0].url\"\n        defaultImage=\"assets/images/blur.jpg\"\n        alt=\"\"\n      />\n    </figure>\n    <div class=\"playlist-item--content\">\n      <h3>{{ artist.name }}</h3>\n      <label class=\"followers\">\n        <strong>followers : </strong>\n        <span>{{ withComma(artist.followers.total) }}</span>\n      </label>\n      <label class=\"popularity\">\n        <strong>popularity : </strong> <span>{{ artist.popularity }}%</span>\n      </label>\n      <div class=\"floater\">\n        <fa-icon [icon]=\"faEye\"></fa-icon>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { MyPlaylistItemModel } from '../../store/my-playlist/model';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { Router } from '@angular/router';\n\nimport { Store } from '@ngxs/store';\nimport { StateReset } from 'ngxs-reset-plugin';\nimport { PlaylistPreviewState } from '../../store/playlist-preview/state';\n\n@Component({\n  selector: 'app-playlist-item',\n  templateUrl: './playlist-item.component.html',\n  styleUrls: ['./playlist-item.component.scss'],\n})\nexport class PlaylistItemComponent implements OnInit {\n  faEye = faEye;\n  @Input() playlists: MyPlaylistItemModel[];\n  constructor(private route: Router, private store: Store) {}\n\n  ngOnInit(): void {\n    console.log('store', this.store.snapshot());\n  }\n\n  playlistPreview(artist: MyPlaylistItemModel) {\n    // localStorage.removeItem('selected-my-playlist');\n    // localStorage.setItem(\n    //   'selected-my-playlist',\n    //   JSON.stringify({\n    //     artistId: artist.id,\n    //     owner: artist.owner,\n    //   })\n    // );\n    this.store.dispatch(new StateReset(PlaylistPreviewState));\n    this.route.navigate(['my-playlist', artist.id]);\n  }\n}\n","<div class=\"playlist-collection\">\n  <div\n    class=\"playlist-item\"\n    (click)=\"playlistPreview(playlist)\"\n    *ngFor=\"let playlist of playlists\"\n  >\n    <figure class=\"image\">\n      <img\n        defaultImage=\"assets/images/blur.jpg\"\n        [lazyLoad]=\"\n          playlist.images.length > 0\n            ? playlist.images[0].url\n            : 'assets/images/spotify.png'\n        \"\n        alt=\"\"\n      />\n    </figure>\n    <div class=\"playlist-item--content\">\n      <h3>{{ playlist.name }}</h3>\n      <label class=\"followers\">\n        <strong>\n          <span *ngIf=\"playlist.tracks.total as $total\">\n            {{ $total < 10 ? \"0\" + $total : $total }}\n          </span>\n          TRACKS\n        </strong>\n      </label>\n      <div class=\"floater\">\n        <fa-icon [icon]=\"faEye\"></fa-icon>\n      </div>\n    </div>\n  </div>\n</div>\n","<ng-container>\n  <div class=\"playlist-tracks\" *ngIf=\"tracks && config && !default\">\n    <div\n      class=\"playlist-tracks--item\"\n      *ngFor=\"let item of tracks.items | paginate: config\"\n    >\n      <figure class=\"image\">\n        <a [href]=\"item.track.external_urls.spotify\" target=\"_blank\">\n          <fa-icon [icon]=\"faPlay\"></fa-icon>\n        </a>\n        <img\n          *ngIf=\"item.track.album.images as images$\"\n          [lazyLoad]=\"images$[images$.length - 1].url\"\n          alt=\"\"\n        />\n      </figure>\n      <div class=\"track-item--content\">\n        <a\n          *ngIf=\"isMyPlaylist\"\n          (click)=\"removeTrackItem(item)\"\n          class=\"delete-btn\"\n        >\n          <fa-icon [icon]=\"faTimes\"></fa-icon> remove\n        </a>\n        <h4 (click)=\"trackPreview(item.track)\">{{ item.track.name }}</h4>\n        <p>\n          <span *ngFor=\"let artist of item.track.artists; let isLast = last\">\n            {{ artist.name }}{{ isLast ? \"\" : \", \" }}\n          </span>\n          - <span>{{ item.track.album.name }}</span>\n        </p>\n      </div>\n    </div>\n  </div>\n  <div class=\"playlist-tracks\" *ngIf=\"tracks && default\">\n    <div class=\"playlist-tracks--item\" *ngFor=\"let track of tracks\">\n      <figure class=\"image\">\n        <a [href]=\"track.external_urls.spotify\" target=\"_blank\">\n          <fa-icon [icon]=\"faPlay\"></fa-icon>\n        </a>\n        <img\n          *ngIf=\"track.album.images as images$\"\n          [lazyLoad]=\"images$[images$.length - 1].url\"\n          alt=\"\"\n        />\n      </figure>\n      <div class=\"track-item--content\">\n        <h4 (click)=\"trackPreview(track)\">{{ track.name }}</h4>\n        <p>\n          <span *ngFor=\"let artist of track.artists; let isLast = last\">\n            {{ artist.name }}{{ isLast ? \"\" : \", \" }}\n          </span>\n          - <span>{{ track.album.name }}</span>\n        </p>\n      </div>\n    </div>\n  </div>\n</ng-container>\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { Dispatch } from '@ngxs-labs/dispatch-decorator';\nimport { Router } from '@angular/router';\nimport {\n  PlaylistPreviewTracksModel,\n  PlaylistPreviewInnerItemModel,\n} from '../../store/playlist-preview/model';\nimport { faPlay, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { SwalFire, Toast } from '../../services/index';\nimport { MyPlaylistService } from '../../services/my-playlist/my-playlist.service';\nimport { SubSink } from 'subsink';\nimport { Store } from '@ngxs/store';\nimport { StateReset } from 'ngxs-reset-plugin';\nimport { PlaylistPreviewState } from '../../store/playlist-preview/state';\nimport { PlaylistPreviewActionsType } from '../../store/playlist-preview/actions.type';\n\n@Component({\n  selector: 'app-playlist-track',\n  templateUrl: './playlist-track.component.html',\n  styleUrls: ['./playlist-track.component.scss'],\n})\nexport class PlaylistTrackComponent implements OnInit, OnDestroy {\n  @Input() tracks: PlaylistPreviewTracksModel;\n  @Input() config: any;\n  @Input() default: boolean = false;\n  @Input() isMyPlaylist: boolean;\n  @Input() playlistId: string;\n\n  faPlay = faPlay;\n  faTimes = faTimes;\n\n  toast = Toast();\n  swalFire = SwalFire;\n  req$ = new SubSink();\n\n  @Dispatch() playlistPreview = (playlistId: string) =>\n    new PlaylistPreviewActionsType.FetchPlaylistPreview(playlistId);\n\n  constructor(\n    private route: Router,\n    private http: MyPlaylistService,\n    private store: Store\n  ) {}\n\n  ngOnInit(): void {}\n\n  pageChanged(event) {\n    this.config.currentPage = event;\n  }\n\n  trackPreview(track) {\n    localStorage.removeItem('selected-audio-feature');\n    localStorage.setItem(\n      'selected-audio-feature',\n      JSON.stringify({\n        image: track.album.images[0].url,\n        name: track.name,\n        artists: track.artists,\n        description: track.album.name,\n        popularity: track.popularity,\n        id: track.id,\n        external_urls: track.external_urls,\n      })\n    );\n\n    this.route.navigate(['audio-feature', track.id]);\n  }\n\n  removeTrackItem(item: PlaylistPreviewInnerItemModel) {\n    const img = item.track.album.images;\n    const options = {\n      title: item.track.name,\n      text: 'Are you sure to remove this item from this playlist',\n      imageUrl: img.length > 0 ? img[0].url : 'assets/images/spotify.png',\n      confirmButtonText: 'Remove Track',\n    };\n\n    this.swalFire((result) => {\n      if (result.value) {\n        this.req$.sink = this.http\n          .removePlaylistItem(this.playlistId, {\n            tracks: [{ uri: item.track.uri }],\n          })\n          .subscribe(\n            (res) => {\n              this.toast.fire({\n                icon: 'success',\n                title: 'Item has been remove from this playlist',\n              });\n              this.store.dispatch(new StateReset(PlaylistPreviewState));\n              this.playlistPreview(this.playlistId);\n            },\n            (err) => {\n              this.toast.fire({\n                icon: 'error',\n                title: 'Failed request remove item ',\n              });\n              console.log(err);\n            }\n          );\n      }\n    }, options);\n  }\n\n  ngOnDestroy() {\n    this.req$.unsubscribe();\n  }\n}\n","<ng-container>\n  <a\n    *ngIf=\"\n      (recommendation && !isRecomCreated) ||\n      (isRecomCreated.playlistId !== playlist.id && !isRecomExist)\n    \"\n    (click)=\"showCreateForm(currentUser, recommendation)\"\n    class=\"spotify-btn recommendation-btn\"\n    >SAVE TO SPOTIFY</a\n  >\n  <div *ngIf=\"isRecomCreated as isRec\">\n    <a\n      *ngIf=\"isRec && isRecomExist\"\n      (click)=\"openPlaylist()\"\n      class=\"spotify-btn recommendation-btn is-open\"\n      >OPEN PLAYLIST\n    </a>\n  </div>\n\n  <div *ngIf=\"playlist\" [class]=\"(isModalActive ? 'is-active' : '') + ' modal'\">\n    <div class=\"modal-background\" (click)=\"isModalActive = false\"></div>\n    <div class=\"modal-content\">\n      <div [formGroup]=\"recomForm\" class=\"modal-container\">\n        <h3>Create a playlist from recommendation</h3>\n        <div class=\"field\">\n          <label for=\"name\">\n            Playlist <span class=\"required\">(required)</span>\n          </label>\n          <div class=\"control\">\n            <input\n              *ngIf=\"playlist\"\n              class=\"input is-small name-input\"\n              type=\"text\"\n              id=\"name\"\n              formControlName=\"name\"\n              autocomplete=\"off\"\n            />\n          </div>\n          <div class=\"errors\" *ngIf=\"isSubmited && FC.name.errors\">\n            <div *ngFor=\"let log of inputErrors.name\">\n              <span\n                *ngIf=\"FC.name.hasError(log.error)\"\n                class=\"tag is-danger is-light\"\n              >\n                {{ log.label }}\n              </span>\n            </div>\n          </div>\n        </div>\n        <div class=\"field\">\n          <label for=\"desc\">\n            Description <span class=\"optional\">(optional)</span>\n          </label>\n          <textarea\n            *ngIf=\"playlist\"\n            id=\"desc\"\n            class=\"textarea is-small desc-input\"\n            formControlName=\"description\"\n            rows=\"2\"\n          ></textarea>\n          <div class=\"errors\" *ngIf=\"isSubmited && FC.description.errors\">\n            <div *ngFor=\"let log of inputErrors.description\">\n              <span\n                *ngIf=\"FC.description.hasError(log.error)\"\n                class=\"tag is-danger is-light\"\n              >\n                {{ log.label }}\n              </span>\n            </div>\n          </div>\n        </div>\n        <div class=\"buttom-inputs\">\n          <div class=\"control dis-inl\">\n            <label class=\"radio\">\n              <input\n                type=\"radio\"\n                name=\"public\"\n                formControlName=\"public\"\n                [value]=\"true\"\n              />\n              Public\n            </label>\n            <label class=\"radio\">\n              <input\n                type=\"radio\"\n                name=\"public\"\n                formControlName=\"public\"\n                [value]=\"false\"\n              />\n              Private\n            </label>\n          </div>\n          <div class=\"buttons\">\n            <a\n              *ngIf=\"currentUser\"\n              (click)=\"saveToSpotify(currentUser.id)\"\n              class=\"spotify-btn\"\n            >\n              save to spotify\n            </a>\n            <a\n              (click)=\"isModalActive = false; isSubmited = false\"\n              class=\"spotify-btn cancel-btn\"\n              >cancel\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n    <button\n      class=\"modal-close is-large\"\n      aria-label=\"close\"\n      (click)=\"isModalActive = false\"\n    ></button>\n  </div>\n</ng-container>\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Dispatch } from '@ngxs-labs/dispatch-decorator';\nimport { StateReset } from 'ngxs-reset-plugin';\nimport { Store } from '@ngxs/store';\nimport { Router } from '@angular/router';\nimport { Select } from '@ngxs/store';\nimport { Observable } from 'rxjs';\n\nimport { errors } from './utils';\nimport { SubSink } from 'subsink';\nimport { Toast } from '../../services/index';\n\nimport { PlaylistPreviewModel } from '../../store/playlist-preview/model';\nimport { RecommendationModel } from '../../store/recommendation/model';\nimport { CurrentUserModel } from '../../store/current-user/model';\n\nimport { MyPlaylistService } from '../../services/my-playlist/my-playlist.service';\nimport { MyPlaylistActionsType } from '../../store/my-playlist/actions.type';\nimport { MyPlaylistSelectors } from '../../store/my-playlist/selectors';\nimport { MyPlaylistState } from '../../store/my-playlist/state';\nimport { SpotifyModel } from '../../store/index';\n\n@Component({\n  selector: 'app-recommendation-form',\n  templateUrl: './recommendation-form.component.html',\n  styleUrls: ['./recommendation-form.component.scss'],\n})\nexport class RecommendationFormComponent implements OnInit, OnDestroy {\n  recomForm: FormGroup;\n  inputErrors: any = errors;\n  isSubmited: boolean;\n  isModalActive: boolean;\n  uris: string;\n\n  req$ = new SubSink();\n  reqPlaylist$ = new SubSink();\n  toast = Toast();\n  isRecomCreated: any = JSON.parse(localStorage.getItem('recommendation'));\n  isRecomExist: boolean;\n\n  @Input() playlist: PlaylistPreviewModel;\n  @Input() currentUser: CurrentUserModel;\n  @Input() recommendation: RecommendationModel;\n\n  @Dispatch() fetchMyPlaylist = (qry = null) =>\n    new MyPlaylistActionsType.FetchPlaylist(qry);\n\n  @Select(MyPlaylistSelectors.fetchPlaylist) playlist$: Observable<\n    SpotifyModel\n  >;\n\n  constructor(\n    private FB: FormBuilder,\n    private http: MyPlaylistService,\n    private store: Store,\n    private route: Router\n  ) {}\n\n  get FC() {\n    return this.recomForm.controls;\n  }\n\n  ngOnInit(): void {\n    this.recomForm = this.FB.group({\n      name: [\n        `Recommended Tracks Based On  ${this.playlist.name}`,\n        [Validators.required, Validators.minLength(3)],\n      ],\n      description: ['', [Validators.minLength(25)]],\n      public: [true],\n    });\n\n    this.reqPlaylist$.sink = this.playlist$.subscribe((play) => {\n      if (play && this.isRecomCreated) {\n        const collect = play.items.filter(\n          (item) => item.id === this.isRecomCreated.playlistId\n        );\n        if (collect.length > 0) {\n          this.isRecomExist = true;\n        }\n      }\n    });\n  }\n\n  showCreateForm(user: CurrentUserModel, recom: RecommendationModel) {\n    if (user && recom) {\n      this.uris = recom.tracks.map((track) => track.uri).toString();\n      this.isModalActive = true;\n    }\n  }\n\n  saveToSpotify(userId) {\n    this.isSubmited = true;\n    if (!this.recomForm.valid) return;\n\n    const form = this.recomForm.value;\n    const formObj =\n      form.description !== '' ? form : { name: form.name, public: form.public };\n\n    this.req$.sink = this.http.createPlaylist(userId, formObj).subscribe(\n      (res) => {\n        this.pushCollection(res);\n        this.setLocalStorage();\n      },\n      (err) => {\n        this.toast.fire({\n          icon: 'error',\n          title: 'Failed request save recommendation',\n        });\n        console.log(err);\n      }\n    );\n  }\n\n  setLocalStorage() {\n    localStorage.removeItem('recommendation');\n    this.store.dispatch(new StateReset(MyPlaylistState));\n    this.isModalActive = false;\n    this.isSubmited = false;\n\n    localStorage.setItem(\n      'recommendation',\n      JSON.stringify({ playlistId: this.playlist.id, isSubmitted: true })\n    );\n\n    setTimeout(() => {\n      this.isRecomExist = true;\n      this.isRecomCreated = JSON.parse(localStorage.getItem('recommendation'));\n    }, 1000);\n  }\n\n  pushCollection(res: PlaylistPreviewModel) {\n    const recomString = this.recommendation.tracks\n      .map((track) => track.uri)\n      .toString();\n\n    if (res) {\n      this.http.pushTracksToPlaylist(res.id, recomString).subscribe(\n        (res) => {\n          this.fetchMyPlaylist({ limit: 50 });\n          this.toast.fire({\n            icon: 'success',\n            title: 'Playlist has been save to collections',\n          });\n        },\n        (err) => {\n          this.toast.fire({\n            icon: 'error',\n            title: 'Failed push request recommendation items',\n          });\n          console.log(err);\n        }\n      );\n    }\n  }\n\n  openPlaylist() {\n    this.route.navigate(['my-playlist']);\n  }\n\n  ngOnDestroy() {\n    this.req$.unsubscribe();\n    this.reqPlaylist$.unsubscribe();\n  }\n}\n","const errors = {\n  name: [\n    { error: 'required', label: 'this field is required' },\n    { error: 'minlength', label: 'min length must 3 characters' },\n  ],\n  description: [{ error: 'minlength', label: 'min length must 25 characters' }],\n};\n\nexport { errors };\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.scss']\n})\nexport class SpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"spinner-container\">\n  <div class=\"spotify-loader animation-6\">\n    <div class=\"shape shape1\"></div>\n    <div class=\"shape shape2\"></div>\n    <div class=\"shape shape3\"></div>\n    <div class=\"shape shape4\"></div>\n  </div>\n</div>\n","<div\n  *ngIf=\"static$ | async as stat\"\n  [class]=\"stat.tokenExpire ? 'is-active modal' : 'modal'\"\n>\n  <div class=\"modal-background\"></div>\n  <div class=\"modal-content expire-notification\">\n    <div class=\"notification is-warning\">\n      <h2>\n        <strong> OOPS <fa-icon [icon]=\"faWarning\"></fa-icon></strong>\n      </h2>\n      <p>\n        looks like your API access token expired. click refresh button to\n        generate token\n      </p>\n\n      <br />\n      <a (click)=\"emitPageAction()\" class=\"button is-dark refresh-btn\"\n        >Refresh Token</a\n      >\n    </div>\n  </div>\n</div>\n","import {\n  Component,\n  OnInit,\n  EventEmitter,\n  Output,\n  OnDestroy,\n} from '@angular/core';\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\nimport { Dispatch } from '@ngxs-labs/dispatch-decorator';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { SubSink } from 'subsink';\n\nimport { CurrentUserActionsType } from '../../store/current-user/actions.type';\nimport { MyPlaylistActionsType } from '../../store/my-playlist/actions.type';\nimport { FollowActionsType } from '../../store/follow/actions.type';\n\nimport { InternalActionsType } from '../../store/internal/actions.type';\nimport { InternalSelectors } from '../../store/internal/selectors';\nimport { InternalModel } from '../../store/internal/model';\nimport { AuthService } from '../../auth/auth.service';\n\n@Component({\n  selector: 'app-token-expiration-modal',\n  templateUrl: './token-expiration-modal.component.html',\n  styleUrls: ['./token-expiration-modal.component.scss'],\n})\nexport class TokenExpirationModalComponent implements OnInit, OnDestroy {\n  reqAuth$ = new SubSink();\n  faWarning = faExclamationTriangle;\n\n  @Output() onRefreshToken = new EventEmitter();\n  @Select(InternalSelectors.fetchInternal) static$: Observable<InternalModel>;\n\n  @Dispatch() setInternal = (params) =>\n    new InternalActionsType.setInternal(params);\n\n  @Dispatch() fetchCurrentUser = () =>\n    new CurrentUserActionsType.FetchCurrentUser();\n\n  @Dispatch() fetchMyPlaylist = (qry) =>\n    new MyPlaylistActionsType.FetchPlaylist(qry);\n\n  @Dispatch() fetchFollowArtists = () =>\n    new FollowActionsType.FetchFollowArtists();\n\n  constructor(private auth: AuthService, private store: Store) {}\n\n  ngOnInit(): void {}\n\n  emitPageAction() {\n    const { current_user } = this.store.snapshot();\n\n    this.reqAuth$.sink = this.auth.refreshToken().subscribe((res) => {\n      localStorage.removeItem('access_token');\n      localStorage.setItem('access_token', res.access_token);\n\n      this.setInternal({ tokenExpire: false });\n      this.onRefreshToken.emit();\n\n      if (!current_user) {\n        this.fetchCurrentUser();\n        this.fetchFollowArtists();\n        this.fetchMyPlaylist({\n          limit: 50,\n        });\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.reqAuth$.unsubscribe();\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { faEllipsisV, faPlay } from '@fortawesome/free-solid-svg-icons';\n\nimport { TopTrackItemModel } from '../../store/top-tracks/model';\nimport { msToTime } from '../../services';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-track-item',\n  templateUrl: './track-item.component.html',\n  styleUrls: ['./track-item.component.scss'],\n})\nexport class TrackItemComponent implements OnInit {\n  faEllipsisV = faEllipsisV;\n  faPlay = faPlay;\n  msToTime = msToTime;\n\n  @Input() track: TopTrackItemModel;\n\n  constructor(private route: Router) {}\n\n  ngOnInit(): void {}\n\n  routeToAudioFeature(track) {\n    localStorage.removeItem('selected-audio-feature');\n    localStorage.setItem(\n      'selected-audio-feature',\n      JSON.stringify({\n        image: track.album.images[0].url,\n        name: track.name,\n        artists: track.artists,\n        description: track.album.name,\n        popularity: track.popularity,\n        id: track.id,\n        external_urls: track.external_urls,\n      })\n    );\n\n    this.route.navigate(['audio-feature', track.id]);\n  }\n}\n","<div class=\"track-item\">\n  <figure class=\"image\">\n    <img\n      defaultImage=\"assets/images/blur.jpg\"\n      [lazyLoad]=\"track.album.images[track.album.images.length - 1].url\"\n      alt=\"\"\n    />\n  </figure>\n  <div class=\"track-content\">\n    <a (click)=\"routeToAudioFeature(track)\">\n      <h3>{{ track.name }}</h3>\n    </a>\n    <label>\n      <span *ngFor=\"let artist of track.artists; let isLast = last\"\n        >{{ artist.name }}{{ isLast ? \"\" : \", \" }}\n      </span>\n    </label>\n  </div>\n  <div class=\"track-options\">\n    <div class=\"float-duration\">\n      {{ msToTime(track.duration_ms) }}\n    </div>\n    <div class=\"track-buttons\">\n      <a\n        [href]=\"track.external_urls.spotify\"\n        target=\"_blank\"\n        class=\"track-item--button\"\n      >\n        <fa-icon [icon]=\"faPlay\"></fa-icon>\n      </a>\n      <a (click)=\"routeToAudioFeature(track)\" class=\"track-item--button\">\n        <fa-icon [icon]=\"faEllipsisV\"></fa-icon>\n      </a>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError, finalize } from 'rxjs/operators';\nimport { AuthService } from '../auth/auth.service';\n// import { SubSink } from 'subsink';\nimport { interSect } from './utils';\n\nimport { Toast } from '../services';\n// import { Dispatch } from '@ngxs-labs/dispatch-decorator';\nimport { Store } from '@ngxs/store';\nimport { StateOverwrite } from 'ngxs-reset-plugin';\nimport { InternalState } from '../store/internal/state';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\n  toast = Toast();\n  // reqAuth$ = new SubSink();\n\n  constructor(\n    private auth: AuthService,\n    private store: Store,\n    private route: Router\n  ) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    // check if https://accounts.spotify.com/api/token request\n    const intersect = interSect(request.url, ['token']);\n    if (intersect.length > 0) {\n      return next.handle(request).pipe(\n        retry(1),\n        catchError((err) => {\n          this.route.navigate(['login']);\n          return throwError(err);\n        })\n      );\n    }\n\n    return next.handle(request).pipe(\n      // retry on failure\n      retry(1),\n      // Handle Error\n      catchError((err) => {\n        this.toast.fire({\n          icon: 'error',\n          title: 'Token Expire',\n          text: 'generate refresh token',\n        });\n\n        this.store.dispatch(\n          new StateOverwrite([InternalState, { tokenExpire: true }])\n        );\n        return throwError(err);\n      }),\n      finalize(() => {\n        // this.refreshToken();\n      })\n    );\n  }\n\n  // refreshToken() {\n  //   this.reqAuth$.sink = this.auth.refreshToken().subscribe((res) => {\n  //     localStorage.removeItem('access_token');\n  //     localStorage.setItem('access_token', res.access_token);\n  //   });\n  // }\n\n  // ngOnDestroy() {\n  //   this.reqAuth$.unsubscribe();\n  // }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { interSect } from './utils';\n\n@Injectable()\nexport class HttpHeadersInterceptor implements HttpInterceptor {\n  constructor() {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    // console.log('request', request);\n\n    const intersect = interSect(request.url, ['token']);\n    if (intersect.length > 0) return next.handle(request);\n\n    const customReq = request.clone({\n      setHeaders: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${localStorage.getItem('access_token')}`,\n      },\n    });\n    return next.handle(customReq);\n  }\n}\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ErrorHandlerInterceptor } from './error-handler.interceptor';\nimport { HttpHeadersInterceptor } from './http-headers.interceptor';\n\nexport const HttpInterceptorProviders = [\n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: ErrorHandlerInterceptor,\n    multi: true,\n  },\n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: HttpHeadersInterceptor,\n    multi: true,\n  },\n];\n","import { intersection } from 'lodash';\n\nexport const interSect = (reqUrl: string, splitUrl: Array<string>) => {\n  const urlstr = reqUrl.split('?')[0].split('/').filter(Boolean);\n  return intersection(urlstr, splitUrl);\n};\n","<ng-container>\n  <div class=\"head-body\">\n    <div class=\"content-title\">\n      <h2>ARTIST INFORMATION</h2>\n      <p>List Information Of Artist - follower, genres etc.</p>\n    </div>\n    <div class=\"content-feature\"></div>\n  </div>\n\n  <div class=\"content-body\">\n    <div class=\"artist-feature\">\n      <figure class=\"image\">\n        <img [src]=\"((artistPreview$ | async)?.images)[0].url\" alt=\"\" />\n      </figure>\n      <div class=\"artist-feature--info\">\n        <h2 class=\"title\">{{ (artistPreview$ | async)?.name }}</h2>\n        <div class=\"flex-item\">\n          <label><strong>Followers</strong></label>\n          <label *ngIf=\"artistPreview$ | async\">{{\n            withComma((artistPreview$ | async)?.followers.total)\n          }}</label>\n        </div>\n        <div class=\"flex-item\">\n          <label><strong>Popularity</strong></label>\n          <label>{{ (artistPreview$ | async)?.popularity }}%</label>\n        </div>\n        <div class=\"flex-item\">\n          <label\n            ><strong>Genres</strong>\n            <app-follow-btn\n              *ngIf=\"(artistPreview$ | async) && (followArtist$ | async)\"\n              [artist]=\"artistPreview$ | async\"\n              [following]=\"(followArtist$ | async)?.artists.items\"\n            ></app-follow-btn>\n          </label>\n          <label>\n            <span\n              *ngFor=\"\n                let genre of (artistPreview$ | async)?.genres;\n                let isLast = last\n              \"\n              class=\"gen\"\n            >\n              {{ genre }} </span\n            >&nbsp;\n          </label>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"divider\">\n      <h2>Top Tracks</h2>\n    </div>\n    <br />\n    <div class=\"topTracks-container\">\n      <!-- <app-track-item\n        [track]=\"item\"\n        *ngFor=\"let item of (topTracks$ | async)?.tracks\"\n        class=\"app-track-item\"\n      ></app-track-item> -->\n      <app-playlist-track\n        *ngIf=\"topTracks$\"\n        [tracks]=\"(topTracks$ | async)?.tracks\"\n        [default]=\"true\"\n      >\n      </app-playlist-track>\n    </div>\n\n    <div class=\"divider\">\n      <h2>Related Artists</h2>\n    </div>\n    <br />\n    <div class=\"related-artists\">\n      <div\n        class=\"related-artists--item\"\n        *ngFor=\"let artist of (relatedArtists$ | async)?.artists\"\n      >\n        <figure class=\"image\">\n          <img [src]=\"artist.images[0].url\" alt=\"\" />\n        </figure>\n        <div class=\"related-artist--content\">\n          <div class=\"content\">\n            <h4 (click)=\"previewArtistCallback(artist.id)\">\n              {{ artist.name }}\n            </h4>\n            <p>\n              Popularity : <span>{{ artist.popularity }}%</span>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <app-token-expiration-modal\n    (onRefreshToken)=\"ngOnInit()\"\n  ></app-token-expiration-modal>\n\n  <app-spinner *ngIf=\"!(relatedArtists$ | async)\"></app-spinner>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\n\nimport { Select } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { Dispatch } from '@ngxs-labs/dispatch-decorator';\n\nimport { RelatedArtistActionsType } from '../../store/related-artists/actions.type';\nimport { RelatedArtistsSelectors } from '../../store/related-artists/selectors';\n// import { TopArtistsModel } from '../../store/top-artists/model';\nimport { RelatedArtistsModel } from '../../store/related-artists/model';\n\nimport { ArtistPreviewActionsType } from '../../store/artist-preview/actions.type';\nimport { ArtistPreviewSelectors } from '../../store/artist-preview/selectors';\nimport { ArtistPreviewModel } from '../../store/artist-preview/model';\n\nimport { ArtistTopTracksActionsType } from '../../store/artist-top-tracks/actions.type';\nimport { ArtistTopTracksSelectors } from '../../store/artist-top-tracks/selectors';\nimport { ArtistTopTracksModel } from '../../store/artist-top-tracks/model';\n\nimport { FollowSelectors } from '../../store/follow/selectors';\nimport { FollowArtistModel } from '../../store/follow/artists-model';\n\nimport { Router, ActivatedRoute } from '@angular/router';\n// import { FollowService } from '../../services/follow/follow.service';\n\n@Component({\n  selector: 'app-artist-preview',\n  templateUrl: './artist-preview.component.html',\n  styleUrls: ['./artist-preview.component.scss'],\n})\nexport class ArtistPreviewComponent implements OnInit {\n  constructor(private route: Router, private activeRoute: ActivatedRoute) {\n    this.route.routeReuseStrategy.shouldReuseRoute = () => false;\n  }\n\n  @Dispatch() fetchArtistPreview = (artistId: string) =>\n    new ArtistPreviewActionsType.FetchArtistPreview(artistId);\n\n  @Dispatch() fetchRelatedArtists = (artistId: string) =>\n    new RelatedArtistActionsType.FetchRelatedArtist(artistId);\n\n  @Dispatch() fetchArtistTopTracks = (artistId: string) =>\n    new ArtistTopTracksActionsType.FetchArtistTopTracks(artistId);\n\n  @Select(ArtistPreviewSelectors.fetchArtistPreview)\n  artistPreview$: Observable<ArtistPreviewModel>;\n\n  @Select(RelatedArtistsSelectors.fetchTopArtists)\n  relatedArtists$: Observable<RelatedArtistsModel>;\n\n  @Select(ArtistTopTracksSelectors.fetchTopTracks)\n  topTracks$: Observable<ArtistTopTracksModel>;\n\n  @Select(FollowSelectors.fetchFollowArtists)\n  followArtist$: Observable<FollowArtistModel>;\n\n  ngOnInit(): void {\n    const artistId = this.activeRoute.snapshot.paramMap.get('artistId');\n    this.fetchArtistPreview(artistId);\n    this.fetchRelatedArtists(artistId);\n    this.fetchArtistTopTracks(artistId);\n  }\n\n  withComma(n) {\n    return n.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  previewArtistCallback(artistId) {\n    this.route.navigate(['artist', artistId]);\n    console.log(artistId);\n  }\n}\n","<ng-container>\n  <div class=\"head-body\">\n    <div class=\"content-title\">\n      <h2>Audio Feature</h2>\n      <p>Get Audio Features for Several Tracks</p>\n    </div>\n    <div class=\"content-feature\"></div>\n  </div>\n  <br /><br />\n  <div class=\"content-body\">\n    <div class=\"audio-feature\">\n      <!-- <figure class=\"image\"> -->\n      <!-- <img\n        [lazyLoad]=\"(track$ | async)?.image\"\n        defaultImage=\"assets/images/blur.jpg\"\n        alt=\"\"\n      /> -->\n      <app-figure-image\n        [image]=\"{ url: (track$ | async)?.image }\"\n      ></app-figure-image>\n      <!-- </figure> -->\n      <div class=\"audio-feature--info\">\n        <h2 class=\"title\">{{ (track$ | async)?.name }}</h2>\n        <p class=\"artists\">\n          <span\n            *ngFor=\"let artist of (track$ | async)?.artists; let isLast = last\"\n          >\n            {{ artist.name }}{{ isLast ? \"\" : \", \" }}\n          </span>\n        </p>\n        <p class=\"desc\">{{ (track$ | async)?.description }}</p>\n        <a\n          [href]=\"(track$ | async)?.external_urls.spotify\"\n          target=\"_blank\"\n          class=\"spotify-btn\"\n          >PLAY ON SPOTIFY</a\n        >\n      </div>\n    </div>\n    <div class=\"key-feature\">\n      <div class=\"key-feature--item\">\n        <div class=\"key-feature--floater\">\n          <label class=\"key\">{{\n            msToTime((track$ | async)?.feature.duration_ms)\n          }}</label>\n          <label class=\"desc\">Duration</label>\n        </div>\n      </div>\n      <div class=\"key-feature--item\">\n        <div class=\"key-feature--floater\">\n          <label class=\"key key-note\">{{\n            pitchClass((track$ | async)?.feature.key)\n          }}</label>\n          <label class=\"desc\">Key</label>\n        </div>\n      </div>\n      <div class=\"key-feature--item\">\n        <div class=\"key-feature--floater\">\n          <label class=\"key\">{{\n            findModality((track$ | async)?.feature.mode)\n          }}</label>\n          <label class=\"desc\">Modality</label>\n        </div>\n      </div>\n      <div class=\"key-feature--item\">\n        <div class=\"key-feature--floater\">\n          <label class=\"key\">{{\n            (track$ | async)?.feature.time_signature\n          }}</label>\n          <label class=\"desc\">Time Signature</label>\n        </div>\n      </div>\n      <div class=\"key-feature--item\">\n        <div class=\"key-feature--floater\">\n          <label class=\"key\">{{\n            (track$ | async)?.feature.tempo.toFixed()\n          }}</label>\n          <label class=\"desc\">Tempo(BPM)</label>\n        </div>\n      </div>\n      <div class=\"key-feature--item\">\n        <div class=\"key-feature--floater\">\n          <label class=\"key\">{{ (track$ | async)?.popularity }}%</label>\n          <label class=\"desc\">Popularity</label>\n        </div>\n      </div>\n      <div class=\"key-feature--item\">\n        <div class=\"key-feature--floater\">\n          <label class=\"key\">{{ findBars((track$ | async)?.feature) }}</label>\n          <label class=\"desc\">Bars</label>\n        </div>\n      </div>\n      <div class=\"key-feature--item\">\n        <div class=\"key-feature--floater\">\n          <label class=\"key\" *ngIf=\"track$\">{{\n            findBeats((track$ | async)?.feature)\n          }}</label>\n          <label class=\"desc\">Beats</label>\n        </div>\n      </div>\n      <div class=\"key-feature--item\">\n        <div class=\"key-feature--floater\">\n          <label class=\"key\">--</label>\n          <label class=\"desc\">Sections</label>\n        </div>\n      </div>\n      <div class=\"key-feature--item\">\n        <div class=\"key-feature--floater\">\n          <label class=\"key\">--</label>\n          <label class=\"desc\">Segments</label>\n        </div>\n      </div>\n    </div>\n  </div>\n  <app-token-expiration-modal\n    (onRefreshToken)=\"ngOnInit()\"\n  ></app-token-expiration-modal>\n\n  <app-spinner *ngIf=\"!(track$ | async)\"></app-spinner>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Select } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { Dispatch } from '@ngxs-labs/dispatch-decorator';\n\nimport { AudioFeatureActionsType } from '../../store/audio-feature/actions.type';\nimport { AudioFeatureSelectors } from '../../store/audio-feature/selectors';\nimport {\n  AudioFeatureModel,\n  SelectedTrackModel,\n} from '../../store/audio-feature/model';\n\nimport { msToTime } from '../../services';\n\n@Component({\n  selector: 'app-audio-feature',\n  templateUrl: './audio-feature.component.html',\n  styleUrls: ['./audio-feature.component.scss'],\n})\nexport class AudioFeatureComponent implements OnInit {\n  msToTime = msToTime;\n\n  @Dispatch() fetchAudioFeature = (track: SelectedTrackModel) =>\n    new AudioFeatureActionsType.FetchAudioFeature(track);\n\n  @Select(AudioFeatureSelectors.fetchAudioFeature) track$: Observable<\n    AudioFeatureModel\n  >;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    const track = JSON.parse(localStorage.getItem('selected-audio-feature'));\n    this.fetchAudioFeature(track);\n\n    // this.track$.subscribe((res: AudioFeatureModel) => {\n    //   console.log('res', res.image);\n    // });\n  }\n\n  pitchClass(key: any) {\n    switch (key) {\n      case 1:\n        return 'C♯, D♭ (also B♯)';\n      case 2:\n        return 'D (also C𝄪, E♭♭)';\n      case 3:\n        return 'D♯, E♭ (also F♭♭)';\n      case 4:\n        return 'E (also D𝄪, F♭)';\n      case 5:\n        return 'F (also E♯, G♭♭)';\n      case 6:\n        return 'F♯, G♭ (also E𝄪)';\n      case 7:\n        return 'G (also F𝄪, A♭♭)';\n      case 8:\n        return 'G♯, A♭';\n      case 9:\n        return 'A (also G𝄪, B♭♭)';\n      case 10 || 't' || 'A':\n        return 'A♯, B♭ (also C♭♭)';\n      case 11 || 'e' || 'B':\n        return 'B (also A𝄪, C♭)';\n      default:\n        return 'C (also B♯, D♭♭)';\n    }\n  }\n\n  findModality(mode) {\n    return mode === 1 ? 'Major' : 'minor';\n  }\n\n  findBeats(f) {\n    if (f) {\n      let min = parseFloat((f.duration_ms / 1000 / 60).toFixed(1));\n      let temp = parseInt(f.tempo.toFixed());\n      return Math.floor(min * temp);\n    }\n  }\n\n  findBars(f) {\n    return Math.floor(this.findBeats(f) / f?.time_signature);\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { SubSink } from 'subsink';\n\n@Component({\n  selector: 'app-callback',\n  templateUrl: './callback.component.html',\n  styleUrls: ['./callback.component.scss'],\n})\nexport class CallbackComponent implements OnInit, OnDestroy {\n  request$ = new SubSink();\n\n  constructor(\n    public auth: AuthService,\n    public activeRoute: ActivatedRoute,\n    public router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.auth.setCallbackTimes();\n\n    const storeState = localStorage.getItem('state');\n    this.activeRoute.queryParams.pipe().subscribe((res) => {\n      if (res.state === null || res.state !== storeState) {\n        console.log('state_mismatch');\n        this.router.navigate(['login']);\n      } else {\n        localStorage.removeItem('state');\n        this.request$.sink = this.auth.generateToken(res.code).subscribe(\n          (res) => {\n            localStorage.setItem('access_token', res.access_token);\n            localStorage.setItem('refresh_token', res.refresh_token);\n            localStorage.setItem('scope', res.scope);\n            localStorage.setItem('expires_in', res.expires_in);\n            localStorage.setItem('token_type', res.token_type);\n            if (this.auth.isAuthenticated()) {\n              // this.router.navigate(['/']);\n              this.initializerStates();\n            }\n          },\n          (err) => {\n            console.log('generateToken-error', err);\n          }\n        );\n      }\n    });\n  }\n\n  initializerStates() {\n    const times = localStorage.getItem('callback_times');\n    if (times !== null && parseInt(times) > 3) {\n      localStorage.removeItem('access_token');\n      this.router.navigate(['/login']);\n    }\n\n    this.router.navigate(['/']);\n  }\n\n  ngOnDestroy(): void {\n    this.request$.unsubscribe();\n  }\n}\n","<div class=\"login-container\">\n  <div class=\"center-login\">\n    <h2>Authenticating Please Wait...</h2>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../auth/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  constructor(private auth: AuthService) {}\n\n  ngOnInit(): void {}\n\n  authUser() {\n    this.auth.authenticateUser();\n  }\n}\n","<div class=\"login-container\">\n  <div class=\"center-login\">\n    <h2>Authenticate Spotify Account</h2>\n    <button (click)=\"authUser()\" class=\"spotify-btn\">Authenticate User</button>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// import { MainComponent } from './main.component';\n// import { IndexComponent } from '../index/index.component';\nimport { TopTracksComponent } from '../top-tracks/top-tracks.component';\nimport { AudioFeatureComponent } from '../audio-feature/audio-feature.component';\nimport { TopArtistsComponent } from '../top-artists/top-artists.component';\nimport { ArtistPreviewComponent } from '../artist-preview/artist-preview.component';\nimport { MyPlaylistComponent } from '../my-playlist/my-playlist.component';\nimport { PlaylistPreviewComponent } from '../playlist-preview/playlist-preview.component';\nimport { RecommendationComponent } from '../recommendation/recommendation.component';\n\nconst routes: Routes = [\n  // { path: '', component: TopTracksComponent },\n  { path: '', component: MyPlaylistComponent },\n  { path: 'my-playlist/:playlistId', component: PlaylistPreviewComponent },\n  { path: 'top-tracks', component: TopTracksComponent },\n  { path: 'audio-feature/:trackId', component: AudioFeatureComponent },\n  { path: 'top-artists', component: TopArtistsComponent },\n  { path: 'artist/:artistId', component: ArtistPreviewComponent },\n  {\n    path: 'my-playlist/:playlistId/recommendation',\n    component: RecommendationComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MainRoutingModule {}\n","<div class=\"main-container\">\n  <div class=\"aside-content\">\n    <div class=\"fixed-container\">\n      <div class=\"profile-section\">\n        <figure class=\"image\">\n          <img\n            *ngIf=\"(user$ | async)?.images as img\"\n            defaultImage=\"assets/images/blur.jpg\"\n            [lazyLoad]=\"img[0].url\"\n            alt=\"\"\n            class=\"is-rounded\"\n          />\n          <img\n            *ngIf=\"!(user$ | async)\"\n            lazyLoad=\"assets/images/spotify-240.png\"\n            alt=\"\"\n          />\n        </figure>\n        <div class=\"profile-label\">\n          <h2>{{ (user$ | async)?.display_name }}</h2>\n        </div>\n        <div class=\"profile-numbers\">\n          <div class=\"item-count\">\n            <span>Followers</span>\n            <span\n              class=\"count\"\n              *ngIf=\"(user$ | async)?.followers.total as folTotal\"\n              >{{ folTotal < 10 ? \"0\" + folTotal : folTotal }}</span\n            >\n            <span *ngIf=\"!(user$ | async)\">00</span>\n          </div>\n          <div class=\"item-count\">\n            <span>Following</span>\n            <span\n              class=\"count\"\n              *ngIf=\"(artists$ | async)?.artists.total as artTotal\"\n              >{{ artTotal < 0 ? \"0\" + artTotal : artTotal }}</span\n            ><span *ngIf=\"!(artists$ | async)\">00</span>\n          </div>\n          <div class=\"item-count\">\n            <span>Playlist</span>\n            <span\n              class=\"count\"\n              *ngIf=\"(playlist$ | async)?.total as playTotal\"\n              >{{ playTotal < 10 ? \"0\" + playTotal : playTotal }}</span\n            ><span *ngIf=\"!(playlist$ | async)\">00</span>\n          </div>\n        </div>\n      </div>\n      <div class=\"nav-section\">\n        <div\n          [routerLink]=\"['/']\"\n          [routerLinkActiveOptions]=\"{ exact: true }\"\n          routerLinkActive=\"is-active\"\n          class=\"list-item\"\n        >\n          <fa-icon [icon]=\"faPlay\"></fa-icon>\n          <span>MY PLAYLIST</span>\n        </div>\n        <div\n          [routerLink]=\"['/top-tracks']\"\n          routerLinkActive=\"is-active\"\n          [routerLinkActiveOptions]=\"{ exact: true }\"\n          class=\"list-item\"\n        >\n          <fa-icon [icon]=\"faMusic\"></fa-icon>\n          <span>TOP TRACKS</span>\n        </div>\n        <div\n          [routerLink]=\"['/top-artists']\"\n          [routerLinkActiveOptions]=\"{ exact: true }\"\n          routerLinkActive=\"is-active\"\n          class=\"list-item\"\n        >\n          <fa-icon [icon]=\"faMicrophoneAlt\"></fa-icon>\n          <span>TOP ARTIST</span>\n        </div>\n      </div>\n      <app-built-with></app-built-with>\n    </div>\n  </div>\n  <div class=\"body-content\">\n    <div class=\"floater-body--content\"></div>\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\n\nimport { Select } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { Dispatch } from '@ngxs-labs/dispatch-decorator';\nimport {\n  faMicrophoneAlt,\n  faMusic,\n  faPlay,\n} from '@fortawesome/free-solid-svg-icons';\nimport { SubSink } from 'subsink';\n\nimport { CurrentUserActionsType } from '../../store/current-user/actions.type';\nimport { CurrentUserSelectors } from '../../store/current-user/selectors';\nimport { CurrentUserModel } from '../../store/current-user/model';\n\nimport { MyPlaylistActionsType } from '../../store/my-playlist/actions.type';\nimport { MyPlaylistSelectors } from '../../store/my-playlist/selectors';\nimport { SpotifyModel } from '../../store/index';\n\nimport { FollowActionsType } from '../../store/follow/actions.type';\nimport { FollowSelectors } from '../../store/follow/selectors';\nimport { FollowArtistModel } from '../../store/follow/artists-model';\n\nimport { InternalActionsType } from '../../store/internal/actions.type';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss'],\n})\nexport class MainComponent implements OnInit, OnDestroy {\n  faMicrophoneAlt = faMicrophoneAlt;\n  faMusic = faMusic;\n  faPlay = faPlay;\n\n  userReq$ = new SubSink();\n\n  @Dispatch() fetchCurrentUser = () =>\n    new CurrentUserActionsType.FetchCurrentUser();\n\n  @Dispatch() fetchMyPlaylist = (qry) =>\n    new MyPlaylistActionsType.FetchPlaylist(qry);\n\n  @Dispatch() fetchFollowArtists = () =>\n    new FollowActionsType.FetchFollowArtists();\n\n  @Dispatch() setInternal = (params) =>\n    new InternalActionsType.setInternal(params);\n\n  @Select(CurrentUserSelectors.fetchCurrentUser) user$: Observable<\n    CurrentUserModel\n  >;\n\n  @Select(MyPlaylistSelectors.fetchPlaylist) playlist$: Observable<\n    SpotifyModel\n  >;\n\n  @Select(FollowSelectors.fetchFollowArtists) artists$: Observable<\n    FollowArtistModel\n  >;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    localStorage.removeItem('callback_times');\n    this.fetchCurrentUser();\n\n    this.userReq$.sink = this.user$.subscribe((res) => {\n      if (res) {\n        this.setInternal({ tokenExpire: false });\n        this.fetchFollowArtists();\n        this.fetchMyPlaylist({\n          limit: 50,\n        });\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.userReq$.unsubscribe();\n  }\n}\n","import {\n  NgModule,\n  NO_ERRORS_SCHEMA,\n  CUSTOM_ELEMENTS_SCHEMA,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { MainRoutingModule } from './main-routing.module';\nimport { SharedModule } from '../../shared.module';\n\nimport { TopTracksComponent } from '../top-tracks/top-tracks.component';\nimport { AudioFeatureComponent } from '../audio-feature/audio-feature.component';\nimport { TopArtistsComponent } from '../top-artists/top-artists.component';\nimport { ArtistPreviewComponent } from '../artist-preview/artist-preview.component';\nimport { MyPlaylistComponent } from '../my-playlist/my-playlist.component';\nimport { PlaylistPreviewComponent } from '../playlist-preview/playlist-preview.component';\nimport { RecommendationComponent } from '../recommendation/recommendation.component';\n\n// import { LazyLoadImageModule } from 'ng-lazyload-image';\n\n@NgModule({\n  declarations: [\n    TopTracksComponent,\n    AudioFeatureComponent,\n    TopArtistsComponent,\n    ArtistPreviewComponent,\n    MyPlaylistComponent,\n    PlaylistPreviewComponent,\n    RecommendationComponent,\n  ],\n  imports: [CommonModule, RouterModule, MainRoutingModule, SharedModule],\n  schemas: [NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class MainModule {}\n","<ng-container>\n  <div class=\"head-body\">\n    <div class=\"content-title\">\n      <h2>MY PLAYLIST</h2>\n      <p>List of Active Playlists</p>\n    </div>\n    <div class=\"content-feature\"></div>\n  </div>\n\n  <div class=\"content-body\">\n    <app-playlist-item\n      [playlists]=\"(playlist$ | async)?.items\"\n    ></app-playlist-item>\n  </div>\n\n  <app-token-expiration-modal\n    (onRefreshToken)=\"ngOnInit()\"\n  ></app-token-expiration-modal>\n\n  <app-spinner *ngIf=\"!(playlist$ | async)\"></app-spinner>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\n\nimport { Select } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { Dispatch } from '@ngxs-labs/dispatch-decorator';\n\nimport { MyPlaylistActionsType } from '../../store/my-playlist/actions.type';\nimport { MyPlaylistSelectors } from '../../store/my-playlist/selectors';\nimport { SpotifyModel } from '../../store/';\n\n@Component({\n  selector: 'app-my-playlist',\n  templateUrl: './my-playlist.component.html',\n  styleUrls: ['./my-playlist.component.scss'],\n})\nexport class MyPlaylistComponent implements OnInit {\n  @Dispatch() fetchMyPlaylist = (qry = null) =>\n    new MyPlaylistActionsType.FetchPlaylist(qry);\n\n  @Select(MyPlaylistSelectors.fetchPlaylist) playlist$: Observable<\n    SpotifyModel\n  >;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.fetchMyPlaylist({\n      limit: 50,\n    });\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Dispatch } from '@ngxs-labs/dispatch-decorator';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { StateReset } from 'ngxs-reset-plugin';\n\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { SubSink } from 'subsink';\n\nimport { PlaylistPreviewActionsType } from '../../store/playlist-preview/actions.type';\nimport { PlaylistPreviewSelectors } from '../../store/playlist-preview/selectors';\nimport { PlaylistPreviewModel } from '../../store/playlist-preview/model';\n// import { TopTrackItemModel } from '../../store/top-tracks/model';\nimport { MyPlaylistSelectors } from '../../store/my-playlist/selectors';\nimport { SpotifyModel } from '../../store';\n\nimport { CurrentUserSelectors } from '../../store/current-user/selectors';\nimport { CurrentUserModel } from '../../store/current-user/model';\n\nimport { RecommendationState } from '../../store/recommendation/state';\n\n@Component({\n  selector: 'app-playlist-preview',\n  templateUrl: './playlist-preview.component.html',\n  styleUrls: ['./playlist-preview.component.scss'],\n})\nexport class PlaylistPreviewComponent implements OnInit, OnDestroy {\n  @Dispatch() playlistPreview = (playlistId: string) =>\n    new PlaylistPreviewActionsType.FetchPlaylistPreview(playlistId);\n\n  @Select(PlaylistPreviewSelectors.fetchPlaylistPreview)\n  playlist$: Observable<PlaylistPreviewModel>;\n\n  @Select(MyPlaylistSelectors.fetchPlaylist)\n  myPlaylist$: Observable<SpotifyModel>;\n\n  @Select(CurrentUserSelectors.fetchCurrentUser)\n  currentUser$: Observable<CurrentUserModel>;\n\n  req$ = new SubSink();\n  config: any;\n  isEditBtn = false;\n\n  constructor(\n    private activeRoute: ActivatedRoute,\n    private route: Router,\n    private store: Store\n  ) {}\n\n  ngOnInit(): void {\n    const playlistId = this.activeRoute.snapshot.params.playlistId;\n    this.playlistPreview(playlistId);\n\n    this.req$.sink = this.playlist$.subscribe(\n      (playlist: PlaylistPreviewModel) => {\n        if (playlist) {\n          this.config = {\n            itemsPerPage: 20,\n            currentPage: 1,\n            totalItems: playlist.tracks.items.length,\n          };\n        }\n      }\n    );\n\n    this.store.dispatch(new StateReset(RecommendationState));\n  }\n\n  pageChanged(event) {\n    this.config.currentPage = event;\n  }\n\n  closeEditButton(e) {\n    this.isEditBtn = false;\n  }\n\n  getRecommendation(playlistId) {\n    localStorage.removeItem('recommendation');\n    this.route.navigate(['my-playlist', playlistId, 'recommendation']);\n  }\n\n  ngOnDestroy() {\n    this.req$.unsubscribe();\n  }\n}\n","<ng-container>\n  <div class=\"head-body\">\n    <div class=\"content-title\">\n      <h2>PLAYLIST INFORMATION</h2>\n      <p>Playlist Information - tracks, feature etc.</p>\n    </div>\n    <div class=\"content-feature\"></div>\n  </div>\n  <br />\n  <div class=\"content-body\">\n    <div class=\"track-preview--header\" *ngIf=\"playlist$ | async as play\">\n      <figure class=\"image\">\n        <img\n          [lazyLoad]=\"\n            play.images.length > 0\n              ? play.images[0].url\n              : 'assets/images/spotify.png'\n          \"\n          alt=\"\"\n        />\n        <div\n          class=\"edit-button--wrapper\"\n          *ngIf=\"(playlist$ | async).owner.id === (currentUser$ | async).id\"\n        >\n          <app-edit-playlist-btn\n            *ngIf=\"playlist$ | async\"\n            [playlist]=\"playlist$ | async\"\n          ></app-edit-playlist-btn>\n        </div>\n      </figure>\n      <div class=\"preview-header--content\">\n        <app-follow-btn-playlist\n          *ngIf=\"\n            (playlist$ | async) &&\n            (myPlaylist$ | async) &&\n            (currentUser$ | async)\n          \"\n          [playlist]=\"playlist$ | async\"\n          [playlistCollection]=\"(myPlaylist$ | async)?.items\"\n          [currentUser]=\"currentUser$ | async\"\n          [isMyPlaylist]=\"\n            (playlist$ | async).owner.id === (currentUser$ | async)?.id\n              ? true\n              : false\n          \"\n        ></app-follow-btn-playlist>\n        <h3>{{ (playlist$ | async).name }}</h3>\n        <p [innerHTML]=\"(playlist$ | async).description\"></p>\n        <a\n          *ngIf=\"(playlist$ | async).id as playlistId\"\n          (click)=\"getRecommendation(playlistId)\"\n          class=\"spotify-btn\"\n          >get recommendation\n        </a>\n      </div>\n    </div>\n    <div class=\"divider\">\n      <h2 *ngIf=\"playlist$ | async\">\n        {{ (playlist$ | async).tracks.items.length }} Tracks\n      </h2>\n    </div>\n    <br />\n    <!-- <div class=\"playlist-tracks\" *ngIf=\"isGood && config && preview\">\n      <div\n        class=\"playlist-tracks--item\"\n        *ngFor=\"let item of preview.tracks.items | paginate: config\"\n      >\n        <figure class=\"image\">\n          <img\n            *ngIf=\"item.track.album.images as images$\"\n            [src]=\"images$[images$.length - 1].url\"\n            alt=\"\"\n          />\n        </figure>\n        <div class=\"track-item--content\">\n          <h4>{{ item.track.name }}</h4>\n          <p>\n            <span *ngFor=\"let artist of item.track.artists; let isLast = last\">\n              {{ artist.name }}{{ isLast ? \"\" : \", \" }}\n            </span>\n            - <span>{{ item.track.album.name }}</span>\n          </p>\n        </div>\n      </div>\n    </div> -->\n    <app-playlist-track\n      *ngIf=\"playlist$ | async as play\"\n      [tracks]=\"play.tracks\"\n      [config]=\"config\"\n      [isMyPlaylist]=\"\n        play.owner.id === (currentUser$ | async)?.id ? true : false\n      \"\n      [playlistId]=\"play.id\"\n    >\n    </app-playlist-track>\n\n    <pagination-controls\n      *ngIf=\"config && config.totalItems > 20 ? true : false\"\n      [maxSize]=\"5\"\n      class=\"custom-pagination\"\n      (pageChange)=\"pageChanged($event)\"\n    ></pagination-controls>\n  </div>\n\n  <app-token-expiration-modal\n    (onRefreshToken)=\"ngOnInit()\"\n  ></app-token-expiration-modal>\n\n  <app-spinner *ngIf=\"!(playlist$ | async)\"></app-spinner>\n</ng-container>\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Dispatch } from '@ngxs-labs/dispatch-decorator';\nimport { Select } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { SubSink } from 'subsink';\nimport { Toast } from '../../services/index';\n\n// import { MyPlaylistService } from '../../services/my-playlist/my-playlist.service';\n\nimport { PlaylistPreviewActionsType } from '../../store/playlist-preview/actions.type';\nimport { PlaylistPreviewSelectors } from '../../store/playlist-preview/selectors';\nimport { PlaylistPreviewModel } from '../../store/playlist-preview/model';\n\nimport { RecommendationActionsType } from '../../store/recommendation/actions.type';\nimport { RecommendationSelectors } from '../../store/recommendation/selectors';\nimport { RecommendationModel } from '../../store/recommendation/model';\nimport { QueryParams } from '../../store/index';\n\nimport { CurrentUserSelectors } from '../../store/current-user/selectors';\nimport { CurrentUserModel } from '../../store/current-user/model';\n\n@Component({\n  selector: 'app-recommendation',\n  templateUrl: './recommendation.component.html',\n  styleUrls: ['./recommendation.component.scss'],\n})\nexport class RecommendationComponent implements OnInit, OnDestroy {\n  @Dispatch() playlistPreview = (playlistId: string) =>\n    new PlaylistPreviewActionsType.FetchPlaylistPreview(playlistId);\n\n  @Dispatch() recommendation = (params: QueryParams) =>\n    new RecommendationActionsType.FetchRecommendation(params);\n\n  @Select(PlaylistPreviewSelectors.fetchPlaylistPreview)\n  playlist$: Observable<PlaylistPreviewModel>;\n\n  @Select(RecommendationSelectors.fetchRecommendation)\n  recommendation$: Observable<RecommendationModel>;\n\n  @Select(CurrentUserSelectors.fetchCurrentUser)\n  currentUser$: Observable<CurrentUserModel>;\n\n  req$ = new SubSink();\n  toast = Toast();\n  playlist: PlaylistPreviewModel;\n\n  constructor(\n    private activeRoute: ActivatedRoute // private http: MyPlaylistService\n  ) {}\n  ngOnInit(): void {\n    const playlistId = this.activeRoute.snapshot.params.playlistId;\n    this.playlistPreview(playlistId);\n\n    this.req$.sink = this.playlist$.subscribe(\n      (res) => {\n        if (res) {\n          this.playlist = res;\n          const trackIds = res.tracks.items.slice(0, 5).map((i) => i.track.id);\n\n          this.getRecommendation(trackIds);\n        }\n      },\n      (error) => {\n        console.log('playlist is null');\n        this.toast.fire({ icon: 'error', title: 'Playlist Preview is null' });\n      }\n    );\n  }\n\n  getRecommendation(trackIds: Array<string>) {\n    this.recommendation({\n      limit: 20,\n      seed_tracks: trackIds.toString(),\n    });\n  }\n\n  ngOnDestroy() {\n    this.req$.unsubscribe();\n  }\n}\n","<ng-container>\n  <div class=\"head-body\">\n    <div class=\"content-title\">\n      <!-- <div *ngIf=\"currentUser$ | async as user\">\n        <a\n          *ngIf=\"recommendation$ | async as recom\"\n          (click)=\"showCreateForm(user, recom)\"\n          class=\"spotify-btn recommendation-btn\"\n          >SAVE TO SPOTIFY</a\n        >\n      </div> -->\n      <app-recommendation-form\n        *ngIf=\"playlist && (recommendation$ | async) && (currentUser$ | async)\"\n        [playlist]=\"playlist\"\n        [currentUser]=\"currentUser$ | async\"\n        [recommendation]=\"recommendation$ | async\"\n      >\n      </app-recommendation-form>\n      <h2>TRACKS RECOMMENDATION</h2>\n      <p *ngIf=\"playlist$ | async\">\n        Recommended Tracks Based On {{ (playlist$ | async).name }}\n      </p>\n    </div>\n    <div class=\"content-feature\"></div>\n  </div>\n  <br />\n  <div class=\"content-body\">\n    <div class=\"recommendation-body\">\n      <app-playlist-track\n        *ngIf=\"recommendation$ | async\"\n        [tracks]=\"(recommendation$ | async).tracks\"\n        [default]=\"true\"\n      >\n      </app-playlist-track>\n    </div>\n  </div>\n\n  <app-token-expiration-modal\n    (onRefreshToken)=\"ngOnInit()\"\n  ></app-token-expiration-modal>\n\n  <app-spinner *ngIf=\"!(recommendation$ | async)\"></app-spinner>\n</ng-container>\n","export const tabs = [\n  { label: 'All Time', timeRange: 'long_term', status: 'is-active' },\n  { label: 'Last 6 Months', timeRange: 'medium_term', status: '' },\n  { label: 'Last 4 Weeks', timeRange: 'short_term', status: '' },\n];\n","<ng-container>\n  <div class=\"head-body\">\n    <div class=\"content-title\">\n      <h2>TOP ARTIST</h2>\n      <p>Collection Of Your Top Artists</p>\n    </div>\n    <div class=\"content-feature\"></div>\n  </div>\n\n  <div class=\"content-body artist-content--body\">\n    <div class=\"tabs is-right\">\n      <ul>\n        <li *ngFor=\"let range of $tabs\" [class]=\"range.status\">\n          <a (click)=\"timeRange(range.timeRange)\">{{ range.label }}</a>\n        </li>\n      </ul>\n    </div>\n    <app-grid-playlist\n      [artists]=\"(topArtists$ | async)?.items\"\n    ></app-grid-playlist>\n  </div>\n  <app-token-expiration-modal\n    (onRefreshToken)=\"ngOnInit()\"\n  ></app-token-expiration-modal>\n\n  <app-spinner *ngIf=\"!(topArtists$ | async)\"></app-spinner>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\n\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { Dispatch } from '@ngxs-labs/dispatch-decorator';\n\nimport { TopArtistsActionsType } from '../../store/top-artists/actions.type';\nimport { TopArtistsSelectors } from '../../store/top-artists/selectors';\nimport { SpotifyModel } from '../../store/';\nimport { tabs } from './top-artists-util';\n\n@Component({\n  selector: 'app-top-artists',\n  templateUrl: './top-artists.component.html',\n  styleUrls: ['./top-artists.component.scss'],\n})\nexport class TopArtistsComponent implements OnInit {\n  constructor(private store: Store) {}\n\n  $tabs = tabs;\n  @Dispatch() fetchTopArtists = (qry = null) =>\n    new TopArtistsActionsType.FetchTopArtists(qry);\n\n  @Select(TopArtistsSelectors.fetchTopArtists) topArtists$: Observable<\n    SpotifyModel\n  >;\n\n  ngOnInit(): void {\n    const { top_artists } = this.store.snapshot();\n    if (top_artists === null) {\n      const local = JSON.parse(localStorage.getItem('top-artists'));\n      if (!local || local.time_range === 'undefined') {\n        this.fetchTopArtists({ limit: 20, time_range: 'long_term' });\n        this.setActiveTab('long_term');\n      } else {\n        this.fetchTopArtists({ limit: 20, time_range: local.time_range });\n        this.setActiveTab(local.time_range);\n      }\n    }\n  }\n\n  timeRange(time_range) {\n    this.fetchTopArtists({ limit: 20, time_range });\n    this.setActiveTab(time_range);\n  }\n\n  setActiveTab(time_range: string) {\n    this.$tabs.map((tab) => {\n      tab.status = tab.timeRange === time_range ? 'is-active' : '';\n      return tab;\n    });\n  }\n}\n","export const tabs = [\n  { label: 'All Time', timeRange: 'long_term', status: 'is-active' },\n  { label: 'Last 6 Months', timeRange: 'medium_term', status: '' },\n  { label: 'Last 4 Weeks', timeRange: 'short_term', status: '' },\n];\n","<ng-container>\n  <div class=\"head-body\">\n    <div class=\"content-title\">\n      <h2>TOP TRACKS</h2>\n      <p>Collection Of Your Most Played Tracks</p>\n    </div>\n    <div class=\"content-feature\"></div>\n  </div>\n\n  <div class=\"content-body\">\n    <div class=\"tabs is-right\">\n      <ul>\n        <li *ngFor=\"let range of $tabs\" [class]=\"range.status\">\n          <a (click)=\"timeRange(range.timeRange)\">{{ range.label }}</a>\n        </li>\n      </ul>\n    </div>\n    <app-track-item\n      [track]=\"item\"\n      *ngFor=\"let item of (topTracks$ | async)?.items\"\n      class=\"app-track-item\"\n    >\n    </app-track-item>\n\n    <app-token-expiration-modal\n      (onRefreshToken)=\"ngOnInit()\"\n    ></app-token-expiration-modal>\n  </div>\n\n  <app-spinner *ngIf=\"!(topTracks$ | async)\"></app-spinner>\n</ng-container>\n","import { Component, OnInit, Query } from '@angular/core';\n\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { Dispatch } from '@ngxs-labs/dispatch-decorator';\n\nimport { TopTracksActionsType } from '../../store/top-tracks/actions.type';\nimport { TopTracksSelectors } from '../../store/top-tracks/selectors';\n\nimport { SpotifyModel } from '../../store/';\nimport { tabs } from './top-tracks-util';\n\n@Component({\n  selector: 'app-top-tracks',\n  templateUrl: './top-tracks.component.html',\n  styleUrls: ['./top-tracks.component.scss'],\n})\nexport class TopTracksComponent implements OnInit {\n  $tabs = tabs;\n\n  constructor(private store: Store) {}\n\n  @Dispatch() fetchTopTracks = (qry = null) =>\n    new TopTracksActionsType.FetchTopTracks(qry);\n\n  @Select(TopTracksSelectors.fetchTopTracks) topTracks$: Observable<\n    SpotifyModel\n  >;\n\n  ngOnInit(): void {\n    const { top_tracks } = this.store.snapshot();\n\n    if (top_tracks === null) {\n      const local = JSON.parse(localStorage.getItem('top-tracks'));\n      if (!local || local.time_range === 'undefined') {\n        this.fetchTopTracks({ limit: 20, time_range: 'long_term' });\n        this.setActiveTab('long_term');\n      } else {\n        this.fetchTopTracks({ limit: 20, time_range: local.time_range });\n        this.setActiveTab(local.time_range);\n      }\n    }\n  }\n\n  timeRange(time_range) {\n    this.fetchTopTracks({ limit: 20, time_range });\n    this.setActiveTab(time_range);\n  }\n\n  setActiveTab(time_range: string) {\n    this.$tabs.map((tab) => {\n      tab.status = tab.timeRange === time_range ? 'is-active' : '';\n      return tab;\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { environment } from 'src/environments/environment';\nimport { httpOptions } from '../index';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ArtistPreviewService {\n  constructor(private http: HttpClient) {}\n\n  fetchArtistPreview(artistId: string) {\n    return this.http.get<any[]>(\n      `${environment.spotify_api}artists/${artistId}`\n      // { ...httpOptions }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { environment } from 'src/environments/environment';\nimport { httpOptions } from '../index';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ArtistTopTracksService {\n  constructor(private http: HttpClient) {}\n\n  fetchTopTracks(artistId: string) {\n    const country = localStorage.getItem('country');\n    return this.http.get<any[]>(\n      `${environment.spotify_api}artists/${artistId}/top-tracks?country=${country}`\n      // { ...httpOptions }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { environment } from 'src/environments/environment';\nimport { httpOptions } from '../index';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AudioFeatureService {\n  constructor(private http: HttpClient) {}\n\n  fetchAudioFeature(trackId: string) {\n    return this.http.get<any>(\n      `${environment.spotify_api}audio-features/${trackId}`\n      // { ...httpOptions }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { environment } from 'src/environments/environment';\nimport { httpOptions, setQueryParams } from '../index';\nimport { QueryParams } from '../../store';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FollowService {\n  constructor(private http: HttpClient) {}\n\n  fetchFollowArtists(queryParams: QueryParams = null) {\n    const $queryString = setQueryParams(queryParams);\n\n    return this.http.get<any[]>(\n      `${environment.spotify_api}me/following?type=artist&${$queryString}`\n      // { ...httpOptions }\n    );\n  }\n\n  fetchFollowTracks(queryParams: QueryParams = null) {\n    const $queryString = setQueryParams(queryParams);\n\n    return this.http.get<any[]>(\n      `${environment.spotify_api}me/following?type=tracks&${$queryString}`\n      // { ...httpOptions }\n    );\n  }\n\n  followArtist(artistId: string) {\n    return this.http.put<any>(\n      `${environment.spotify_api}me/following?type=artist&ids=${artistId}`,\n      {}\n      // { ...httpOptions }\n    );\n  }\n\n  unFollowArtist(artistId: string) {\n    return this.http.delete<any>(\n      `${environment.spotify_api}me/following?type=artist&ids=${artistId}`\n      // { ...httpOptions }\n    );\n  }\n  // default\n  followPlaylist(playlistId: string) {\n    return this.http.put<any>(\n      `${environment.spotify_api}playlists/${playlistId}/followers`,\n      {}\n      // { ...httpOptions }\n    );\n  }\n\n  unFollowPlaylist(playlistId: string) {\n    return this.http.delete<any>(\n      `${environment.spotify_api}playlists/${playlistId}/followers`\n      // { ...httpOptions }\n    );\n  }\n\n  // active user\n  unFollowUserPlaylist(userId: string, playlistId: string) {\n    return this.http.delete<any>(\n      `${environment.spotify_api}users/${userId}/playlists/${playlistId}/followers`\n      // { ...httpOptions }\n    );\n  }\n\n  followUserPlaylist(\n    userId: string,\n    playlistId: string,\n    isPublic: boolean = false\n  ) {\n    return this.http.put<any>(\n      `${environment.spotify_api}users/${userId}/playlists/${playlistId}/followers`,\n      { publid: isPublic }\n      // { ...httpOptions }\n    );\n  }\n}\n","import { QueryParams } from '../store';\nimport Swal from 'sweetalert2';\n\nexport const httpOptions = {\n  headers: {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${localStorage.getItem('access_token')}`,\n  },\n};\n\nexport const setQueryParams = (queryParams: QueryParams = null) => {\n  const $query = [];\n  if (queryParams !== null) {\n    for (const [key, value] of Object.entries(queryParams)) {\n      $query.push(`${key}=${value}`.replace(/,/g, '__'));\n    }\n\n    // if (queryParams.limit) $query.push(`limit=${queryParams.limit}`);\n    // if (queryParams.offset) $query.push(`offset=${queryParams.offset}`);\n    // if (queryParams.time_range)\n    // $query.push(`time_range=${queryParams.time_range}`);\n  }\n\n  return $query.toString().replace(/,/g, '&').replace(/__/g, ',');\n};\n\nexport const msToTime = (s) => {\n  let ms = s % 1000;\n  s = (s - ms) / 1000;\n  let secs = s % 60;\n  s = (s - secs) / 60;\n  let mins = s % 60;\n  let hrs = (s - mins) / 60;\n\n  // return hrs + ':' + mins + ':' + secs + '.' + ms;\n  return (mins < 10 ? '0' + mins : mins) + ':' + secs;\n};\n\nexport const Toast = () =>\n  Swal.mixin({\n    toast: true,\n    position: 'top-end',\n    showConfirmButton: false,\n    timer: 3000,\n    timerProgressBar: true,\n    onOpen: (toast) => {\n      toast.addEventListener('mouseenter', Swal.stopTimer);\n      toast.addEventListener('mouseleave', Swal.resumeTimer);\n    },\n  });\n\nexport const SwalFire = (callback, options) => {\n  Swal.fire({\n    ...options,\n    imageWidth: 200,\n    imageHeight: 200,\n    confirmButtonColor: '#1db954',\n    cancelButtonColor: '#222a2e',\n    showCancelButton: true,\n  }).then(callback);\n};\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport Axios from 'axios-observable';\n\nimport { environment } from 'src/environments/environment';\nimport { httpOptions, setQueryParams } from '../index';\nimport { QueryParams } from '../../store';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MyPlaylistService {\n  axios = Axios;\n\n  constructor(private http: HttpClient) {}\n\n  fetchPlaylist(queryParams: QueryParams = null) {\n    const $queryString = setQueryParams(queryParams);\n\n    return this.http.get<any>(\n      `${environment.spotify_api}me/playlists?${$queryString}`\n      // { ...httpOptions }\n    );\n  }\n\n  fetchPreviewPlaylist(playlistId: string) {\n    return this.http.get<any>(\n      `${environment.spotify_api}playlists/${playlistId}`\n      // { ...httpOptions }\n    );\n  }\n\n  editPlaylistDetails(playlistId: string, reqBody: any) {\n    return this.http.put<any>(\n      `${environment.spotify_api}playlists/${playlistId}`,\n      reqBody\n      // { ...httpOptions }\n    );\n  }\n\n  getRecommendation(queryParams: QueryParams) {\n    const $queryString = setQueryParams(queryParams);\n\n    return this.http.get<any>(\n      `${environment.spotify_api}recommendations?${$queryString}`\n      // { ...httpOptions }\n    );\n  }\n\n  createPlaylist(userId: string, params: any) {\n    return this.http.post<any>(\n      `${environment.spotify_api}users/${userId}/playlists`,\n      params\n      // { ...httpOptions }\n    );\n  }\n\n  pushTracksToPlaylist(playlistId: string, uris: string) {\n    return this.http.post<any>(\n      `${environment.spotify_api}playlists/${playlistId}/tracks?uris=${uris}`,\n      {}\n      // { ...httpOptions }\n    );\n  }\n\n  removePlaylistItem(playlistId: string, tracks: any) {\n    return this.axios.delete(\n      `${environment.spotify_api}playlists/${playlistId}/tracks`,\n      {\n        ...httpOptions,\n        data: tracks,\n      }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { environment } from 'src/environments/environment';\nimport { httpOptions } from '../index';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RelatedArtistsService {\n  constructor(private http: HttpClient) {}\n\n  fetchRelatedArtists(artistId: string) {\n    return this.http.get<any[]>(\n      `${environment.spotify_api}artists/${artistId}/related-artists`\n      // { ...httpOptions }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { environment } from 'src/environments/environment';\nimport { httpOptions, setQueryParams } from '../index';\nimport { QueryParams } from '../../store';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TopArtistsService {\n  constructor(private http: HttpClient) {}\n\n  fetchTopArtists(queryParams: QueryParams = null) {\n    const $queryString = setQueryParams(queryParams);\n\n    return this.http.get<any[]>(\n      `${environment.spotify_api}me/top/artists?${$queryString}`\n      // { ...httpOptions }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { environment } from 'src/environments/environment';\nimport { httpOptions, setQueryParams } from '../index';\nimport { QueryParams } from '../../store';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TopTracksService {\n  constructor(private http: HttpClient) {}\n\n  fetchTopTracks(queryParams: QueryParams = null) {\n    const $queryString = setQueryParams(queryParams);\n\n    return this.http.get<any[]>(\n      `${environment.spotify_api}me/top/tracks?${$queryString}`\n      // { ...httpOptions }\n    );\n  }\n}\n","import {\n  NgModule,\n  NO_ERRORS_SCHEMA,\n  CUSTOM_ELEMENTS_SCHEMA,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { LazyLoadImageModule } from 'ng-lazyload-image';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpInterceptorProviders } from './interceptors/index';\n\nimport { LoginComponent } from './pages/login/login.component';\nimport { CallbackComponent } from './pages/callback/callback.component';\nimport { MainComponent } from './pages/main/main.component';\n\nimport { TrackItemComponent } from './components/track-item/track-item.component';\nimport { GridPlaylistComponent } from './components/grid-playlist/grid-playlist.component';\nimport { PlaylistItemComponent } from './components/playlist-item/playlist-item.component';\nimport { FigureImageComponent } from './components/figure-image/figure-image.component';\nimport { FollowBtnComponent } from './components/follow-btn/follow-btn.component';\nimport { PlaylistTrackComponent } from './components/playlist-track/playlist-track.component';\nimport { FollowBtnPlaylistComponent } from './components/follow-btn-playlist/follow-btn-playlist.component';\nimport { EditPlaylistBtnComponent } from './components/edit-playlist-btn/edit-playlist-btn.component';\nimport { RecommendationFormComponent } from './components/recommendation-form/recommendation-form.component';\nimport { TokenExpirationModalComponent } from './components/token-expiration-modal/token-expiration-modal.component';\nimport { SpinnerComponent } from './components/spinner/spinner.component';\nimport { BuiltWithComponent } from './components/built-with/built-with.component';\n\n@NgModule({\n  declarations: [\n    MainComponent,\n    // AudioFeatureComponent,\n    LoginComponent,\n    CallbackComponent,\n    TrackItemComponent,\n    GridPlaylistComponent,\n    PlaylistItemComponent,\n    FigureImageComponent,\n    FollowBtnComponent,\n    PlaylistTrackComponent,\n    FollowBtnPlaylistComponent,\n    EditPlaylistBtnComponent,\n    RecommendationFormComponent,\n    TokenExpirationModalComponent,\n    SpinnerComponent,\n    BuiltWithComponent,\n  ],\n  exports: [\n    TrackItemComponent,\n    GridPlaylistComponent,\n    PlaylistItemComponent,\n    FigureImageComponent,\n    FollowBtnComponent,\n    LazyLoadImageModule,\n    PlaylistTrackComponent,\n    FollowBtnPlaylistComponent,\n    EditPlaylistBtnComponent,\n    RecommendationFormComponent,\n    NgxPaginationModule,\n    TokenExpirationModalComponent,\n    SpinnerComponent,\n    BuiltWithComponent,\n  ],\n  imports: [\n    CommonModule,\n    FontAwesomeModule,\n    RouterModule,\n    LazyLoadImageModule,\n    NgxPaginationModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  providers: [HttpInterceptorProviders],\n  schemas: [NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class SharedModule {}\n","export namespace ArtistPreviewActionsType {\n  export class FetchArtistPreview {\n    static readonly type = '[artist-preview] fetch list';\n    constructor(public artistId: string) {}\n  }\n}\n","import { Selector } from '@ngxs/store';\nimport { ArtistPreviewModel } from './model';\nimport { ArtistPreviewState } from './state';\n\nexport class ArtistPreviewSelectors {\n  @Selector([ArtistPreviewState])\n  public static fetchArtistPreview(state: ArtistPreviewModel) {\n    return state;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { State, StateContext, Action } from '@ngxs/store';\n\nimport { throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { ArtistPreviewService } from '../../services/artist-preview/artist-preview.service';\nimport { ArtistPreviewActionsType } from './actions.type';\nimport { ArtistPreviewModel } from './model';\n\nimport { AuthService } from '../../auth/auth.service';\n\n@State<ArtistPreviewModel>({\n  name: 'artist_preview',\n  defaults: null,\n})\n@Injectable()\nexport class ArtistPreviewState {\n  constructor(\n    private service: ArtistPreviewService,\n    private auth: AuthService\n  ) {}\n\n  @Action(ArtistPreviewActionsType.FetchArtistPreview)\n  fetchArtistPreview(\n    { getState, patchState }: StateContext<ArtistPreviewModel>,\n    { artistId }: ArtistPreviewActionsType.FetchArtistPreview\n  ) {\n    return this.service.fetchArtistPreview(artistId).pipe(\n      map((result: any) => {\n        patchState(result);\n      }),\n      catchError((error: any) => {\n        console.log('top-tracks', error);\n        // this.auth.authenticateUser();\n        return throwError(error);\n      })\n    );\n  }\n}\n","export namespace ArtistTopTracksActionsType {\n  export class FetchArtistTopTracks {\n    static readonly type = '[artist-top-tracks] fetch tracks';\n    constructor(public artistId: string) {}\n  }\n}\n","import { Selector } from '@ngxs/store';\nimport { ArtistTopTracksModel } from './model';\nimport { ArtistTopTracksState } from './state';\n\nexport class ArtistTopTracksSelectors {\n  @Selector([ArtistTopTracksState])\n  public static fetchTopTracks(state: ArtistTopTracksModel) {\n    return state;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { State, StateContext, Action } from '@ngxs/store';\n\nimport { throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { ArtistTopTracksService } from '../../services/artist-top-tracks/artist-top-tracks.service';\nimport { ArtistTopTracksActionsType } from './actions.type';\nimport { ArtistTopTracksModel } from './model';\n\nimport { AuthService } from '../../auth/auth.service';\n\n@State<ArtistTopTracksModel>({\n  name: 'artist_top_tracks',\n  defaults: null,\n})\n@Injectable()\nexport class ArtistTopTracksState {\n  constructor(\n    private service: ArtistTopTracksService,\n    private auth: AuthService\n  ) {}\n\n  @Action(ArtistTopTracksActionsType.FetchArtistTopTracks)\n  fetchTopTracks(\n    { getState, patchState }: StateContext<ArtistTopTracksModel>,\n    { artistId }: ArtistTopTracksActionsType.FetchArtistTopTracks\n  ) {\n    return this.service.fetchTopTracks(artistId).pipe(\n      map((result: any) => {\n        patchState(result);\n      }),\n      catchError((error: any) => {\n        console.log('top-tracks', error);\n        // this.auth.authenticateUser();\n        return throwError(error);\n      })\n    );\n  }\n}\n","import { SelectedTrackModel } from './model';\n\nexport namespace AudioFeatureActionsType {\n  export class FetchAudioFeature {\n    static readonly type = '[audio-feature]';\n    constructor(public track: SelectedTrackModel) {}\n  }\n}\n","import { Selector } from '@ngxs/store';\nimport { AudioFeatureModel } from './model';\nimport { AudioFeatureState } from './state';\n\nexport class AudioFeatureSelectors {\n  @Selector([AudioFeatureState])\n  public static fetchAudioFeature(state: AudioFeatureModel) {\n    return state;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { State, StateContext, Action } from '@ngxs/store';\n\nimport { throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { AudioFeatureService } from '../../services/audio-feature/audio-feature.service';\nimport { AudioFeatureActionsType } from './actions.type';\nimport { AudioFeatureModel } from './model';\n\nimport { AuthService } from '../../auth/auth.service';\n\n@State<AudioFeatureModel>({\n  name: 'audio_feature',\n  defaults: null,\n})\n@Injectable()\nexport class AudioFeatureState {\n  constructor(\n    private service: AudioFeatureService,\n    private auth: AuthService\n  ) {}\n\n  @Action(AudioFeatureActionsType.FetchAudioFeature)\n  fetchAudioFeature(\n    { getState, patchState }: StateContext<AudioFeatureModel>,\n    { track }: AudioFeatureActionsType.FetchAudioFeature\n  ) {\n    return this.service.fetchAudioFeature(track.id).pipe(\n      map((result: any) => {\n        patchState({\n          ...track,\n          feature: result,\n        });\n      }),\n      catchError((error: any) => {\n        console.log('current-user', error);\n        // this.auth.authenticateUser();\n        return throwError(error);\n      })\n    );\n  }\n}\n","export namespace CurrentUserActionsType {\n  export class FetchCurrentUser {\n    static readonly type = \"[current-user] fetch current\";\n  }\n}\n","import { Selector } from \"@ngxs/store\";\nimport { CurrentUserModel } from \"./model\";\nimport { CurrentUserState } from \"./state\";\n\nexport class CurrentUserSelectors {\n  @Selector([CurrentUserState])\n  public static fetchCurrentUser(state: CurrentUserModel) {\n    return state;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { State, StateContext, Action } from '@ngxs/store';\n\nimport { throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { AuthService } from '../../auth/auth.service';\nimport { CurrentUserActionsType } from './actions.type';\nimport { CurrentUserModel } from './model';\n\n@State<CurrentUserModel>({\n  name: 'current_user',\n  defaults: null,\n})\n@Injectable()\nexport class CurrentUserState {\n  constructor(private auth: AuthService) {}\n\n  @Action(CurrentUserActionsType.FetchCurrentUser)\n  fetchCurrentUser({ getState, patchState }: StateContext<CurrentUserModel>) {\n    const state$ = getState();\n\n    if (state$ == null) {\n      return this.auth.fetchCurrentUser().pipe(\n        map((result: any) => {\n          localStorage.setItem('country', result.country);\n          patchState(result);\n        }),\n        catchError((error: any) => {\n          console.log('current-user', error);\n          // this.auth.authenticateUser();\n          return throwError(error);\n        })\n      );\n    }\n  }\n}\n","import { QueryParams } from '../index';\n\nexport namespace FollowActionsType {\n  export class FetchFollowArtists {\n    static readonly type = '[follow-artists] fetch collection';\n    constructor(public queryParams: QueryParams = null) {}\n  }\n\n  export class FetchFollowTracks {\n    static readonly type = '[follow-tracks] fetch collection';\n    constructor(public queryParams: QueryParams = null) {}\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { State, StateContext, Action } from '@ngxs/store';\n\nimport { throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { FollowService } from '../../services/follow/follow.service';\nimport { FollowActionsType } from './actions.type';\nimport { FollowArtistModel } from './artists-model';\n\nimport { AuthService } from '../../auth/auth.service';\n\n@State<FollowArtistModel>({\n  name: 'follow_artists',\n  defaults: null,\n})\n@Injectable()\nexport class FollowArtistsState {\n  constructor(private service: FollowService, private auth: AuthService) {}\n\n  @Action(FollowActionsType.FetchFollowArtists)\n  fetchFollowArtists(\n    { getState, patchState }: StateContext<FollowArtistModel>,\n    { queryParams }: FollowActionsType.FetchFollowArtists\n  ) {\n    const state$ = getState();\n\n    if (state$ == null) {\n      return this.service.fetchFollowArtists(queryParams).pipe(\n        map((result: any) => {\n          patchState(result);\n        }),\n        catchError((error: any) => {\n          console.log('top-tracks', error);\n          // this.auth.authenticateUser();\n          return throwError(error);\n        })\n      );\n    }\n  }\n}\n","import { Selector } from '@ngxs/store';\nimport { FollowArtistModel } from './artists-model';\nimport { FollowArtistsState } from './artists-state';\n\nexport class FollowSelectors {\n  @Selector([FollowArtistsState])\n  public static fetchFollowArtists(state: FollowArtistModel) {\n    return state;\n  }\n}\n","import { CurrentUserState } from './current-user/state';\nimport { TopTracksState } from './top-tracks/state';\nimport { AudioFeatureState } from './audio-feature/state';\nimport { TopArtistsState } from './top-artists/state';\nimport { RelatedArtistsState } from './related-artists/state';\nimport { ArtistPreviewState } from './artist-preview/state';\nimport { ArtistTopTracksState } from './artist-top-tracks/state';\nimport { MyPlaylistState } from './my-playlist/state';\nimport { FollowArtistsState } from './follow/artists-state';\nimport { PlaylistPreviewState } from './playlist-preview/state';\nimport { RecommendationState } from './recommendation/state';\nimport { InternalState } from './internal/state';\n\nexport const Store = [\n  CurrentUserState,\n  TopTracksState,\n  AudioFeatureState,\n  TopArtistsState,\n  RelatedArtistsState,\n  ArtistPreviewState,\n  ArtistTopTracksState,\n  MyPlaylistState,\n  FollowArtistsState,\n  PlaylistPreviewState,\n  RecommendationState,\n  InternalState,\n];\n\nexport interface SpotifyModel {\n  items: Array<any>;\n  total: number;\n  limit: number;\n  offset: number;\n  href: string;\n  previous: string;\n  next: string;\n}\n\nexport interface QueryParams {\n  time_range?: string;\n  limit?: number;\n  offset?: number;\n  market?: string;\n  seed_artists?: string;\n  seed_tracks?: string;\n  seed_genres?: string;\n}\n\nexport interface ImageModel {\n  height: number;\n  url: string;\n  width: number;\n}\n\nexport interface OwnerModel {\n  display_name?: string;\n  name?: string;\n  external_urls: {\n    spotify: string;\n  };\n  href: string;\n  id: string;\n  type: string;\n  uri: string;\n}\n","import { InternalModel } from './model';\n\nexport namespace InternalActionsType {\n  export class setInternal {\n    static readonly type = '[internal-action] set collection';\n    constructor(public params: InternalModel) {}\n  }\n}\n","import { Selector } from '@ngxs/store';\nimport { InternalState } from './state';\nimport { InternalModel } from './model';\n\nexport class InternalSelectors {\n  @Selector([InternalState])\n  public static fetchInternal(state: InternalModel) {\n    return state;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { State, StateContext, Action } from '@ngxs/store';\n\n// import { throwError } from 'rxjs';\n// import { map, catchError } from 'rxjs/operators';\n\nimport { InternalActionsType } from './actions.type';\nimport { InternalModel } from './model';\n\n// import { AuthService } from '../../auth/auth.service';\n\n@State<InternalModel>({\n  name: 'internal',\n  defaults: null,\n})\n@Injectable()\nexport class InternalState {\n  constructor() {}\n\n  @Action(InternalActionsType.setInternal)\n  setInternal(\n    { getState, patchState }: StateContext<InternalModel>,\n    { params }: InternalActionsType.setInternal\n  ) {\n    const state$ = getState();\n\n    patchState({ ...state$, ...params });\n  }\n}\n","import { QueryParams } from '../index';\n\nexport namespace MyPlaylistActionsType {\n  export class FetchPlaylist {\n    static readonly type = '[my-playlist] fetch collection';\n    constructor(public queryParams: QueryParams = null) {}\n  }\n}\n","import { Selector } from '@ngxs/store';\nimport { SpotifyModel } from '../index';\nimport { MyPlaylistState } from './state';\n\nexport class MyPlaylistSelectors {\n  @Selector([MyPlaylistState])\n  public static fetchPlaylist(state: SpotifyModel) {\n    return state;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { State, StateContext, Action } from '@ngxs/store';\n\nimport { throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { MyPlaylistService } from '../../services/my-playlist/my-playlist.service';\nimport { MyPlaylistActionsType } from './actions.type';\nimport { SpotifyModel } from '../index';\n\nimport { AuthService } from '../../auth/auth.service';\n\n@State<SpotifyModel>({\n  name: 'my_playlist',\n  defaults: null,\n})\n@Injectable()\nexport class MyPlaylistState {\n  constructor(private service: MyPlaylistService, private auth: AuthService) {}\n\n  @Action(MyPlaylistActionsType.FetchPlaylist)\n  fetchPlaylist(\n    { getState, patchState }: StateContext<SpotifyModel>,\n    { queryParams }: MyPlaylistActionsType.FetchPlaylist\n  ) {\n    const state$ = getState();\n\n    if (state$ == null) {\n      return this.service.fetchPlaylist(queryParams).pipe(\n        map((result: any) => {\n          patchState(result);\n        }),\n        catchError((error: any) => {\n          console.log('top-tracks', error);\n          // this.auth.authenticateUser();\n          return throwError(error);\n        })\n      );\n    }\n  }\n}\n","export namespace PlaylistPreviewActionsType {\n  export class FetchPlaylistPreview {\n    static readonly type = '[playlist-preview] preview';\n    constructor(public playlistId: string) {}\n  }\n}\n","import { Selector } from '@ngxs/store';\nimport { PlaylistPreviewModel } from './model';\nimport { PlaylistPreviewState } from './state';\n\nexport class PlaylistPreviewSelectors {\n  @Selector([PlaylistPreviewState])\n  public static fetchPlaylistPreview(state: PlaylistPreviewModel) {\n    return state;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { State, StateContext, Action } from '@ngxs/store';\n\nimport { throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { MyPlaylistService } from '../../services/my-playlist/my-playlist.service';\nimport { PlaylistPreviewActionsType } from './actions.type';\nimport { PlaylistPreviewModel } from './model';\n\nimport { AuthService } from '../../auth/auth.service';\n\n@State<PlaylistPreviewModel>({\n  name: 'playlist_preview',\n  defaults: null,\n})\n@Injectable()\nexport class PlaylistPreviewState {\n  constructor(private service: MyPlaylistService, private auth: AuthService) {}\n\n  @Action(PlaylistPreviewActionsType.FetchPlaylistPreview)\n  fetchPlaylistPreview(\n    { getState, patchState }: StateContext<PlaylistPreviewModel>,\n    { playlistId }: PlaylistPreviewActionsType.FetchPlaylistPreview\n  ) {\n    const state$ = getState();\n\n    if (state$ == null) {\n      return this.service.fetchPreviewPlaylist(playlistId).pipe(\n        map((result: any) => {\n          patchState(result);\n        }),\n        catchError((error: any) => {\n          console.log('playlist-preview', error);\n          // this.auth.authenticateUser();\n          return throwError(error);\n        })\n      );\n    }\n  }\n}\n","import { QueryParams } from '../index';\n\nexport namespace RecommendationActionsType {\n  export class FetchRecommendation {\n    static readonly type = '[playlist-recommendation] fetch list';\n    constructor(public queryParams: QueryParams) {}\n  }\n}\n","import { Selector } from '@ngxs/store';\nimport { RecommendationModel } from './model';\nimport { RecommendationState } from './state';\n\nexport class RecommendationSelectors {\n  @Selector([RecommendationState])\n  public static fetchRecommendation(state: RecommendationModel) {\n    return state;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { State, StateContext, Action } from '@ngxs/store';\n\nimport { throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { RecommendationActionsType } from './actions.type';\nimport { RecommendationModel } from './model';\nimport { MyPlaylistService } from '../../services/my-playlist/my-playlist.service';\n\n@State<RecommendationModel>({\n  name: 'recommendation',\n  defaults: null,\n})\n@Injectable()\nexport class RecommendationState {\n  constructor(private service: MyPlaylistService) {}\n\n  @Action(RecommendationActionsType.FetchRecommendation)\n  fetchRecommendation(\n    { getState, patchState }: StateContext<RecommendationModel>,\n    { queryParams }: RecommendationActionsType.FetchRecommendation\n  ) {\n    const state$ = getState();\n\n    if (state$ == null) {\n      return this.service.getRecommendation(queryParams).pipe(\n        map((result: any) => {\n          patchState(result);\n        }),\n        catchError((error: any) => {\n          console.log('get-recommendation', error);\n          // this.auth.authenticateUser();\n          return throwError(error);\n        })\n      );\n    }\n  }\n}\n","export namespace RelatedArtistActionsType {\n  export class FetchRelatedArtist {\n    static readonly type = '[related-artists] fetch list';\n    constructor(public artistId: string) {}\n  }\n}\n","import { Selector } from '@ngxs/store';\nimport { RelatedArtistsModel } from './model';\nimport { RelatedArtistsState } from './state';\n\nexport class RelatedArtistsSelectors {\n  @Selector([RelatedArtistsState])\n  public static fetchTopArtists(state: RelatedArtistsModel) {\n    return state;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { State, StateContext, Action } from '@ngxs/store';\n\nimport { throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { RelatedArtistsService } from '../../services/related-artists/related-artists.service';\nimport { RelatedArtistActionsType } from './actions.type';\nimport { RelatedArtistsModel } from './model';\n\nimport { AuthService } from '../../auth/auth.service';\n\n@State<RelatedArtistsModel>({\n  name: 'related_artists',\n  defaults: null,\n})\n@Injectable()\nexport class RelatedArtistsState {\n  constructor(\n    private service: RelatedArtistsService,\n    private auth: AuthService\n  ) {}\n\n  @Action(RelatedArtistActionsType.FetchRelatedArtist)\n  fetchRelatedArtists(\n    { getState, patchState }: StateContext<RelatedArtistsModel>,\n    { artistId }: RelatedArtistActionsType.FetchRelatedArtist\n  ) {\n    return this.service.fetchRelatedArtists(artistId).pipe(\n      map((result: any) => {\n        patchState(result);\n      }),\n      catchError((error: any) => {\n        console.log('top-tracks', error);\n        // this.auth.authenticateUser();\n        return throwError(error);\n      })\n    );\n  }\n}\n","import { QueryParams } from '../index';\n\nexport namespace TopArtistsActionsType {\n  export class FetchTopArtists {\n    static readonly type = '[top-artists] fetch list';\n    constructor(public queryParams: QueryParams = null) {}\n  }\n}\n","import { Selector } from '@ngxs/store';\nimport { SpotifyModel } from '../index';\nimport { TopArtistsState } from './state';\n\nexport class TopArtistsSelectors {\n  @Selector([TopArtistsState])\n  public static fetchTopArtists(state: SpotifyModel) {\n    return state;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { State, StateContext, Action } from '@ngxs/store';\n\nimport { throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { TopArtistsService } from '../../services/top-artists/top-artists.service';\nimport { TopArtistsActionsType } from './actions.type';\nimport { SpotifyModel } from '../index';\n\nimport { AuthService } from '../../auth/auth.service';\n\n@State<SpotifyModel>({\n  name: 'top_artists',\n  defaults: null,\n})\n@Injectable()\nexport class TopArtistsState {\n  constructor(private service: TopArtistsService, private auth: AuthService) {}\n\n  @Action(TopArtistsActionsType.FetchTopArtists)\n  fetchTopArtists(\n    { getState, patchState }: StateContext<SpotifyModel>,\n    { queryParams }: TopArtistsActionsType.FetchTopArtists\n  ) {\n    const state$ = getState();\n    const tp = JSON.parse(localStorage.getItem('top-artists'));\n\n    if (\n      state$ == null ||\n      tp.time_range === 'undefined' ||\n      tp.time_range !== queryParams?.time_range\n    ) {\n      return this.service.fetchTopArtists(queryParams).pipe(\n        map((result: any) => {\n          patchState(result);\n          localStorage.setItem(\n            'top-artists',\n            JSON.stringify({ time_range: queryParams?.time_range })\n          );\n        }),\n        catchError((error: any) => {\n          console.log('top-tracks', error);\n          // this.auth.authenticateUser();\n          return throwError(error);\n        })\n      );\n    }\n  }\n}\n","import { QueryParams } from '../index';\n\nexport namespace TopTracksActionsType {\n  export class FetchTopTracks {\n    static readonly type = '[top-tracks] fetch list';\n    constructor(public queryParams: QueryParams = null) {}\n  }\n}\n","import { Selector } from '@ngxs/store';\nimport { SpotifyModel } from '../index';\nimport { TopTracksState } from './state';\n\nexport class TopTracksSelectors {\n  @Selector([TopTracksState])\n  public static fetchTopTracks(state: SpotifyModel) {\n    return state;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { State, StateContext, Action } from '@ngxs/store';\n\nimport { throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { TopTracksService } from '../../services/top-tracks/top-tracks.service';\nimport { TopTracksActionsType } from './actions.type';\nimport { SpotifyModel } from '../index';\n\nimport { AuthService } from '../../auth/auth.service';\n\n@State<SpotifyModel>({\n  name: 'top_tracks',\n  defaults: null,\n})\n@Injectable()\nexport class TopTracksState {\n  constructor(private service: TopTracksService, private auth: AuthService) {}\n\n  @Action(TopTracksActionsType.FetchTopTracks)\n  fetchTopTracks(\n    { getState, patchState }: StateContext<SpotifyModel>,\n    { queryParams }: TopTracksActionsType.FetchTopTracks\n  ) {\n    const state$ = getState();\n    const tp = JSON.parse(localStorage.getItem('top-tracks'));\n\n    if (\n      state$ == null ||\n      tp.time_range === 'undefined' ||\n      tp.time_range !== queryParams?.time_range\n    ) {\n      return this.service.fetchTopTracks(queryParams).pipe(\n        map((result: any) => {\n          patchState(result);\n          localStorage.setItem(\n            'top-tracks',\n            JSON.stringify({ time_range: queryParams?.time_range })\n          );\n        }),\n        catchError((error: any) => {\n          console.log('top-tracks', error);\n          // this.auth.authenticateUser();\n          return throwError(error);\n        })\n      );\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  client_id: 'befabd15af504b89ada330c754977416', // Your client id\n  client_secret: 'e5cc8b81b2ab4732b6c3f7fef4eb0787', // Your secret\n  redirect_uri: 'http://localhost:4200/callback', // Your redirect uri\n  spotify_api: 'https://api.spotify.com/v1/',\n  spotify_api_token: 'https://accounts.spotify.com/api/token',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'sweetalert2/src/sweetalert2.scss';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"]}