{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth.guard.ts","./src/app/auth/auth.service.ts","./src/app/components/built-with/built-with.component.ts","./src/app/components/built-with/built-with.component.html","./src/app/components/edit-playlist-btn/edit-playlist-btn.component.ts","./src/app/components/edit-playlist-btn/edit-playlist-btn.component.html","./src/app/components/edit-playlist-btn/utils.ts","./src/app/components/figure-image/figure-image.component.ts","./src/app/components/figure-image/figure-image.component.html","./src/app/components/follow-btn-playlist/follow-btn-playlist.component.ts","./src/app/components/follow-btn-playlist/follow-btn-playlist.component.html","./src/app/components/follow-btn/follow-btn.component.ts","./src/app/components/follow-btn/follow-btn.component.html","./src/app/components/grid-playlist/grid-playlist.component.ts","./src/app/components/grid-playlist/grid-playlist.component.html","./src/app/components/playlist-item/playlist-item.component.ts","./src/app/components/playlist-item/playlist-item.component.html","./src/app/components/playlist-track/playlist-track.component.ts","./src/app/components/playlist-track/playlist-track.component.html","./src/app/components/recommendation-form/recommendation-form.component.ts","./src/app/components/recommendation-form/recommendation-form.component.html","./src/app/components/recommendation-form/utils.ts","./src/app/components/spinner/spinner.component.ts","./src/app/components/spinner/spinner.component.html","./src/app/components/token-expiration-modal/token-expiration-modal.component.ts","./src/app/components/token-expiration-modal/token-expiration-modal.component.html","./src/app/components/track-item/track-item.component.ts","./src/app/components/track-item/track-item.component.html","./src/app/interceptors/error-handler.interceptor.ts","./src/app/interceptors/http-headers.interceptor.ts","./src/app/interceptors/index.ts","./src/app/interceptors/utils.ts","./src/app/pages/artist-preview/artist-preview.component.ts","./src/app/pages/artist-preview/artist-preview.component.html","./src/app/pages/audio-feature/audio-feature.component.ts","./src/app/pages/audio-feature/audio-feature.component.html","./src/app/pages/callback/callback.component.ts","./src/app/pages/callback/callback.component.html","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/pages/main/main-routing.module.ts","./src/app/pages/main/main.component.ts","./src/app/pages/main/main.component.html","./src/app/pages/main/main.module.ts","./src/app/pages/my-playlist/my-playlist.component.ts","./src/app/pages/my-playlist/my-playlist.component.html","./src/app/pages/playlist-preview/playlist-preview.component.ts","./src/app/pages/playlist-preview/playlist-preview.component.html","./src/app/pages/recommendation/recommendation.component.ts","./src/app/pages/recommendation/recommendation.component.html","./src/app/pages/top-artists/top-artists-util.ts","./src/app/pages/top-artists/top-artists.component.ts","./src/app/pages/top-artists/top-artists.component.html","./src/app/pages/top-tracks/top-tracks-util.ts","./src/app/pages/top-tracks/top-tracks.component.ts","./src/app/pages/top-tracks/top-tracks.component.html","./src/app/services/artist-preview/artist-preview.service.ts","./src/app/services/artist-top-tracks/artist-top-tracks.service.ts","./src/app/services/audio-feature/audio-feature.service.ts","./src/app/services/follow/follow.service.ts","./src/app/services/index.ts","./src/app/services/my-playlist/my-playlist.service.ts","./src/app/services/related-artists/related-artists.service.ts","./src/app/services/top-artists/top-artists.service.ts","./src/app/services/top-tracks/top-tracks.service.ts","./src/app/shared.module.ts","./src/app/store/artist-preview/actions.type.ts","./src/app/store/artist-preview/selectors.ts","./src/app/store/artist-preview/state.ts","./src/app/store/artist-top-tracks/actions.type.ts","./src/app/store/artist-top-tracks/selectors.ts","./src/app/store/artist-top-tracks/state.ts","./src/app/store/audio-feature/actions.type.ts","./src/app/store/audio-feature/selectors.ts","./src/app/store/audio-feature/state.ts","./src/app/store/current-user/actions.type.ts","./src/app/store/current-user/selectors.ts","./src/app/store/current-user/state.ts","./src/app/store/follow/actions.type.ts","./src/app/store/follow/artists-state.ts","./src/app/store/follow/selectors.ts","./src/app/store/index.ts","./src/app/store/internal/actions.type.ts","./src/app/store/internal/selectors.ts","./src/app/store/internal/state.ts","./src/app/store/my-playlist/actions.type.ts","./src/app/store/my-playlist/selectors.ts","./src/app/store/my-playlist/state.ts","./src/app/store/playlist-preview/actions.type.ts","./src/app/store/playlist-preview/selectors.ts","./src/app/store/playlist-preview/state.ts","./src/app/store/recommendation/actions.type.ts","./src/app/store/recommendation/selectors.ts","./src/app/store/recommendation/state.ts","./src/app/store/related-artists/actions.type.ts","./src/app/store/related-artists/selectors.ts","./src/app/store/related-artists/state.ts","./src/app/store/top-artists/actions.type.ts","./src/app/store/top-artists/selectors.ts","./src/app/store/top-artists/state.ts","./src/app/store/top-tracks/actions.type.ts","./src/app/store/top-tracks/selectors.ts","./src/app/store/top-tracks/state.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './auth/auth.guard';\n\nimport { MainComponent } from './pages/main/main.component';\nimport { MainModule } from './pages/main/main.module';\nimport { LoginComponent } from './pages/login/login.component';\nimport { CallbackComponent } from './pages/callback/callback.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MainComponent,\n    canActivate: [AuthGuard],\n    loadChildren: () => MainModule,\n  },\n  { path: 'login', component: LoginComponent },\n  { path: 'callback', component: CallbackComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'spotify-profile';\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n// import { LazyLoadImageModule } from 'ng-lazyload-image';\n\nimport { NgxsModule } from '@ngxs/store';\nimport { NgxsLoggerPluginModule } from '@ngxs/logger-plugin';\nimport { NgxsDispatchPluginModule } from '@ngxs-labs/dispatch-decorator';\nimport { NgxsResetPluginModule } from 'ngxs-reset-plugin';\nimport { Store } from './store';\nimport { environment } from '../environments/environment';\n\nimport { AppComponent } from './app.component';\nimport { SharedModule } from './shared.module';\nimport { AppRoutingModule } from './app-routing.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    SharedModule,\n    AppRoutingModule,\n    NgxsModule.forRoot(Store, {\n      developmentMode: !environment.production,\n    }),\n    NgxsLoggerPluginModule.forRoot(),\n    NgxsDispatchPluginModule.forRoot(),\n    NgxsResetPluginModule.forRoot(),\n    HttpClientModule,\n  ],\n  providers: [],\n  exports: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from './auth.service';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    if (\n      !this.authService.isAuthenticated() &&\n      this.authService.accessTokenChecker()\n    ) {\n      this.router.navigate(['login']);\n      return false;\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngxs/store';\nimport * as queryString from 'query-string';\nimport { StateClear } from 'ngxs-reset-plugin';\n\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private store: Store\n  ) {}\n\n  /**\n   * isAuthenticated\n   */\n  public isAuthenticated() {\n    const token = localStorage.getItem('access_token');\n\n    if (token == null || token === '' || token == 'undefined') return false;\n\n    return true;\n  }\n\n  /**\n   * authenticateUser\n   */\n  public authenticateUser() {\n    const state$ = this.generateRandomString(16);\n\n    localStorage.setItem('state', state$);\n\n    const scope$ = [\n      'user-read-private',\n      'user-read-email',\n      'user-follow-read',\n      'user-top-read',\n      'playlist-read-private',\n      // modify user follower scope\n      'user-follow-read',\n      'user-follow-modify',\n      // modify public and private playlist scope\n      'playlist-modify-public',\n      'playlist-modify-private',\n    ];\n\n    window.location.href =\n      'https://accounts.spotify.com/authorize?' +\n      queryString.stringify({\n        response_type: 'code',\n        client_id: environment.client_id,\n        scope: scope$.toString().replace(/,/g, ' '),\n        redirect_uri: environment.redirect_uri,\n        state: state$,\n      });\n\n    this.store.dispatch(new StateClear());\n  }\n\n  /**\n   * generateRandomString\n   */\n  public generateRandomString(length) {\n    var text = '';\n    var possible =\n      'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    for (var i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n  }\n\n  /**\n   * authHttpHeaders\n   */\n  public authHttpHeaders() {\n    return new HttpHeaders({\n      Authorization: `Basic ${btoa(\n        environment.client_id + ':' + environment.client_secret\n      )}`,\n      'Content-Type': 'application/x-www-form-urlencoded',\n    });\n  }\n\n  /**\n   * generateToken\n   */\n  public generateToken(code: string) {\n    const headers = this.authHttpHeaders();\n\n    const params = new HttpParams()\n      .set('code', code)\n      .set('redirect_uri', environment.redirect_uri)\n      .set('grant_type', 'authorization_code');\n\n    return this.http.post<any>(\n      `${environment.spotify_api_token}`,\n      params.toString(),\n      { headers }\n    );\n  }\n\n  /**\n   * refreshToken\n   */\n  public refreshToken() {\n    const refreshToken = localStorage.getItem('refresh_token');\n    const headers = this.authHttpHeaders();\n    const params = new HttpParams()\n      .set('grant_type', 'refresh_token')\n      .set('refresh_token', refreshToken);\n\n    return this.http.post<any>(\n      `${environment.spotify_api_token}`,\n      params.toString(),\n      { headers }\n    );\n  }\n\n  /**\n   * UsersProfile\n   */\n  public fetchCurrentUser() {\n    return this.http.get<any[]>(`${environment.spotify_api}me`);\n  }\n\n  /**\n   * accessTokenChecker\n   */\n  public accessTokenChecker() {\n    const accessToken = localStorage.getItem('access_token');\n    return accessToken || accessToken !== '' ? true : false;\n  }\n\n  /**\n   * callback_times\n   */\n  public setCallbackTimes() {\n    let times = localStorage.getItem('callback_times');\n    let cons$ = times === null ? 1 : parseInt(times) + 1;\n    localStorage.setItem('callback_item', cons$.toString());\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  faSpotify,\n  faAngular,\n  faGithub,\n} from '@fortawesome/free-brands-svg-icons';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-built-with',\n  templateUrl: './built-with.component.html',\n  styleUrls: ['./built-with.component.scss'],\n})\nexport class BuiltWithComponent implements OnInit {\n  faSpotify = faSpotify;\n  faAngular = faAngular;\n  faGithub = faGithub;\n  faPlus = faPlus;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"built-container\">\n  <!-- <div class=\"built-content\">\n    <fa-icon [icon]=\"faSpotify\" class=\"fa-spotify\"></fa-icon>\n    <div class=\"fa-plus\">+</div>\n    <fa-icon [icon]=\"faAngular\" class=\"fa-angular\"></fa-icon>\n  </div>\n  <br /> -->\n  <div class=\"social-content\">\n    <a href=\"https://github.com/RyaiStudio\" target=\"_blank\" class=\"fa-github\"\n      ><fa-icon [icon]=\"faGithub\"></fa-icon\n    ></a>\n    <br />\n    <p>Spotify Profile &#169;2020</p>\n  </div>\n</div>\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { faPen } from '@fortawesome/free-solid-svg-icons';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { PlaylistPreviewModel } from '../../store/playlist-preview/model';\nimport { MyPlaylistService } from '../../services/my-playlist/my-playlist.service';\nimport { errors } from './utils';\nimport { SubSink } from 'subsink';\nimport { Toast } from '../../services/index';\n\nimport { Dispatch } from '@ngxs-labs/dispatch-decorator';\nimport { PlaylistPreviewActionsType } from '../../store/playlist-preview/actions.type';\n\n@Component({\n  selector: 'app-edit-playlist-btn',\n  templateUrl: './edit-playlist-btn.component.html',\n  styleUrls: ['./edit-playlist-btn.component.scss'],\n})\nexport class EditPlaylistBtnComponent implements OnInit, OnDestroy {\n  @Input() playlist: PlaylistPreviewModel;\n  editForm: FormGroup;\n  inputErrors: any = errors;\n  req$ = new SubSink();\n  toast = Toast();\n\n  faPen = faPen;\n  isActive: boolean = false;\n  isSubmited: boolean;\n\n  @Dispatch() playlistPreview = (playlistId: string) =>\n    new PlaylistPreviewActionsType.FetchPlaylistPreview(playlistId);\n\n  constructor(private FB: FormBuilder, private http: MyPlaylistService) {}\n\n  get FC() {\n    return this.editForm.controls;\n  }\n\n  ngOnInit(): void {\n    this.editForm = this.FB.group({\n      name: [\n        this.playlist.name,\n        [Validators.required, Validators.minLength(3)],\n      ],\n      description: [this.playlist.description, [Validators.minLength(25)]],\n      public: [true],\n    });\n  }\n\n  editPlaylist() {\n    this.isActive = true;\n  }\n\n  savePlaylist(playlist: PlaylistPreviewModel) {\n    this.isSubmited = true;\n    if (!this.editForm.valid) return;\n    const form = this.editForm.value;\n    const dataObj =\n      form.description !== '' ? form : { name: form.name, public: form.public };\n\n    this.req$.sink = this.http\n      .editPlaylistDetails(playlist.id, dataObj)\n      .subscribe(\n        (res) => {\n          this.toast.fire({\n            icon: 'success',\n            title: 'Success request edit playlist details',\n          });\n          this.playlistPreview(playlist.id);\n        },\n        (err) =>\n          this.toast.fire({\n            icon: 'error',\n            title: 'Failed request edit playlist details',\n          })\n      );\n\n    this.isActive = false;\n  }\n\n  ngOnDestroy() {\n    this.req$.unsubscribe();\n  }\n}\n","<ng-container>\n  <a (click)=\"editPlaylist()\" class=\"edit-playlist\">\n    EDIT DETAILS &nbsp;<fa-icon [icon]=\"faPen\"></fa-icon>\n  </a>\n\n  <div [class]=\"'modal ' + (isActive ? 'is-active' : '')\">\n    <button\n      class=\"modal-close is-large\"\n      (click)=\"isActive = false\"\n      aria-label=\"close\"\n    ></button>\n    <div class=\"modal-background\" (click)=\"isActive = false\"></div>\n    <div class=\"modal-content\">\n      <div class=\"modal-content--wrapper\">\n        <div class=\"container\">\n          <div class=\"columns\">\n            <div class=\"column is-two-fifths\" *ngIf=\"playlist as play\">\n              <figure class=\"image\">\n                <img\n                  [lazyLoad]=\"\n                    play.images.length > 0\n                      ? play.images[0].url\n                      : 'assets/images/spotify.png'\n                  \"\n                  alt=\"\"\n                />\n              </figure>\n            </div>\n            <div [formGroup]=\"editForm\" class=\"column\">\n              <div class=\"field\">\n                <label for=\"name\">PLAYLIST NAME</label>\n                <div class=\"control is-small\">\n                  <input\n                    id=\"name\"\n                    class=\"input is-small\"\n                    type=\"text\"\n                    formControlName=\"name\"\n                    autocomplete=\"off\"\n                  />\n                </div>\n                <div class=\"errors\" *ngIf=\"isSubmited && FC.name.errors\">\n                  <div *ngFor=\"let log of inputErrors.name\">\n                    <span\n                      *ngIf=\"FC.name.hasError(log.error)\"\n                      class=\"tag is-danger is-light\"\n                    >\n                      {{ log.label }}\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <div class=\"field\">\n                <label for=\"desc\">DESCRIPTION</label>\n                <textarea\n                  id=\"desc\"\n                  rows=\"3\"\n                  class=\"is-small textarea\"\n                  formControlName=\"description\"\n                ></textarea>\n                <div class=\"errors\" *ngIf=\"isSubmited && FC.description.errors\">\n                  <div *ngFor=\"let log of inputErrors.description\">\n                    <span\n                      *ngIf=\"FC.description.hasError(log.error)\"\n                      class=\"tag is-danger is-light\"\n                    >\n                      {{ log.label }}\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <div class=\"control dis-inl\">\n                <label class=\"radio\">\n                  <input\n                    type=\"radio\"\n                    name=\"public\"\n                    formControlName=\"public\"\n                    [value]=\"true\"\n                  />\n                  Public\n                </label>\n                <label class=\"radio\">\n                  <input\n                    type=\"radio\"\n                    name=\"public\"\n                    formControlName=\"public\"\n                    [value]=\"false\"\n                  />\n                  Private\n                </label>\n              </div>\n              <div class=\"edit-buttons\">\n                <a class=\"spotify-btn\" (click)=\"savePlaylist(playlist)\">SAVE</a>\n                <a class=\"spotify-btn cancel-btn\" (click)=\"isActive = false\"\n                  >cancel</a\n                >\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-container>\n","const errors = {\n  name: [\n    { error: 'required', label: 'this field is required' },\n    { error: 'minlength', label: 'min length must 3 characters' },\n  ],\n  description: [{ error: 'minlength', label: 'min length must 25 characters' }],\n};\n\nexport { errors };\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-figure-image',\n  templateUrl: './figure-image.component.html',\n  styleUrls: ['./figure-image.component.scss'],\n})\nexport class FigureImageComponent implements OnInit {\n  @Input() image: {\n    url: string;\n    alt?: string;\n  };\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<img\n  [lazyLoad]=\"image.url\"\n  [alt]=\"image.alt\"\n  defaultImage=\"assets/images/blur.jpg\"\n/>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { SubSink } from 'subsink';\n// import Swal from 'sweetalert2';\n\nimport { FollowService } from '../../services/follow/follow.service';\nimport { Dispatch } from '@ngxs-labs/dispatch-decorator';\nimport { StateReset } from 'ngxs-reset-plugin';\nimport { Toast, SwalFire } from '../../services/index';\nimport { Store } from '@ngxs/store';\n\nimport { faTrash, faTrashRestoreAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport { MyPlaylistActionsType } from '../../store/my-playlist/actions.type';\nimport { MyPlaylistState } from '../../store/my-playlist/state';\n\nimport { MyPlaylistItemModel } from '../../store/my-playlist/model';\nimport { CurrentUserModel } from '../../store/current-user/model';\nimport { PlaylistPreviewModel } from '../../store/playlist-preview/model';\n\n@Component({\n  selector: 'app-follow-btn-playlist',\n  templateUrl: './follow-btn-playlist.component.html',\n  styleUrls: ['./follow-btn-playlist.component.scss'],\n})\nexport class FollowBtnPlaylistComponent implements OnInit {\n  constructor(private follow: FollowService, private store: Store) {}\n\n  @Dispatch() fetchMyPlaylist = (qry = null) =>\n    new MyPlaylistActionsType.FetchPlaylist(qry);\n\n  @Input() playlist: PlaylistPreviewModel;\n  @Input() playlistCollection: MyPlaylistItemModel[];\n  @Input() currentUser: CurrentUserModel;\n  @Input() isMyPlaylist: boolean;\n\n  Toast = Toast();\n  swalFire = SwalFire;\n  // Swal = Swal;\n\n  faTrash = faTrash;\n  faTrashRestoreAlt = faTrashRestoreAlt;\n\n  putRequest$ = new SubSink();\n  ifFollowText = 'FOLLOWING';\n  isFollowed: boolean;\n\n  ngOnInit(): void {\n    if (this.playlistCollection && this.currentUser) {\n      const filter = this.playlistCollection.filter(\n        (res) => res.id === this.playlist.id\n      );\n      if (filter.length > 0) this.isFollowed = true;\n    }\n  }\n\n  toastCall(stat, msg) {\n    this.Toast.fire({ icon: stat == 1 ? 'success' : 'error', title: msg });\n  }\n\n  // swalFire(callback, options) {\n  //   Swal.fire({\n  //     ...options,\n  //     imageWidth: 200,\n  //     imageHeight: 200,\n  //     confirmButtonColor: '#1db954',\n  //     cancelButtonColor: '#8e9396',\n  //     showCancelButton: true,\n  //   }).then(callback);\n  // }\n\n  unFollowPlaylist(playlist) {\n    const options = {\n      title: playlist.name,\n      text: 'Are you sure to unfollow playlist',\n      imageUrl:\n        playlist.images.length > 0\n          ? playlist.images[0].url\n          : 'assets/images/spotify.png',\n      confirmButtonText: 'Unfollow Playlist',\n    };\n\n    this.swalFire((result) => {\n      if (result.value) {\n        this.putRequest$.sink = this.follow\n          .unFollowPlaylist(playlist.id)\n          .subscribe(\n            (res) => {\n              this.toastCall(1, 'Playlist has been unfollowed');\n              this.isFollowed = false;\n              this.store.dispatch(new StateReset(MyPlaylistState));\n              this.fetchMyPlaylist({ limit: 50 });\n            },\n            (err) => this.toastCall(2, 'unfollow request failed!')\n          );\n      }\n    }, options);\n  }\n\n  followPlaylist(playlist) {\n    const options = {\n      title: playlist.name,\n      input: 'radio',\n      inputOptions: { '0': 'Public', '1': 'Private' },\n      imageUrl:\n        playlist.images.length > 0\n          ? playlist.images[0].url\n          : 'assets/images/spotify.png',\n      confirmButtonText: 'Follow Playlist',\n    };\n\n    this.swalFire((result) => {\n      if (result.value) {\n        this.putRequest$.sink = this.follow\n          .followPlaylist(playlist.id)\n          .subscribe(\n            (res) => {\n              this.toastCall(1, 'Playlist has been followed');\n              this.isFollowed = true;\n              this.store.dispatch(new StateReset(MyPlaylistState));\n              this.fetchMyPlaylist({ limit: 50 });\n            },\n            (err) => this.toastCall(2, 'Follow request failed!')\n          );\n      }\n    }, options);\n  }\n\n  unFollowUserPlaylist(playlist) {\n    const options = {\n      title: playlist.name,\n      text:\n        'Are you sure!! you lost all tracks from this playlist once you leave this page.',\n      imageUrl:\n        playlist.images.length > 0\n          ? playlist.images[0].url\n          : 'assets/images/spotify.png',\n      confirmButtonText: 'Delete Playlist',\n    };\n\n    this.swalFire((result) => {\n      if (result.value && this.isMyPlaylist) {\n        this.putRequest$.sink = this.follow\n          .unFollowUserPlaylist(playlist.owner.id, playlist.id)\n          .subscribe(\n            (res) => {\n              this.toastCall(1, 'Playlist has been delete');\n              this.isFollowed = false;\n              this.store.dispatch(new StateReset(MyPlaylistState));\n              this.fetchMyPlaylist({ limit: 50 });\n            },\n            (err) => this.toastCall(2, 'Unfollow request failed!')\n          );\n      }\n    }, options);\n  }\n\n  followUserPlaylist(playlist) {\n    const options = {\n      title: playlist.name,\n      input: 'radio',\n      inputOptions: { '0': 'Public', '1': 'Private' },\n      imageUrl:\n        playlist.images.length > 0\n          ? playlist.images[0].url\n          : 'assets/images/spotify.png',\n      confirmButtonText: 'Restore PLaylist',\n    };\n\n    this.swalFire((result) => {\n      if (result.value && this.isMyPlaylist) {\n        const isPublic = result.value == '0' ? true : false;\n        this.putRequest$.sink = this.follow\n          .followUserPlaylist(playlist.owner.id, playlist.id, isPublic)\n          .subscribe(\n            (res) => {\n              this.toastCall(1, 'Playlist has been Restored');\n              this.isFollowed = true;\n              this.store.dispatch(new StateReset(MyPlaylistState));\n              this.fetchMyPlaylist({ limit: 50 });\n            },\n            (err) => this.toastCall(2, 'Unfollow request failed!')\n          );\n      }\n    }, options);\n  }\n}\n","<ng-container *ngIf=\"isMyPlaylist; else elseBlock\">\n  <a\n    *ngIf=\"isFollowed\"\n    (click)=\"unFollowUserPlaylist(playlist)\"\n    class=\"btn-unfollow\"\n  >\n    DELETE PLAYLIST &nbsp;<fa-icon [icon]=\"faTrash\"></fa-icon>\n  </a>\n  <a\n    *ngIf=\"!isFollowed\"\n    (click)=\"followUserPlaylist(playlist)\"\n    class=\"btn-unfollow\"\n  >\n    RESTORE PLAYLIST &nbsp;<fa-icon [icon]=\"faTrashRestoreAlt\"></fa-icon>\n  </a>\n</ng-container>\n<ng-template #elseBlock>\n  <a\n    *ngIf=\"isFollowed\"\n    (click)=\"unFollowPlaylist(playlist)\"\n    class=\"btn-unfollow\"\n    (mouseover)=\"ifFollowText = 'UNFOLLOW'\"\n    (mouseout)=\"ifFollowText = 'FOLLOWING'\"\n    [innerHTML]=\"ifFollowText\"\n  >\n  </a>\n  <a\n    *ngIf=\"!isFollowed\"\n    (click)=\"followPlaylist(playlist)\"\n    class=\"btn-unfollow\"\n  >\n    FOLLOW\n  </a>\n</ng-template>\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\n\nimport { ArtistPreviewModel } from '../../store/artist-preview/model';\nimport { FollowArtistItemModel } from '../../store/follow/artists-model';\n\nimport { FollowActionsType } from '../../store/follow/actions.type';\nimport { FollowService } from '../../services/follow/follow.service';\nimport { Dispatch } from '@ngxs-labs/dispatch-decorator';\nimport { SubSink } from 'subsink';\n\n// import Swal from 'sweetalert2';\nimport { Toast, SwalFire } from '../../services/index';\n\n@Component({\n  selector: 'app-follow-btn',\n  templateUrl: './follow-btn.component.html',\n  styleUrls: ['./follow-btn.component.scss'],\n})\nexport class FollowBtnComponent implements OnInit, OnDestroy {\n  constructor(private follow: FollowService) {}\n\n  @Dispatch() fetchFollowArtists = () =>\n    new FollowActionsType.FetchFollowArtists();\n\n  @Input() artist: ArtistPreviewModel;\n  @Input() following: FollowArtistItemModel[];\n\n  Toast = Toast();\n  swalFire = SwalFire;\n  putRequest$ = new SubSink();\n  $isFollowed = false;\n  $unfollowHover = false;\n\n  ngOnDestroy() {\n    this.putRequest$.unsubscribe();\n  }\n\n  ngOnInit(): void {\n    const fil = this.following.filter((follow) => follow.id === this.artist.id);\n    this.$isFollowed = fil.length > 0 ? true : false;\n    // console.log('this.$isFollowed', this.$isFollowed);\n  }\n\n  toastCall(stat, msg) {\n    this.Toast.fire({ icon: stat == 1 ? 'success' : 'error', title: msg });\n  }\n\n  // swalFire(callback, options) {\n  //   Swal.fire({\n  //     ...options,\n  //     imageWidth: 200,\n  //     imageHeight: 200,\n  //     confirmButtonColor: '#1db954',\n  //     cancelButtonColor: '#8e9396',\n  //     showCancelButton: true,\n  //   }).then(callback);\n  // }\n\n  followArtist(artist) {\n    const options = {\n      title: artist.name,\n      imageUrl: artist.images[0].url,\n      confirmButtonText: 'Confirm Follow',\n    };\n\n    this.swalFire((result) => {\n      if (result.value) {\n        this.putRequest$.sink = this.follow.followArtist(artist.id).subscribe(\n          (res) => {\n            this.toastCall(1, 'Artist has been followed');\n            this.fetchFollowArtists();\n            this.$isFollowed = true;\n          },\n          (err) => this.toastCall(2, 'Follow request failed!')\n        );\n      }\n    }, options);\n  }\n\n  unFollowArtist(artist) {\n    const options = {\n      title: artist.name,\n      text: 'Are you sure you want to continue?',\n      imageUrl: artist.images[0].url,\n      confirmButtonText: 'Unfollow Artist',\n    };\n\n    this.swalFire((result) => {\n      if (result.value) {\n        this.putRequest$.sink = this.follow.unFollowArtist(artist.id).subscribe(\n          (res) => {\n            this.toastCall(1, 'Artist has been unfollowed');\n            this.fetchFollowArtists();\n            this.$isFollowed = false;\n          },\n          (err) => this.toastCall(2, 'Follow request failed!')\n        );\n      }\n    }, options);\n  }\n}\n","<ng-container>\n  <a\n    *ngIf=\"$isFollowed\"\n    class=\"spotify-btn\"\n    [innerHTML]=\"$unfollowHover ? 'UNFOLLOWED' : 'FOLLOWING'\"\n    (mouseover)=\"$unfollowHover = true\"\n    (mouseout)=\"$unfollowHover = false\"\n    (click)=\"unFollowArtist(artist)\"\n  ></a>\n  <a *ngIf=\"!$isFollowed\" (click)=\"followArtist(artist)\" class=\"spotify-btn\">\n    FOLLOW\n  </a>\n</ng-container>\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { TopArtistsModel } from '../../store/top-artists/model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-grid-playlist',\n  templateUrl: './grid-playlist.component.html',\n  styleUrls: ['./grid-playlist.component.scss'],\n})\nexport class GridPlaylistComponent implements OnInit {\n  faEye = faEye;\n  @Input() artists: TopArtistsModel[];\n\n  defaultImage = 'https://www.placecage.com/1000/1000';\n  image = 'https://images.unsplash.com/photo-1443890923422-7819ed4101c0?fm=jpg';\n\n  constructor(private route: Router) {}\n\n  ngOnInit(): void {}\n\n  withComma(n) {\n    return n.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  previewArtist(artist) {\n    this.route.navigate(['artist', artist.id]);\n  }\n}\n","<div class=\"playlist-collection\">\n  <div\n    class=\"playlist-item\"\n    *ngFor=\"let artist of artists\"\n    (click)=\"previewArtist(artist)\"\n  >\n    <figure class=\"image\">\n      <img\n        [lazyLoad]=\"artist.images[0].url\"\n        defaultImage=\"assets/images/blur.jpg\"\n        alt=\"\"\n      />\n    </figure>\n    <div class=\"playlist-item--content\">\n      <h3>{{ artist.name }}</h3>\n      <label class=\"followers\">\n        <strong>followers : </strong>\n        <span>{{ withComma(artist.followers.total) }}</span>\n      </label>\n      <label class=\"popularity\">\n        <strong>popularity : </strong> <span>{{ artist.popularity }}%</span>\n      </label>\n      <div class=\"floater\">\n        <fa-icon [icon]=\"faEye\"></fa-icon>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { MyPlaylistItemModel } from '../../store/my-playlist/model';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { Router } from '@angular/router';\n\nimport { Store } from '@ngxs/store';\nimport { StateReset } from 'ngxs-reset-plugin';\nimport { PlaylistPreviewState } from '../../store/playlist-preview/state';\n\n@Component({\n  selector: 'app-playlist-item',\n  templateUrl: './playlist-item.component.html',\n  styleUrls: ['./playlist-item.component.scss'],\n})\nexport class PlaylistItemComponent implements OnInit {\n  faEye = faEye;\n  @Input() playlists: MyPlaylistItemModel[];\n  constructor(private route: Router, private store: Store) {}\n\n  ngOnInit(): void {\n    console.log('store', this.store.snapshot());\n  }\n\n  playlistPreview(artist: MyPlaylistItemModel) {\n    // localStorage.removeItem('selected-my-playlist');\n    // localStorage.setItem(\n    //   'selected-my-playlist',\n    //   JSON.stringify({\n    //     artistId: artist.id,\n    //     owner: artist.owner,\n    //   })\n    // );\n    this.store.dispatch(new StateReset(PlaylistPreviewState));\n    this.route.navigate(['my-playlist', artist.id]);\n  }\n}\n","<div class=\"playlist-collection\">\n  <div\n    class=\"playlist-item\"\n    (click)=\"playlistPreview(playlist)\"\n    *ngFor=\"let playlist of playlists\"\n  >\n    <figure class=\"image\">\n      <img\n        defaultImage=\"assets/images/blur.jpg\"\n        [lazyLoad]=\"\n          playlist.images.length > 0\n            ? playlist.images[0].url\n            : 'assets/images/spotify.png'\n        \"\n        alt=\"\"\n      />\n    </figure>\n    <div class=\"playlist-item--content\">\n      <h3>{{ playlist.name }}</h3>\n      <label class=\"followers\">\n        <strong>\n          <span *ngIf=\"playlist.tracks.total as $total\">\n            {{ $total < 10 ? \"0\" + $total : $total }}\n          </span>\n          TRACKS\n        </strong>\n      </label>\n      <div class=\"floater\">\n        <fa-icon [icon]=\"faEye\"></fa-icon>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { Dispatch } from '@ngxs-labs/dispatch-decorator';\nimport { Router } from '@angular/router';\nimport {\n  PlaylistPreviewTracksModel,\n  PlaylistPreviewInnerItemModel,\n} from '../../store/playlist-preview/model';\nimport { faPlay, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { SwalFire, Toast } from '../../services/index';\nimport { MyPlaylistService } from '../../services/my-playlist/my-playlist.service';\nimport { SubSink } from 'subsink';\nimport { Store } from '@ngxs/store';\nimport { StateReset } from 'ngxs-reset-plugin';\nimport { PlaylistPreviewState } from '../../store/playlist-preview/state';\nimport { PlaylistPreviewActionsType } from '../../store/playlist-preview/actions.type';\n\n@Component({\n  selector: 'app-playlist-track',\n  templateUrl: './playlist-track.component.html',\n  styleUrls: ['./playlist-track.component.scss'],\n})\nexport class PlaylistTrackComponent implements OnInit, OnDestroy {\n  @Input() tracks: PlaylistPreviewTracksModel;\n  @Input() config: any;\n  @Input() default: boolean = false;\n  @Input() isMyPlaylist: boolean;\n  @Input() playlistId: string;\n\n  faPlay = faPlay;\n  faTimes = faTimes;\n\n  toast = Toast();\n  swalFire = SwalFire;\n  req$ = new SubSink();\n\n  @Dispatch() playlistPreview = (playlistId: string) =>\n    new PlaylistPreviewActionsType.FetchPlaylistPreview(playlistId);\n\n  constructor(\n    private route: Router,\n    private http: MyPlaylistService,\n    private store: Store\n  ) {}\n\n  ngOnInit(): void {}\n\n  pageChanged(event) {\n    this.config.currentPage = event;\n  }\n\n  trackPreview(track) {\n    localStorage.removeItem('selected-audio-feature');\n    localStorage.setItem(\n      'selected-audio-feature',\n      JSON.stringify({\n        image: track.album.images[0].url,\n        name: track.name,\n        artists: track.artists,\n        description: track.album.name,\n        popularity: track.popularity,\n        id: track.id,\n        external_urls: track.external_urls,\n      })\n    );\n\n    this.route.navigate(['audio-feature', track.id]);\n  }\n\n  removeTrackItem(item: PlaylistPreviewInnerItemModel) {\n    const img = item.track.album.images;\n    const options = {\n      title: item.track.name,\n      text: 'Are you sure to remove this item from this playlist',\n      imageUrl: img.length > 0 ? img[0].url : 'assets/images/spotify.png',\n      confirmButtonText: 'Remove Track',\n    };\n\n    this.swalFire((result) => {\n      if (result.value) {\n        this.req$.sink = this.http\n          .removePlaylistItem(this.playlistId, {\n            tracks: [{ uri: item.track.uri }],\n          })\n          .subscribe(\n            (res) => {\n              this.toast.fire({\n                icon: 'success',\n                title: 'Item has been remove from this playlist',\n              });\n              this.store.dispatch(new StateReset(PlaylistPreviewState));\n              this.playlistPreview(this.playlistId);\n            },\n            (err) => {\n              this.toast.fire({\n                icon: 'error',\n                title: 'Failed request remove item ',\n              });\n              console.log(err);\n            }\n          );\n      }\n    }, options);\n  }\n\n  ngOnDestroy() {\n    this.req$.unsubscribe();\n  }\n}\n","<ng-container>\n  <div class=\"playlist-tracks\" *ngIf=\"tracks && config && !default\">\n    <div\n      class=\"playlist-tracks--item\"\n      *ngFor=\"let item of tracks.items | paginate: config\"\n    >\n      <figure class=\"image\">\n        <a [href]=\"item.track.external_urls.spotify\" target=\"_blank\">\n          <fa-icon [icon]=\"faPlay\"></fa-icon>\n        </a>\n        <img\n          *ngIf=\"item.track.album.images as images$\"\n          [lazyLoad]=\"images$[images$.length - 1].url\"\n          alt=\"\"\n        />\n      </figure>\n      <div class=\"track-item--content\">\n        <a\n          *ngIf=\"isMyPlaylist\"\n          (click)=\"removeTrackItem(item)\"\n          class=\"delete-btn\"\n        >\n          <fa-icon [icon]=\"faTimes\"></fa-icon> remove\n        </a>\n        <h4 (click)=\"trackPreview(item.track)\">{{ item.track.name }}</h4>\n        <p>\n          <span *ngFor=\"let artist of item.track.artists; let isLast = last\">\n            {{ artist.name }}{{ isLast ? \"\" : \", \" }}\n          </span>\n          - <span>{{ item.track.album.name }}</span>\n        </p>\n      </div>\n    </div>\n  </div>\n  <div class=\"playlist-tracks\" *ngIf=\"tracks && default\">\n    <div class=\"playlist-tracks--item\" *ngFor=\"let track of tracks\">\n      <figure class=\"image\">\n        <a [href]=\"track.external_urls.spotify\" target=\"_blank\">\n          <fa-icon [icon]=\"faPlay\"></fa-icon>\n        </a>\n        <img\n          *ngIf=\"track.album.images as images$\"\n          [lazyLoad]=\"images$[images$.length - 1].url\"\n          alt=\"\"\n        />\n      </figure>\n      <div class=\"track-item--content\">\n        <h4 (click)=\"trackPreview(track)\">{{ track.name }}</h4>\n        <p>\n          <span *ngFor=\"let artist of track.artists; let isLast = last\">\n            {{ artist.name }}{{ isLast ? \"\" : \", \" }}\n          </span>\n          - <span>{{ track.album.name }}</span>\n        </p>\n      </div>\n    </div>\n  </div>\n</ng-container>\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Dispatch } from '@ngxs-labs/dispatch-decorator';\nimport { StateReset } from 'ngxs-reset-plugin';\nimport { Store } from '@ngxs/store';\nimport { Router } from '@angular/router';\nimport { Select } from '@ngxs/store';\nimport { Observable } from 'rxjs';\n\nimport { errors } from './utils';\nimport { SubSink } from 'subsink';\nimport { Toast } from '../../services/index';\n\nimport { PlaylistPreviewModel } from '../../store/playlist-preview/model';\nimport { RecommendationModel } from '../../store/recommendation/model';\nimport { CurrentUserModel } from '../../store/current-user/model';\n\nimport { MyPlaylistService } from '../../services/my-playlist/my-playlist.service';\nimport { MyPlaylistActionsType } from '../../store/my-playlist/actions.type';\nimport { MyPlaylistSelectors } from '../../store/my-playlist/selectors';\nimport { MyPlaylistState } from '../../store/my-playlist/state';\nimport { SpotifyModel } from '../../store/index';\n\n@Component({\n  selector: 'app-recommendation-form',\n  templateUrl: './recommendation-form.component.html',\n  styleUrls: ['./recommendation-form.component.scss'],\n})\nexport class RecommendationFormComponent implements OnInit, OnDestroy {\n  recomForm: FormGroup;\n  inputErrors: any = errors;\n  isSubmited: boolean;\n  isModalActive: boolean;\n  uris: string;\n\n  req$ = new SubSink();\n  reqPlaylist$ = new SubSink();\n  toast = Toast();\n  isRecomCreated: any = JSON.parse(localStorage.getItem('recommendation'));\n  isRecomExist: boolean;\n\n  @Input() playlist: PlaylistPreviewModel;\n  @Input() currentUser: CurrentUserModel;\n  @Input() recommendation: RecommendationModel;\n\n  @Dispatch() fetchMyPlaylist = (qry = null) =>\n    new MyPlaylistActionsType.FetchPlaylist(qry);\n\n  @Select(MyPlaylistSelectors.fetchPlaylist) playlist$: Observable<\n    SpotifyModel\n  >;\n\n  constructor(\n    private FB: FormBuilder,\n    private http: MyPlaylistService,\n    private store: Store,\n    private route: Router\n  ) {}\n\n  get FC() {\n    return this.recomForm.controls;\n  }\n\n  ngOnInit(): void {\n    this.recomForm = this.FB.group({\n      name: [\n        `Recommended Tracks Based On  ${this.playlist.name}`,\n        [Validators.required, Validators.minLength(3)],\n      ],\n      description: ['', [Validators.minLength(25)]],\n      public: [true],\n    });\n\n    this.reqPlaylist$.sink = this.playlist$.subscribe((play) => {\n      if (play && this.isRecomCreated) {\n        const collect = play.items.filter(\n          (item) => item.id === this.isRecomCreated.playlistId\n        );\n        if (collect.length > 0) {\n          this.isRecomExist = true;\n        }\n      }\n    });\n  }\n\n  showCreateForm(user: CurrentUserModel, recom: RecommendationModel) {\n    if (user && recom) {\n      this.uris = recom.tracks.map((track) => track.uri).toString();\n      this.isModalActive = true;\n    }\n  }\n\n  saveToSpotify(userId) {\n    this.isSubmited = true;\n    if (!this.recomForm.valid) return;\n\n    const form = this.recomForm.value;\n    const formObj =\n      form.description !== '' ? form : { name: form.name, public: form.public };\n\n    this.req$.sink = this.http.createPlaylist(userId, formObj).subscribe(\n      (res) => {\n        this.pushCollection(res);\n        this.setLocalStorage();\n      },\n      (err) => {\n        this.toast.fire({\n          icon: 'error',\n          title: 'Failed request save recommendation',\n        });\n        console.log(err);\n      }\n    );\n  }\n\n  setLocalStorage() {\n    localStorage.removeItem('recommendation');\n    this.store.dispatch(new StateReset(MyPlaylistState));\n    this.isModalActive = false;\n    this.isSubmited = false;\n\n    localStorage.setItem(\n      'recommendation',\n      JSON.stringify({ playlistId: this.playlist.id, isSubmitted: true })\n    );\n\n    setTimeout(() => {\n      this.isRecomExist = true;\n      this.isRecomCreated = JSON.parse(localStorage.getItem('recommendation'));\n    }, 1000);\n  }\n\n  pushCollection(res: PlaylistPreviewModel) {\n    const recomString = this.recommendation.tracks\n      .map((track) => track.uri)\n      .toString();\n\n    if (res) {\n      this.http.pushTracksToPlaylist(res.id, recomString).subscribe(\n        (res) => {\n          this.fetchMyPlaylist({ limit: 50 });\n          this.toast.fire({\n            icon: 'success',\n            title: 'Playlist has been save to collections',\n          });\n        },\n        (err) => {\n          this.toast.fire({\n            icon: 'error',\n            title: 'Failed push request recommendation items',\n          });\n          console.log(err);\n        }\n      );\n    }\n  }\n\n  openPlaylist() {\n    this.route.navigate(['my-playlist']);\n  }\n\n  ngOnDestroy() {\n    this.req$.unsubscribe();\n    this.reqPlaylist$.unsubscribe();\n  }\n}\n","<ng-container>\n  <a\n    *ngIf=\"\n      (recommendation && !isRecomCreated) ||\n      (isRecomCreated.playlistId !== playlist.id && !isRecomExist)\n    \"\n    (click)=\"showCreateForm(currentUser, recommendation)\"\n    class=\"spotify-btn recommendation-btn\"\n    >SAVE TO SPOTIFY</a\n  >\n  <div *ngIf=\"isRecomCreated as isRec\">\n    <a\n      *ngIf=\"isRec && isRecomExist\"\n      (click)=\"openPlaylist()\"\n      class=\"spotify-btn recommendation-btn is-open\"\n      >OPEN PLAYLIST\n    </a>\n  </div>\n\n  <div *ngIf=\"playlist\" [class]=\"(isModalActive ? 'is-active' : '') + ' modal'\">\n    <div class=\"modal-background\" (click)=\"isModalActive = false\"></div>\n    <div class=\"modal-content\">\n      <div [formGroup]=\"recomForm\" class=\"modal-container\">\n        <h3>Create a playlist from recommendation</h3>\n        <div class=\"field\">\n          <label for=\"name\">\n            Playlist <span class=\"required\">(required)</span>\n          </label>\n          <div class=\"control\">\n            <input\n              *ngIf=\"playlist\"\n              class=\"input is-small name-input\"\n              type=\"text\"\n              id=\"name\"\n              formControlName=\"name\"\n              autocomplete=\"off\"\n            />\n          </div>\n          <div class=\"errors\" *ngIf=\"isSubmited && FC.name.errors\">\n            <div *ngFor=\"let log of inputErrors.name\">\n              <span\n                *ngIf=\"FC.name.hasError(log.error)\"\n                class=\"tag is-danger is-light\"\n              >\n                {{ log.label }}\n              </span>\n            </div>\n          </div>\n        </div>\n        <div class=\"field\">\n          <label for=\"desc\">\n            Description <span class=\"optional\">(optional)</span>\n          </label>\n          <textarea\n            *ngIf=\"playlist\"\n            id=\"desc\"\n            class=\"textarea is-small desc-input\"\n            formControlName=\"description\"\n            rows=\"2\"\n          ></textarea>\n          <div class=\"errors\" *ngIf=\"isSubmited && FC.description.errors\">\n            <div *ngFor=\"let log of inputErrors.description\">\n              <span\n                *ngIf=\"FC.description.hasError(log.error)\"\n                class=\"tag is-danger is-light\"\n              >\n                {{ log.label }}\n              </span>\n            </div>\n          </div>\n        </div>\n        <div class=\"buttom-inputs\">\n          <div class=\"control dis-inl\">\n            <label class=\"radio\">\n              <input\n                type=\"radio\"\n                name=\"public\"\n                formControlName=\"public\"\n                [value]=\"true\"\n              />\n              Public\n            </label>\n            <label class=\"radio\">\n              <input\n                type=\"radio\"\n                name=\"public\"\n                formControlName=\"public\"\n                [value]=\"false\"\n              />\n              Private\n            </label>\n          </div>\n          <div class=\"buttons\">\n            <a\n              *ngIf=\"currentUser\"\n              (click)=\"saveToSpotify(currentUser.id)\"\n              class=\"spotify-btn\"\n            >\n              save to spotify\n            </a>\n            <a\n              (click)=\"isModalActive = false; isSubmited = false\"\n              class=\"spotify-btn cancel-btn\"\n              >cancel\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n    <button\n      class=\"modal-close is-large\"\n      aria-label=\"close\"\n      (click)=\"isModalActive = false\"\n    ></button>\n  </div>\n</ng-container>\n","const errors = {\n  name: [\n    { error: 'required', label: 'this field is required' },\n    { error: 'minlength', label: 'min length must 3 characters' },\n  ],\n  description: [{ error: 'minlength', label: 'min length must 25 characters' }],\n};\n\nexport { errors };\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.scss']\n})\nexport class SpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"spinner-container\">\n  <div class=\"spotify-loader animation-6\">\n    <div class=\"shape shape1\"></div>\n    <div class=\"shape shape2\"></div>\n    <div class=\"shape shape3\"></div>\n    <div class=\"shape shape4\"></div>\n  </div>\n</div>\n","import {\n  Component,\n  OnInit,\n  EventEmitter,\n  Output,\n  OnDestroy,\n} from '@angular/core';\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\nimport { Dispatch } from '@ngxs-labs/dispatch-decorator';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { SubSink } from 'subsink';\n\nimport { CurrentUserActionsType } from '../../store/current-user/actions.type';\nimport { MyPlaylistActionsType } from '../../store/my-playlist/actions.type';\nimport { FollowActionsType } from '../../store/follow/actions.type';\n\nimport { InternalActionsType } from '../../store/internal/actions.type';\nimport { InternalSelectors } from '../../store/internal/selectors';\nimport { InternalModel } from '../../store/internal/model';\nimport { AuthService } from '../../auth/auth.service';\n\n@Component({\n  selector: 'app-token-expiration-modal',\n  templateUrl: './token-expiration-modal.component.html',\n  styleUrls: ['./token-expiration-modal.component.scss'],\n})\nexport class TokenExpirationModalComponent implements OnInit, OnDestroy {\n  reqAuth$ = new SubSink();\n  faWarning = faExclamationTriangle;\n\n  @Output() onRefreshToken = new EventEmitter();\n  @Select(InternalSelectors.fetchInternal) static$: Observable<InternalModel>;\n\n  @Dispatch() setInternal = (params) =>\n    new InternalActionsType.setInternal(params);\n\n  @Dispatch() fetchCurrentUser = () =>\n    new CurrentUserActionsType.FetchCurrentUser();\n\n  @Dispatch() fetchMyPlaylist = (qry) =>\n    new MyPlaylistActionsType.FetchPlaylist(qry);\n\n  @Dispatch() fetchFollowArtists = () =>\n    new FollowActionsType.FetchFollowArtists();\n\n  constructor(private auth: AuthService, private store: Store) {}\n\n  ngOnInit(): void {}\n\n  emitPageAction() {\n    const { current_user } = this.store.snapshot();\n\n    this.reqAuth$.sink = this.auth.refreshToken().subscribe((res) => {\n      localStorage.removeItem('access_token');\n      localStorage.setItem('access_token', res.access_token);\n\n      this.setInternal({ tokenExpire: false });\n      this.onRefreshToken.emit();\n\n      if (!current_user) {\n        this.fetchCurrentUser();\n        this.fetchFollowArtists();\n        this.fetchMyPlaylist({\n          limit: 50,\n        });\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.reqAuth$.unsubscribe();\n  }\n}\n","<div\n  *ngIf=\"static$ | async as stat\"\n  [class]=\"stat.tokenExpire ? 'is-active modal' : 'modal'\"\n>\n  <div class=\"modal-background\"></div>\n  <div class=\"modal-content expire-notification\">\n    <div class=\"notification is-warning\">\n      <h2>\n        <strong> OOPS <fa-icon [icon]=\"faWarning\"></fa-icon></strong>\n      </h2>\n      <p>\n        looks like your API access token expired. click refresh button to\n        generate token\n      </p>\n\n      <br />\n      <a (click)=\"emitPageAction()\" class=\"button is-dark refresh-btn\"\n        >Refresh Token</a\n      >\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { faEllipsisV, faPlay } from '@fortawesome/free-solid-svg-icons';\n\nimport { TopTrackItemModel } from '../../store/top-tracks/model';\nimport { msToTime } from '../../services';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-track-item',\n  templateUrl: './track-item.component.html',\n  styleUrls: ['./track-item.component.scss'],\n})\nexport class TrackItemComponent implements OnInit {\n  faEllipsisV = faEllipsisV;\n  faPlay = faPlay;\n  msToTime = msToTime;\n\n  @Input() track: TopTrackItemModel;\n\n  constructor(private route: Router) {}\n\n  ngOnInit(): void {}\n\n  routeToAudioFeature(track) {\n    localStorage.removeItem('selected-audio-feature');\n    localStorage.setItem(\n      'selected-audio-feature',\n      JSON.stringify({\n        image: track.album.images[0].url,\n        name: track.name,\n        artists: track.artists,\n        description: track.album.name,\n        popularity: track.popularity,\n        id: track.id,\n        external_urls: track.external_urls,\n      })\n    );\n\n    this.route.navigate(['audio-feature', track.id]);\n  }\n}\n","<div class=\"track-item\">\n  <figure class=\"image\">\n    <img\n      defaultImage=\"assets/images/blur.jpg\"\n      [lazyLoad]=\"track.album.images[track.album.images.length - 1].url\"\n      alt=\"\"\n    />\n  </figure>\n  <div class=\"track-content\">\n    <a (click)=\"routeToAudioFeature(track)\">\n      <h3>{{ track.name }}</h3>\n    </a>\n    <label>\n      <span *ngFor=\"let artist of track.artists; let isLast = last\"\n        >{{ artist.name }}{{ isLast ? \"\" : \", \" }}\n      </span>\n    </label>\n  </div>\n  <div class=\"track-options\">\n    <div class=\"float-duration\">\n      {{ msToTime(track.duration_ms) }}\n    </div>\n    <div class=\"track-buttons\">\n      <a\n        [href]=\"track.external_urls.spotify\"\n        target=\"_blank\"\n        class=\"track-item--button\"\n      >\n        <fa-icon [icon]=\"faPlay\"></fa-icon>\n      </a>\n      <a (click)=\"routeToAudioFeature(track)\" class=\"track-item--button\">\n        <fa-icon [icon]=\"faEllipsisV\"></fa-icon>\n      </a>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError, finalize } from 'rxjs/operators';\nimport { AuthService } from '../auth/auth.service';\n// import { SubSink } from 'subsink';\nimport { interSect } from './utils';\n\nimport { Toast } from '../services';\n// import { Dispatch } from '@ngxs-labs/dispatch-decorator';\nimport { Store } from '@ngxs/store';\nimport { StateOverwrite } from 'ngxs-reset-plugin';\nimport { InternalState } from '../store/internal/state';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\n  toast = Toast();\n  // reqAuth$ = new SubSink();\n\n  constructor(\n    private auth: AuthService,\n    private store: Store,\n    private route: Router\n  ) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    // check if https://accounts.spotify.com/api/token request\n    const intersect = interSect(request.url, ['token']);\n    if (intersect.length > 0) {\n      return next.handle(request).pipe(\n        retry(1),\n        catchError((err) => {\n          this.route.navigate(['login']);\n          return throwError(err);\n        })\n      );\n    }\n\n    return next.handle(request).pipe(\n      // retry on failure\n      retry(1),\n      // Handle Error\n      catchError((err) => {\n        this.toast.fire({\n          icon: 'error',\n          title: 'Token Expire',\n          text: 'generate refresh token',\n        });\n\n        this.store.dispatch(\n          new StateOverwrite([InternalState, { tokenExpire: true }])\n        );\n        return throwError(err);\n      }),\n      finalize(() => {\n        // this.refreshToken();\n      })\n    );\n  }\n\n  // refreshToken() {\n  //   this.reqAuth$.sink = this.auth.refreshToken().subscribe((res) => {\n  //     localStorage.removeItem('access_token');\n  //     localStorage.setItem('access_token', res.access_token);\n  //   });\n  // }\n\n  // ngOnDestroy() {\n  //   this.reqAuth$.unsubscribe();\n  // }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { interSect } from './utils';\n\n@Injectable()\nexport class HttpHeadersInterceptor implements HttpInterceptor {\n  constructor() {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    // console.log('request', request);\n\n    const intersect = interSect(request.url, ['token']);\n    if (intersect.length > 0) return next.handle(request);\n\n    const customReq = request.clone({\n      setHeaders: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${localStorage.getItem('access_token')}`,\n      },\n    });\n    return next.handle(customReq);\n  }\n}\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ErrorHandlerInterceptor } from './error-handler.interceptor';\nimport { HttpHeadersInterceptor } from './http-headers.interceptor';\n\nexport const HttpInterceptorProviders = [\n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: ErrorHandlerInterceptor,\n    multi: true,\n  },\n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: HttpHeadersInterceptor,\n    multi: true,\n  },\n];\n","import { intersection } from 'lodash';\n\nexport const interSect = (reqUrl: string, splitUrl: Array<string>) => {\n  const urlstr = reqUrl.split('?')[0].split('/').filter(Boolean);\n  return intersection(urlstr, splitUrl);\n};\n","import { Component, OnInit } from '@angular/core';\n\nimport { Select } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { Dispatch } from '@ngxs-labs/dispatch-decorator';\n\nimport { RelatedArtistActionsType } from '../../store/related-artists/actions.type';\nimport { RelatedArtistsSelectors } from '../../store/related-artists/selectors';\n// import { TopArtistsModel } from '../../store/top-artists/model';\nimport { RelatedArtistsModel } from '../../store/related-artists/model';\n\nimport { ArtistPreviewActionsType } from '../../store/artist-preview/actions.type';\nimport { ArtistPreviewSelectors } from '../../store/artist-preview/selectors';\nimport { ArtistPreviewModel } from '../../store/artist-preview/model';\n\nimport { ArtistTopTracksActionsType } from '../../store/artist-top-tracks/actions.type';\nimport { ArtistTopTracksSelectors } from '../../store/artist-top-tracks/selectors';\nimport { ArtistTopTracksModel } from '../../store/artist-top-tracks/model';\n\nimport { FollowSelectors } from '../../store/follow/selectors';\nimport { FollowArtistModel } from '../../store/follow/artists-model';\n\nimport { Router, ActivatedRoute } from '@angular/router';\n// import { FollowService } from '../../services/follow/follow.service';\n\n@Component({\n  selector: 'app-artist-preview',\n  templateUrl: './artist-preview.component.html',\n  styleUrls: ['./artist-preview.component.scss'],\n})\nexport class ArtistPreviewComponent implements OnInit {\n  constructor(private route: Router, private activeRoute: ActivatedRoute) {\n    this.route.routeReuseStrategy.shouldReuseRoute = () => false;\n  }\n\n  @Dispatch() fetchArtistPreview = (artistId: string) =>\n    new ArtistPreviewActionsType.FetchArtistPreview(artistId);\n\n  @Dispatch() fetchRelatedArtists = (artistId: string) =>\n    new RelatedArtistActionsType.FetchRelatedArtist(artistId);\n\n  @Dispatch() fetchArtistTopTracks = (artistId: string) =>\n    new ArtistTopTracksActionsType.FetchArtistTopTracks(artistId);\n\n  @Select(ArtistPreviewSelectors.fetchArtistPreview)\n  artistPreview$: Observable<ArtistPreviewModel>;\n\n  @Select(RelatedArtistsSelectors.fetchTopArtists)\n  relatedArtists$: Observable<RelatedArtistsModel>;\n\n  @Select(ArtistTopTracksSelectors.fetchTopTracks)\n  topTracks$: Observable<ArtistTopTracksModel>;\n\n  @Select(FollowSelectors.fetchFollowArtists)\n  followArtist$: Observable<FollowArtistModel>;\n\n  ngOnInit(): void {\n    const artistId = this.activeRoute.snapshot.paramMap.get('artistId');\n    this.fetchArtistPreview(artistId);\n    this.fetchRelatedArtists(artistId);\n    this.fetchArtistTopTracks(artistId);\n  }\n\n  withComma(n) {\n    return n.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  previewArtistCallback(artistId) {\n    this.route.navigate(['artist', artistId]);\n    console.log(artistId);\n  }\n}\n","<ng-container>\n  <div class=\"head-body\">\n    <div class=\"content-title\">\n      <h2>ARTIST INFORMATION</h2>\n      <p>List Information Of Artist - follower, genres etc.</p>\n    </div>\n    <div class=\"content-feature\"></div>\n  </div>\n\n  <div class=\"content-body\">\n    <div class=\"artist-feature\">\n      <figure class=\"image\">\n        <img [src]=\"((artistPreview$ | async)?.images)[0].url\" alt=\"\" />\n      </figure>\n      <div class=\"artist-feature--info\">\n        <h2 class=\"title\">{{ (artistPreview$ | async)?.name }}</h2>\n        <div class=\"flex-item\">\n          <label><strong>Followers</strong></label>\n          <label *ngIf=\"artistPreview$ | async\">{{\n            withComma((artistPreview$ | async)?.followers.total)\n          }}</label>\n        </div>\n        <div class=\"flex-item\">\n          <label><strong>Popularity</strong></label>\n          <label>{{ (artistPreview$ | async)?.popularity }}%</label>\n        </div>\n        <div class=\"flex-item\">\n          <label\n            ><strong>Genres</strong>\n            <app-follow-btn\n              *ngIf=\"(artistPreview$ | async) && (followArtist$ | async)\"\n              [artist]=\"artistPreview$ | async\"\n              [following]=\"(followArtist$ | async)?.artists.items\"\n            ></app-follow-btn>\n          </label>\n          <label>\n            <span\n              *ngFor=\"\n                let genre of (artistPreview$ | async)?.genres;\n                let isLast = last\n              \"\n              class=\"gen\"\n            >\n              {{ genre }} </span\n            >&nbsp;\n          </label>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"divider\">\n      <h2>Top Tracks</h2>\n    </div>\n    <br />\n    <div class=\"topTracks-container\">\n      <!-- <app-track-item\n        [track]=\"item\"\n        *ngFor=\"let item of (topTracks$ | async)?.tracks\"\n        class=\"app-track-item\"\n      ></app-track-item> -->\n      <app-playlist-track\n        *ngIf=\"topTracks$\"\n        [tracks]=\"(topTracks$ | async)?.tracks\"\n        [default]=\"true\"\n      >\n      </app-playlist-track>\n    </div>\n\n    <div class=\"divider\">\n      <h2>Related Artists</h2>\n    </div>\n    <br />\n    <div class=\"related-artists\">\n      <div\n        class=\"related-artists--item\"\n        *ngFor=\"let artist of (relatedArtists$ | async)?.artists\"\n      >\n        <figure class=\"image\">\n          <img [src]=\"artist.images[0].url\" alt=\"\" />\n        </figure>\n        <div class=\"related-artist--content\">\n          <div class=\"content\">\n            <h4 (click)=\"previewArtistCallback(artist.id)\">\n              {{ artist.name }}\n            </h4>\n            <p>\n              Popularity : <span>{{ artist.popularity }}%</span>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <app-token-expiration-modal\n    (onRefreshToken)=\"ngOnInit()\"\n  ></app-token-expiration-modal>\n\n  <app-spinner *ngIf=\"!(relatedArtists$ | async)\"></app-spinner>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Select } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { Dispatch } from '@ngxs-labs/dispatch-decorator';\n\nimport { AudioFeatureActionsType } from '../../store/audio-feature/actions.type';\nimport { AudioFeatureSelectors } from '../../store/audio-feature/selectors';\nimport {\n  AudioFeatureModel,\n  SelectedTrackModel,\n} from '../../store/audio-feature/model';\n\nimport { msToTime } from '../../services';\n\n@Component({\n  selector: 'app-audio-feature',\n  templateUrl: './audio-feature.component.html',\n  styleUrls: ['./audio-feature.component.scss'],\n})\nexport class AudioFeatureComponent implements OnInit {\n  msToTime = msToTime;\n\n  @Dispatch() fetchAudioFeature = (track: SelectedTrackModel) =>\n    new AudioFeatureActionsType.FetchAudioFeature(track);\n\n  @Select(AudioFeatureSelectors.fetchAudioFeature) track$: Observable<\n    AudioFeatureModel\n  >;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    const track = JSON.parse(localStorage.getItem('selected-audio-feature'));\n    this.fetchAudioFeature(track);\n\n    // this.track$.subscribe((res: AudioFeatureModel) => {\n    //   console.log('res', res.image);\n    // });\n  }\n\n  pitchClass(key: any) {\n    switch (key) {\n      case 1:\n        return 'C♯, D♭ (also B♯)';\n      case 2:\n        return 'D (also C𝄪, E♭♭)';\n      case 3:\n        return 'D♯, E♭ (also F♭♭)';\n      case 4:\n        return 'E (also D𝄪, F♭)';\n      case 5:\n        return 'F (also E♯, G♭♭)';\n      case 6:\n        return 'F♯, G♭ (also E𝄪)';\n      case 7:\n        return 'G (also F𝄪, A♭♭)';\n      case 8:\n        return 'G♯, A♭';\n      case 9:\n        return 'A (also G𝄪, B♭♭)';\n      case 10 || 't' || 'A':\n        return 'A♯, B♭ (also C♭♭)';\n      case 11 || 'e' || 'B':\n        return 'B (also A𝄪, C♭)';\n      default:\n        return 'C (also B♯, D♭♭)';\n    }\n  }\n\n  findModality(mode) {\n    return mode === 1 ? 'Major' : 'minor';\n  }\n\n  findBeats(f) {\n    if (f) {\n      let min = parseFloat((f.duration_ms / 1000 / 60).toFixed(1));\n      let temp = parseInt(f.tempo.toFixed());\n      return Math.floor(min * temp);\n    }\n  }\n\n  findBars(f) {\n    return Math.floor(this.findBeats(f) / f?.time_signature);\n  }\n}\n","<ng-container>\n  <div class=\"head-body\">\n    <div class=\"content-title\">\n      <h2>Audio Feature</h2>\n      <p>Get Audio Features for Several Tracks</p>\n    </div>\n    <div class=\"content-feature\"></div>\n  </div>\n  <br /><br />\n  <div class=\"content-body\">\n    <div class=\"audio-feature\">\n      <!-- <figure class=\"image\"> -->\n      <!-- <img\n        [lazyLoad]=\"(track$ | async)?.image\"\n        defaultImage=\"assets/images/blur.jpg\"\n        alt=\"\"\n      /> -->\n      <app-figure-image\n        [image]=\"{ url: (track$ | async)?.image }\"\n      ></app-figure-image>\n      <!-- </figure> -->\n      <div class=\"audio-feature--info\">\n        <h2 class=\"title\">{{ (track$ | async)?.name }}</h2>\n        <p class=\"artists\">\n          <span\n            *ngFor=\"let artist of (track$ | async)?.artists; let isLast = last\"\n          >\n            {{ artist.name }}{{ isLast ? \"\" : \", \" }}\n          </span>\n        </p>\n        <p class=\"desc\">{{ (track$ | async)?.description }}</p>\n        <a\n          [href]=\"(track$ | async)?.external_urls.spotify\"\n          target=\"_blank\"\n          class=\"spotify-btn\"\n          >PLAY ON SPOTIFY</a\n        >\n      </div>\n    </div>\n    <div class=\"key-feature\">\n      <div class=\"key-feature--item\">\n        <div class=\"key-feature--floater\">\n          <label class=\"key\">{{\n            msToTime((track$ | async)?.feature.duration_ms)\n          }}</label>\n          <label class=\"desc\">Duration</label>\n        </div>\n      </div>\n      <div class=\"key-feature--item\">\n        <div class=\"key-feature--floater\">\n          <label class=\"key key-note\">{{\n            pitchClass((track$ | async)?.feature.key)\n          }}</label>\n          <label class=\"desc\">Key</label>\n        </div>\n      </div>\n      <div class=\"key-feature--item\">\n        <div class=\"key-feature--floater\">\n          <label class=\"key\">{{\n            findModality((track$ | async)?.feature.mode)\n          }}</label>\n          <label class=\"desc\">Modality</label>\n        </div>\n      </div>\n      <div class=\"key-feature--item\">\n        <div class=\"key-feature--floater\">\n          <label class=\"key\">{{\n            (track$ | async)?.feature.time_signature\n          }}</label>\n          <label class=\"desc\">Time Signature</label>\n        </div>\n      </div>\n      <div class=\"key-feature--item\">\n        <div class=\"key-feature--floater\">\n          <label class=\"key\">{{\n            (track$ | async)?.feature.tempo.toFixed()\n          }}</label>\n          <label class=\"desc\">Tempo(BPM)</label>\n        </div>\n      </div>\n      <div class=\"key-feature--item\">\n        <div class=\"key-feature--floater\">\n          <label class=\"key\">{{ (track$ | async)?.popularity }}%</label>\n          <label class=\"desc\">Popularity</label>\n        </div>\n      </div>\n      <div class=\"key-feature--item\">\n        <div class=\"key-feature--floater\">\n          <label class=\"key\">{{ findBars((track$ | async)?.feature) }}</label>\n          <label class=\"desc\">Bars</label>\n        </div>\n      </div>\n      <div class=\"key-feature--item\">\n        <div class=\"key-feature--floater\">\n          <label class=\"key\" *ngIf=\"track$\">{{\n            findBeats((track$ | async)?.feature)\n          }}</label>\n          <label class=\"desc\">Beats</label>\n        </div>\n      </div>\n      <div class=\"key-feature--item\">\n        <div class=\"key-feature--floater\">\n          <label class=\"key\">--</label>\n          <label class=\"desc\">Sections</label>\n        </div>\n      </div>\n      <div class=\"key-feature--item\">\n        <div class=\"key-feature--floater\">\n          <label class=\"key\">--</label>\n          <label class=\"desc\">Segments</label>\n        </div>\n      </div>\n    </div>\n  </div>\n  <app-token-expiration-modal\n    (onRefreshToken)=\"ngOnInit()\"\n  ></app-token-expiration-modal>\n\n  <app-spinner *ngIf=\"!(track$ | async)\"></app-spinner>\n</ng-container>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { SubSink } from 'subsink';\n\n@Component({\n  selector: 'app-callback',\n  templateUrl: './callback.component.html',\n  styleUrls: ['./callback.component.scss'],\n})\nexport class CallbackComponent implements OnInit, OnDestroy {\n  request$ = new SubSink();\n\n  constructor(\n    public auth: AuthService,\n    public activeRoute: ActivatedRoute,\n    public router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.auth.setCallbackTimes();\n\n    const storeState = localStorage.getItem('state');\n    this.activeRoute.queryParams.pipe().subscribe((res) => {\n      if (res.state === null || res.state !== storeState) {\n        console.log('state_mismatch');\n        this.router.navigate(['login']);\n      } else {\n        localStorage.removeItem('state');\n        this.request$.sink = this.auth.generateToken(res.code).subscribe(\n          (res) => {\n            localStorage.setItem('access_token', res.access_token);\n            localStorage.setItem('refresh_token', res.refresh_token);\n            localStorage.setItem('scope', res.scope);\n            localStorage.setItem('expires_in', res.expires_in);\n            localStorage.setItem('token_type', res.token_type);\n            if (this.auth.isAuthenticated()) {\n              // this.router.navigate(['/']);\n              this.initializerStates();\n            }\n          },\n          (err) => {\n            console.log('generateToken-error', err);\n          }\n        );\n      }\n    });\n  }\n\n  initializerStates() {\n    const times = localStorage.getItem('callback_times');\n    if (times !== null && parseInt(times) > 3) {\n      localStorage.removeItem('access_token');\n      this.router.navigate(['/login']);\n    }\n\n    this.router.navigate(['/']);\n  }\n\n  ngOnDestroy(): void {\n    this.request$.unsubscribe();\n  }\n}\n","<div class=\"login-container\">\n  <div class=\"center-login\">\n    <h2>Authenticating Please Wait...</h2>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../auth/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  constructor(private auth: AuthService) {}\n\n  ngOnInit(): void {}\n\n  authUser() {\n    this.auth.authenticateUser();\n  }\n}\n","<div class=\"login-container\">\n  <div class=\"center-login\">\n    <h2>Authenticate Spotify Account</h2>\n    <button (click)=\"authUser()\" class=\"spotify-btn\">Authenticate User</button>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// import { MainComponent } from './main.component';\n// import { IndexComponent } from '../index/index.component';\nimport { TopTracksComponent } from '../top-tracks/top-tracks.component';\nimport { AudioFeatureComponent } from '../audio-feature/audio-feature.component';\nimport { TopArtistsComponent } from '../top-artists/top-artists.component';\nimport { ArtistPreviewComponent } from '../artist-preview/artist-preview.component';\nimport { MyPlaylistComponent } from '../my-playlist/my-playlist.component';\nimport { PlaylistPreviewComponent } from '../playlist-preview/playlist-preview.component';\nimport { RecommendationComponent } from '../recommendation/recommendation.component';\n\nconst routes: Routes = [\n  // { path: '', component: TopTracksComponent },\n  { path: '', component: MyPlaylistComponent },\n  { path: 'my-playlist/:playlistId', component: PlaylistPreviewComponent },\n  { path: 'top-tracks', component: TopTracksComponent },\n  { path: 'audio-feature/:trackId', component: AudioFeatureComponent },\n  { path: 'top-artists', component: TopArtistsComponent },\n  { path: 'artist/:artistId', component: ArtistPreviewComponent },\n  {\n    path: 'my-playlist/:playlistId/recommendation',\n    component: RecommendationComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MainRoutingModule {}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\n\nimport { Select } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { Dispatch } from '@ngxs-labs/dispatch-decorator';\nimport {\n  faMicrophoneAlt,\n  faMusic,\n  faPlay,\n} from '@fortawesome/free-solid-svg-icons';\nimport { SubSink } from 'subsink';\n\nimport { CurrentUserActionsType } from '../../store/current-user/actions.type';\nimport { CurrentUserSelectors } from '../../store/current-user/selectors';\nimport { CurrentUserModel } from '../../store/current-user/model';\n\nimport { MyPlaylistActionsType } from '../../store/my-playlist/actions.type';\nimport { MyPlaylistSelectors } from '../../store/my-playlist/selectors';\nimport { SpotifyModel } from '../../store/index';\n\nimport { FollowActionsType } from '../../store/follow/actions.type';\nimport { FollowSelectors } from '../../store/follow/selectors';\nimport { FollowArtistModel } from '../../store/follow/artists-model';\n\nimport { InternalActionsType } from '../../store/internal/actions.type';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss'],\n})\nexport class MainComponent implements OnInit, OnDestroy {\n  faMicrophoneAlt = faMicrophoneAlt;\n  faMusic = faMusic;\n  faPlay = faPlay;\n\n  userReq$ = new SubSink();\n\n  @Dispatch() fetchCurrentUser = () =>\n    new CurrentUserActionsType.FetchCurrentUser();\n\n  @Dispatch() fetchMyPlaylist = (qry) =>\n    new MyPlaylistActionsType.FetchPlaylist(qry);\n\n  @Dispatch() fetchFollowArtists = () =>\n    new FollowActionsType.FetchFollowArtists();\n\n  @Dispatch() setInternal = (params) =>\n    new InternalActionsType.setInternal(params);\n\n  @Select(CurrentUserSelectors.fetchCurrentUser) user$: Observable<\n    CurrentUserModel\n  >;\n\n  @Select(MyPlaylistSelectors.fetchPlaylist) playlist$: Observable<\n    SpotifyModel\n  >;\n\n  @Select(FollowSelectors.fetchFollowArtists) artists$: Observable<\n    FollowArtistModel\n  >;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    localStorage.removeItem('callback_times');\n    this.fetchCurrentUser();\n\n    this.userReq$.sink = this.user$.subscribe((res) => {\n      if (res) {\n        this.setInternal({ tokenExpire: false });\n        this.fetchFollowArtists();\n        this.fetchMyPlaylist({\n          limit: 50,\n        });\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.userReq$.unsubscribe();\n  }\n}\n","<div class=\"main-container\">\n  <div class=\"aside-content\">\n    <div class=\"fixed-container\">\n      <div class=\"profile-section\">\n        <figure class=\"image\">\n          <img\n            *ngIf=\"(user$ | async)?.images as img\"\n            defaultImage=\"assets/images/blur.jpg\"\n            [lazyLoad]=\"img[0].url\"\n            alt=\"\"\n            class=\"is-rounded\"\n          />\n          <img\n            *ngIf=\"!(user$ | async)\"\n            lazyLoad=\"assets/images/spotify-240.png\"\n            alt=\"\"\n          />\n        </figure>\n        <div class=\"profile-label\">\n          <h2>{{ (user$ | async)?.display_name }}</h2>\n        </div>\n        <div class=\"profile-numbers\">\n          <div class=\"item-count\">\n            <span>Followers</span>\n            <span\n              class=\"count\"\n              *ngIf=\"(user$ | async)?.followers.total as folTotal\"\n              >{{ folTotal < 10 ? \"0\" + folTotal : folTotal }}</span\n            >\n            <span *ngIf=\"!(user$ | async)\">00</span>\n          </div>\n          <div class=\"item-count\">\n            <span>Following</span>\n            <span\n              class=\"count\"\n              *ngIf=\"(artists$ | async)?.artists.total as artTotal\"\n              >{{ artTotal < 0 ? \"0\" + artTotal : artTotal }}</span\n            ><span *ngIf=\"!(artists$ | async)\">00</span>\n          </div>\n          <div class=\"item-count\">\n            <span>Playlist</span>\n            <span\n              class=\"count\"\n              *ngIf=\"(playlist$ | async)?.total as playTotal\"\n              >{{ playTotal < 10 ? \"0\" + playTotal : playTotal }}</span\n            ><span *ngIf=\"!(playlist$ | async)\">00</span>\n          </div>\n        </div>\n      </div>\n      <div class=\"nav-section\">\n        <div\n          [routerLink]=\"['/']\"\n          [routerLinkActiveOptions]=\"{ exact: true }\"\n          routerLinkActive=\"is-active\"\n          class=\"list-item\"\n        >\n          <fa-icon [icon]=\"faPlay\"></fa-icon>\n          <span>MY PLAYLIST</span>\n        </div>\n        <div\n          [routerLink]=\"['/top-tracks']\"\n          routerLinkActive=\"is-active\"\n          [routerLinkActiveOptions]=\"{ exact: true }\"\n          class=\"list-item\"\n        >\n          <fa-icon [icon]=\"faMusic\"></fa-icon>\n          <span>TOP TRACKS</span>\n        </div>\n        <div\n          [routerLink]=\"['/top-artists']\"\n          [routerLinkActiveOptions]=\"{ exact: true }\"\n          routerLinkActive=\"is-active\"\n          class=\"list-item\"\n        >\n          <fa-icon [icon]=\"faMicrophoneAlt\"></fa-icon>\n          <span>TOP ARTIST</span>\n        </div>\n      </div>\n      <app-built-with></app-built-with>\n    </div>\n  </div>\n  <div class=\"body-content\">\n    <div class=\"floater-body--content\"></div>\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import {\n  NgModule,\n  NO_ERRORS_SCHEMA,\n  CUSTOM_ELEMENTS_SCHEMA,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { MainRoutingModule } from './main-routing.module';\nimport { SharedModule } from '../../shared.module';\n\nimport { TopTracksComponent } from '../top-tracks/top-tracks.component';\nimport { AudioFeatureComponent } from '../audio-feature/audio-feature.component';\nimport { TopArtistsComponent } from '../top-artists/top-artists.component';\nimport { ArtistPreviewComponent } from '../artist-preview/artist-preview.component';\nimport { MyPlaylistComponent } from '../my-playlist/my-playlist.component';\nimport { PlaylistPreviewComponent } from '../playlist-preview/playlist-preview.component';\nimport { RecommendationComponent } from '../recommendation/recommendation.component';\n\n// import { LazyLoadImageModule } from 'ng-lazyload-image';\n\n@NgModule({\n  declarations: [\n    TopTracksComponent,\n    AudioFeatureComponent,\n    TopArtistsComponent,\n    ArtistPreviewComponent,\n    MyPlaylistComponent,\n    PlaylistPreviewComponent,\n    RecommendationComponent,\n  ],\n  imports: [CommonModule, RouterModule, MainRoutingModule, SharedModule],\n  schemas: [NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class MainModule {}\n","import { Component, OnInit } from '@angular/core';\n\nimport { Select } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { Dispatch } from '@ngxs-labs/dispatch-decorator';\n\nimport { MyPlaylistActionsType } from '../../store/my-playlist/actions.type';\nimport { MyPlaylistSelectors } from '../../store/my-playlist/selectors';\nimport { SpotifyModel } from '../../store/';\n\n@Component({\n  selector: 'app-my-playlist',\n  templateUrl: './my-playlist.component.html',\n  styleUrls: ['./my-playlist.component.scss'],\n})\nexport class MyPlaylistComponent implements OnInit {\n  @Dispatch() fetchMyPlaylist = (qry = null) =>\n    new MyPlaylistActionsType.FetchPlaylist(qry);\n\n  @Select(MyPlaylistSelectors.fetchPlaylist) playlist$: Observable<\n    SpotifyModel\n  >;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.fetchMyPlaylist({\n      limit: 50,\n    });\n  }\n}\n","<ng-container>\n  <div class=\"head-body\">\n    <div class=\"content-title\">\n      <h2>MY PLAYLIST</h2>\n      <p>List of Active Playlists</p>\n    </div>\n    <div class=\"content-feature\"></div>\n  </div>\n\n  <div class=\"content-body\">\n    <app-playlist-item\n      [playlists]=\"(playlist$ | async)?.items\"\n    ></app-playlist-item>\n  </div>\n\n  <app-token-expiration-modal\n    (onRefreshToken)=\"ngOnInit()\"\n  ></app-token-expiration-modal>\n\n  <app-spinner *ngIf=\"!(playlist$ | async)\"></app-spinner>\n</ng-container>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Dispatch } from '@ngxs-labs/dispatch-decorator';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { StateReset } from 'ngxs-reset-plugin';\n\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { SubSink } from 'subsink';\n\nimport { PlaylistPreviewActionsType } from '../../store/playlist-preview/actions.type';\nimport { PlaylistPreviewSelectors } from '../../store/playlist-preview/selectors';\nimport { PlaylistPreviewModel } from '../../store/playlist-preview/model';\n// import { TopTrackItemModel } from '../../store/top-tracks/model';\nimport { MyPlaylistSelectors } from '../../store/my-playlist/selectors';\nimport { SpotifyModel } from '../../store';\n\nimport { CurrentUserSelectors } from '../../store/current-user/selectors';\nimport { CurrentUserModel } from '../../store/current-user/model';\n\nimport { RecommendationState } from '../../store/recommendation/state';\n\n@Component({\n  selector: 'app-playlist-preview',\n  templateUrl: './playlist-preview.component.html',\n  styleUrls: ['./playlist-preview.component.scss'],\n})\nexport class PlaylistPreviewComponent implements OnInit, OnDestroy {\n  @Dispatch() playlistPreview = (playlistId: string) =>\n    new PlaylistPreviewActionsType.FetchPlaylistPreview(playlistId);\n\n  @Select(PlaylistPreviewSelectors.fetchPlaylistPreview)\n  playlist$: Observable<PlaylistPreviewModel>;\n\n  @Select(MyPlaylistSelectors.fetchPlaylist)\n  myPlaylist$: Observable<SpotifyModel>;\n\n  @Select(CurrentUserSelectors.fetchCurrentUser)\n  currentUser$: Observable<CurrentUserModel>;\n\n  req$ = new SubSink();\n  config: any;\n  isEditBtn = false;\n\n  constructor(\n    private activeRoute: ActivatedRoute,\n    private route: Router,\n    private store: Store\n  ) {}\n\n  ngOnInit(): void {\n    const playlistId = this.activeRoute.snapshot.params.playlistId;\n    this.playlistPreview(playlistId);\n\n    this.req$.sink = this.playlist$.subscribe(\n      (playlist: PlaylistPreviewModel) => {\n        if (playlist) {\n          this.config = {\n            itemsPerPage: 20,\n            currentPage: 1,\n            totalItems: playlist.tracks.items.length,\n          };\n        }\n      }\n    );\n\n    this.store.dispatch(new StateReset(RecommendationState));\n  }\n\n  pageChanged(event) {\n    this.config.currentPage = event;\n  }\n\n  closeEditButton(e) {\n    this.isEditBtn = false;\n  }\n\n  getRecommendation(playlistId) {\n    localStorage.removeItem('recommendation');\n    this.route.navigate(['my-playlist', playlistId, 'recommendation']);\n  }\n\n  ngOnDestroy() {\n    this.req$.unsubscribe();\n  }\n}\n","<ng-container>\n  <div class=\"head-body\">\n    <div class=\"content-title\">\n      <h2>PLAYLIST INFORMATION</h2>\n      <p>Playlist Information - tracks, feature etc.</p>\n    </div>\n    <div class=\"content-feature\"></div>\n  </div>\n  <br />\n  <div class=\"content-body\">\n    <div class=\"track-preview--header\" *ngIf=\"playlist$ | async as play\">\n      <figure class=\"image\">\n        <img\n          [lazyLoad]=\"\n            play.images.length > 0\n              ? play.images[0].url\n              : 'assets/images/spotify.png'\n          \"\n          alt=\"\"\n        />\n        <div\n          class=\"edit-button--wrapper\"\n          *ngIf=\"(playlist$ | async).owner.id === (currentUser$ | async).id\"\n        >\n          <app-edit-playlist-btn\n            *ngIf=\"playlist$ | async\"\n            [playlist]=\"playlist$ | async\"\n          ></app-edit-playlist-btn>\n        </div>\n      </figure>\n      <div class=\"preview-header--content\">\n        <app-follow-btn-playlist\n          *ngIf=\"\n            (playlist$ | async) &&\n            (myPlaylist$ | async) &&\n            (currentUser$ | async)\n          \"\n          [playlist]=\"playlist$ | async\"\n          [playlistCollection]=\"(myPlaylist$ | async)?.items\"\n          [currentUser]=\"currentUser$ | async\"\n          [isMyPlaylist]=\"\n            (playlist$ | async).owner.id === (currentUser$ | async)?.id\n              ? true\n              : false\n          \"\n        ></app-follow-btn-playlist>\n        <h3>{{ (playlist$ | async).name }}</h3>\n        <p [innerHTML]=\"(playlist$ | async).description\"></p>\n        <a\n          *ngIf=\"(playlist$ | async).id as playlistId\"\n          (click)=\"getRecommendation(playlistId)\"\n          class=\"spotify-btn\"\n          >get recommendation\n        </a>\n      </div>\n    </div>\n    <div class=\"divider\">\n      <h2 *ngIf=\"playlist$ | async\">\n        {{ (playlist$ | async).tracks.items.length }} Tracks\n      </h2>\n    </div>\n    <br />\n    <!-- <div class=\"playlist-tracks\" *ngIf=\"isGood && config && preview\">\n      <div\n        class=\"playlist-tracks--item\"\n        *ngFor=\"let item of preview.tracks.items | paginate: config\"\n      >\n        <figure class=\"image\">\n          <img\n            *ngIf=\"item.track.album.images as images$\"\n            [src]=\"images$[images$.length - 1].url\"\n            alt=\"\"\n          />\n        </figure>\n        <div class=\"track-item--content\">\n          <h4>{{ item.track.name }}</h4>\n          <p>\n            <span *ngFor=\"let artist of item.track.artists; let isLast = last\">\n              {{ artist.name }}{{ isLast ? \"\" : \", \" }}\n            </span>\n            - <span>{{ item.track.album.name }}</span>\n          </p>\n        </div>\n      </div>\n    </div> -->\n    <app-playlist-track\n      *ngIf=\"playlist$ | async as play\"\n      [tracks]=\"play.tracks\"\n      [config]=\"config\"\n      [isMyPlaylist]=\"\n        play.owner.id === (currentUser$ | async)?.id ? true : false\n      \"\n      [playlistId]=\"play.id\"\n    >\n    </app-playlist-track>\n\n    <pagination-controls\n      *ngIf=\"config && config.totalItems > 20 ? true : false\"\n      [maxSize]=\"5\"\n      class=\"custom-pagination\"\n      (pageChange)=\"pageChanged($event)\"\n    ></pagination-controls>\n  </div>\n\n  <app-token-expiration-modal\n    (onRefreshToken)=\"ngOnInit()\"\n  ></app-token-expiration-modal>\n\n  <app-spinner *ngIf=\"!(playlist$ | async)\"></app-spinner>\n</ng-container>\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Dispatch } from '@ngxs-labs/dispatch-decorator';\nimport { Select } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { SubSink } from 'subsink';\nimport { Toast } from '../../services/index';\n\n// import { MyPlaylistService } from '../../services/my-playlist/my-playlist.service';\n\nimport { PlaylistPreviewActionsType } from '../../store/playlist-preview/actions.type';\nimport { PlaylistPreviewSelectors } from '../../store/playlist-preview/selectors';\nimport { PlaylistPreviewModel } from '../../store/playlist-preview/model';\n\nimport { RecommendationActionsType } from '../../store/recommendation/actions.type';\nimport { RecommendationSelectors } from '../../store/recommendation/selectors';\nimport { RecommendationModel } from '../../store/recommendation/model';\nimport { QueryParams } from '../../store/index';\n\nimport { CurrentUserSelectors } from '../../store/current-user/selectors';\nimport { CurrentUserModel } from '../../store/current-user/model';\n\n@Component({\n  selector: 'app-recommendation',\n  templateUrl: './recommendation.component.html',\n  styleUrls: ['./recommendation.component.scss'],\n})\nexport class RecommendationComponent implements OnInit, OnDestroy {\n  @Dispatch() playlistPreview = (playlistId: string) =>\n    new PlaylistPreviewActionsType.FetchPlaylistPreview(playlistId);\n\n  @Dispatch() recommendation = (params: QueryParams) =>\n    new RecommendationActionsType.FetchRecommendation(params);\n\n  @Select(PlaylistPreviewSelectors.fetchPlaylistPreview)\n  playlist$: Observable<PlaylistPreviewModel>;\n\n  @Select(RecommendationSelectors.fetchRecommendation)\n  recommendation$: Observable<RecommendationModel>;\n\n  @Select(CurrentUserSelectors.fetchCurrentUser)\n  currentUser$: Observable<CurrentUserModel>;\n\n  req$ = new SubSink();\n  toast = Toast();\n  playlist: PlaylistPreviewModel;\n\n  constructor(\n    private activeRoute: ActivatedRoute // private http: MyPlaylistService\n  ) {}\n  ngOnInit(): void {\n    const playlistId = this.activeRoute.snapshot.params.playlistId;\n    this.playlistPreview(playlistId);\n\n    this.req$.sink = this.playlist$.subscribe(\n      (res) => {\n        if (res) {\n          this.playlist = res;\n          const trackIds = res.tracks.items.slice(0, 5).map((i) => i.track.id);\n\n          this.getRecommendation(trackIds);\n        }\n      },\n      (error) => {\n        console.log('playlist is null');\n        this.toast.fire({ icon: 'error', title: 'Playlist Preview is null' });\n      }\n    );\n  }\n\n  getRecommendation(trackIds: Array<string>) {\n    this.recommendation({\n      limit: 20,\n      seed_tracks: trackIds.toString(),\n    });\n  }\n\n  ngOnDestroy() {\n    this.req$.unsubscribe();\n  }\n}\n","<ng-container>\n  <div class=\"head-body\">\n    <div class=\"content-title\">\n      <!-- <div *ngIf=\"currentUser$ | async as user\">\n        <a\n          *ngIf=\"recommendation$ | async as recom\"\n          (click)=\"showCreateForm(user, recom)\"\n          class=\"spotify-btn recommendation-btn\"\n          >SAVE TO SPOTIFY</a\n        >\n      </div> -->\n      <app-recommendation-form\n        *ngIf=\"playlist && (recommendation$ | async) && (currentUser$ | async)\"\n        [playlist]=\"playlist\"\n        [currentUser]=\"currentUser$ | async\"\n        [recommendation]=\"recommendation$ | async\"\n      >\n      </app-recommendation-form>\n      <h2>TRACKS RECOMMENDATION</h2>\n      <p *ngIf=\"playlist$ | async\">\n        Recommended Tracks Based On {{ (playlist$ | async).name }}\n      </p>\n    </div>\n    <div class=\"content-feature\"></div>\n  </div>\n  <br />\n  <div class=\"content-body\">\n    <div class=\"recommendation-body\">\n      <app-playlist-track\n        *ngIf=\"recommendation$ | async\"\n        [tracks]=\"(recommendation$ | async).tracks\"\n        [default]=\"true\"\n      >\n      </app-playlist-track>\n    </div>\n  </div>\n\n  <app-token-expiration-modal\n    (onRefreshToken)=\"ngOnInit()\"\n  ></app-token-expiration-modal>\n\n  <app-spinner *ngIf=\"!(recommendation$ | async)\"></app-spinner>\n</ng-container>\n","export const tabs = [\n  { label: 'All Time', timeRange: 'long_term', status: 'is-active' },\n  { label: 'Last 6 Months', timeRange: 'medium_term', status: '' },\n  { label: 'Last 4 Weeks', timeRange: 'short_term', status: '' },\n];\n","import { Component, OnInit } from '@angular/core';\n\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { Dispatch } from '@ngxs-labs/dispatch-decorator';\n\nimport { TopArtistsActionsType } from '../../store/top-artists/actions.type';\nimport { TopArtistsSelectors } from '../../store/top-artists/selectors';\nimport { SpotifyModel } from '../../store/';\nimport { tabs } from './top-artists-util';\n\n@Component({\n  selector: 'app-top-artists',\n  templateUrl: './top-artists.component.html',\n  styleUrls: ['./top-artists.component.scss'],\n})\nexport class TopArtistsComponent implements OnInit {\n  constructor(private store: Store) {}\n\n  $tabs = tabs;\n  @Dispatch() fetchTopArtists = (qry = null) =>\n    new TopArtistsActionsType.FetchTopArtists(qry);\n\n  @Select(TopArtistsSelectors.fetchTopArtists) topArtists$: Observable<\n    SpotifyModel\n  >;\n\n  ngOnInit(): void {\n    const { top_artists } = this.store.snapshot();\n    if (top_artists === null) {\n      const local = JSON.parse(localStorage.getItem('top-artists'));\n      if (!local || local.time_range === 'undefined') {\n        this.fetchTopArtists({ limit: 20, time_range: 'long_term' });\n        this.setActiveTab('long_term');\n      } else {\n        this.fetchTopArtists({ limit: 20, time_range: local.time_range });\n        this.setActiveTab(local.time_range);\n      }\n    }\n  }\n\n  timeRange(time_range) {\n    this.fetchTopArtists({ limit: 20, time_range });\n    this.setActiveTab(time_range);\n  }\n\n  setActiveTab(time_range: string) {\n    this.$tabs.map((tab) => {\n      tab.status = tab.timeRange === time_range ? 'is-active' : '';\n      return tab;\n    });\n  }\n}\n","<ng-container>\n  <div class=\"head-body\">\n    <div class=\"content-title\">\n      <h2>TOP ARTIST</h2>\n      <p>Collection Of Your Top Artists</p>\n    </div>\n    <div class=\"content-feature\"></div>\n  </div>\n\n  <div class=\"content-body artist-content--body\">\n    <div class=\"tabs is-right\">\n      <ul>\n        <li *ngFor=\"let range of $tabs\" [class]=\"range.status\">\n          <a (click)=\"timeRange(range.timeRange)\">{{ range.label }}</a>\n        </li>\n      </ul>\n    </div>\n    <app-grid-playlist\n      [artists]=\"(topArtists$ | async)?.items\"\n    ></app-grid-playlist>\n  </div>\n  <app-token-expiration-modal\n    (onRefreshToken)=\"ngOnInit()\"\n  ></app-token-expiration-modal>\n\n  <app-spinner *ngIf=\"!(topArtists$ | async)\"></app-spinner>\n</ng-container>\n","export const tabs = [\n  { label: 'All Time', timeRange: 'long_term', status: 'is-active' },\n  { label: 'Last 6 Months', timeRange: 'medium_term', status: '' },\n  { label: 'Last 4 Weeks', timeRange: 'short_term', status: '' },\n];\n","import { Component, OnInit, Query } from '@angular/core';\n\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { Dispatch } from '@ngxs-labs/dispatch-decorator';\n\nimport { TopTracksActionsType } from '../../store/top-tracks/actions.type';\nimport { TopTracksSelectors } from '../../store/top-tracks/selectors';\n\nimport { SpotifyModel } from '../../store/';\nimport { tabs } from './top-tracks-util';\n\n@Component({\n  selector: 'app-top-tracks',\n  templateUrl: './top-tracks.component.html',\n  styleUrls: ['./top-tracks.component.scss'],\n})\nexport class TopTracksComponent implements OnInit {\n  $tabs = tabs;\n\n  constructor(private store: Store) {}\n\n  @Dispatch() fetchTopTracks = (qry = null) =>\n    new TopTracksActionsType.FetchTopTracks(qry);\n\n  @Select(TopTracksSelectors.fetchTopTracks) topTracks$: Observable<\n    SpotifyModel\n  >;\n\n  ngOnInit(): void {\n    const { top_tracks } = this.store.snapshot();\n\n    if (top_tracks === null) {\n      const local = JSON.parse(localStorage.getItem('top-tracks'));\n      if (!local || local.time_range === 'undefined') {\n        this.fetchTopTracks({ limit: 20, time_range: 'long_term' });\n        this.setActiveTab('long_term');\n      } else {\n        this.fetchTopTracks({ limit: 20, time_range: local.time_range });\n        this.setActiveTab(local.time_range);\n      }\n    }\n  }\n\n  timeRange(time_range) {\n    this.fetchTopTracks({ limit: 20, time_range });\n    this.setActiveTab(time_range);\n  }\n\n  setActiveTab(time_range: string) {\n    this.$tabs.map((tab) => {\n      tab.status = tab.timeRange === time_range ? 'is-active' : '';\n      return tab;\n    });\n  }\n}\n","<ng-container>\n  <div class=\"head-body\">\n    <div class=\"content-title\">\n      <h2>TOP TRACKS</h2>\n      <p>Collection Of Your Most Played Tracks</p>\n    </div>\n    <div class=\"content-feature\"></div>\n  </div>\n\n  <div class=\"content-body\">\n    <div class=\"tabs is-right\">\n      <ul>\n        <li *ngFor=\"let range of $tabs\" [class]=\"range.status\">\n          <a (click)=\"timeRange(range.timeRange)\">{{ range.label }}</a>\n        </li>\n      </ul>\n    </div>\n    <app-track-item\n      [track]=\"item\"\n      *ngFor=\"let item of (topTracks$ | async)?.items\"\n      class=\"app-track-item\"\n    >\n    </app-track-item>\n\n    <app-token-expiration-modal\n      (onRefreshToken)=\"ngOnInit()\"\n    ></app-token-expiration-modal>\n  </div>\n\n  <app-spinner *ngIf=\"!(topTracks$ | async)\"></app-spinner>\n</ng-container>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { environment } from 'src/environments/environment';\nimport { httpOptions } from '../index';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ArtistPreviewService {\n  constructor(private http: HttpClient) {}\n\n  fetchArtistPreview(artistId: string) {\n    return this.http.get<any[]>(\n      `${environment.spotify_api}artists/${artistId}`\n      // { ...httpOptions }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { environment } from 'src/environments/environment';\nimport { httpOptions } from '../index';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ArtistTopTracksService {\n  constructor(private http: HttpClient) {}\n\n  fetchTopTracks(artistId: string) {\n    const country = localStorage.getItem('country');\n    return this.http.get<any[]>(\n      `${environment.spotify_api}artists/${artistId}/top-tracks?country=${country}`\n      // { ...httpOptions }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { environment } from 'src/environments/environment';\nimport { httpOptions } from '../index';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AudioFeatureService {\n  constructor(private http: HttpClient) {}\n\n  fetchAudioFeature(trackId: string) {\n    return this.http.get<any>(\n      `${environment.spotify_api}audio-features/${trackId}`\n      // { ...httpOptions }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { environment } from 'src/environments/environment';\nimport { httpOptions, setQueryParams } from '../index';\nimport { QueryParams } from '../../store';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FollowService {\n  constructor(private http: HttpClient) {}\n\n  fetchFollowArtists(queryParams: QueryParams = null) {\n    const $queryString = setQueryParams(queryParams);\n\n    return this.http.get<any[]>(\n      `${environment.spotify_api}me/following?type=artist&${$queryString}`\n      // { ...httpOptions }\n    );\n  }\n\n  fetchFollowTracks(queryParams: QueryParams = null) {\n    const $queryString = setQueryParams(queryParams);\n\n    return this.http.get<any[]>(\n      `${environment.spotify_api}me/following?type=tracks&${$queryString}`\n      // { ...httpOptions }\n    );\n  }\n\n  followArtist(artistId: string) {\n    return this.http.put<any>(\n      `${environment.spotify_api}me/following?type=artist&ids=${artistId}`,\n      {}\n      // { ...httpOptions }\n    );\n  }\n\n  unFollowArtist(artistId: string) {\n    return this.http.delete<any>(\n      `${environment.spotify_api}me/following?type=artist&ids=${artistId}`\n      // { ...httpOptions }\n    );\n  }\n  // default\n  followPlaylist(playlistId: string) {\n    return this.http.put<any>(\n      `${environment.spotify_api}playlists/${playlistId}/followers`,\n      {}\n      // { ...httpOptions }\n    );\n  }\n\n  unFollowPlaylist(playlistId: string) {\n    return this.http.delete<any>(\n      `${environment.spotify_api}playlists/${playlistId}/followers`\n      // { ...httpOptions }\n    );\n  }\n\n  // active user\n  unFollowUserPlaylist(userId: string, playlistId: string) {\n    return this.http.delete<any>(\n      `${environment.spotify_api}users/${userId}/playlists/${playlistId}/followers`\n      // { ...httpOptions }\n    );\n  }\n\n  followUserPlaylist(\n    userId: string,\n    playlistId: string,\n    isPublic: boolean = false\n  ) {\n    return this.http.put<any>(\n      `${environment.spotify_api}users/${userId}/playlists/${playlistId}/followers`,\n      { publid: isPublic }\n      // { ...httpOptions }\n    );\n  }\n}\n","import { QueryParams } from '../store';\nimport Swal from 'sweetalert2';\n\nexport const httpOptions = {\n  headers: {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${localStorage.getItem('access_token')}`,\n  },\n};\n\nexport const setQueryParams = (queryParams: QueryParams = null) => {\n  const $query = [];\n  if (queryParams !== null) {\n    for (const [key, value] of Object.entries(queryParams)) {\n      $query.push(`${key}=${value}`.replace(/,/g, '__'));\n    }\n\n    // if (queryParams.limit) $query.push(`limit=${queryParams.limit}`);\n    // if (queryParams.offset) $query.push(`offset=${queryParams.offset}`);\n    // if (queryParams.time_range)\n    // $query.push(`time_range=${queryParams.time_range}`);\n  }\n\n  return $query.toString().replace(/,/g, '&').replace(/__/g, ',');\n};\n\nexport const msToTime = (s) => {\n  let ms = s % 1000;\n  s = (s - ms) / 1000;\n  let secs = s % 60;\n  s = (s - secs) / 60;\n  let mins = s % 60;\n  let hrs = (s - mins) / 60;\n\n  // return hrs + ':' + mins + ':' + secs + '.' + ms;\n  return (mins < 10 ? '0' + mins : mins) + ':' + secs;\n};\n\nexport const Toast = () =>\n  Swal.mixin({\n    toast: true,\n    position: 'top-end',\n    showConfirmButton: false,\n    timer: 3000,\n    timerProgressBar: true,\n    onOpen: (toast) => {\n      toast.addEventListener('mouseenter', Swal.stopTimer);\n      toast.addEventListener('mouseleave', Swal.resumeTimer);\n    },\n  });\n\nexport const SwalFire = (callback, options) => {\n  Swal.fire({\n    ...options,\n    imageWidth: 200,\n    imageHeight: 200,\n    confirmButtonColor: '#1db954',\n    cancelButtonColor: '#222a2e',\n    showCancelButton: true,\n  }).then(callback);\n};\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport Axios from 'axios-observable';\n\nimport { environment } from 'src/environments/environment';\nimport { httpOptions, setQueryParams } from '../index';\nimport { QueryParams } from '../../store';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MyPlaylistService {\n  axios = Axios;\n\n  constructor(private http: HttpClient) {}\n\n  fetchPlaylist(queryParams: QueryParams = null) {\n    const $queryString = setQueryParams(queryParams);\n\n    return this.http.get<any>(\n      `${environment.spotify_api}me/playlists?${$queryString}`\n      // { ...httpOptions }\n    );\n  }\n\n  fetchPreviewPlaylist(playlistId: string) {\n    return this.http.get<any>(\n      `${environment.spotify_api}playlists/${playlistId}`\n      // { ...httpOptions }\n    );\n  }\n\n  editPlaylistDetails(playlistId: string, reqBody: any) {\n    return this.http.put<any>(\n      `${environment.spotify_api}playlists/${playlistId}`,\n      reqBody\n      // { ...httpOptions }\n    );\n  }\n\n  getRecommendation(queryParams: QueryParams) {\n    const $queryString = setQueryParams(queryParams);\n\n    return this.http.get<any>(\n      `${environment.spotify_api}recommendations?${$queryString}`\n      // { ...httpOptions }\n    );\n  }\n\n  createPlaylist(userId: string, params: any) {\n    return this.http.post<any>(\n      `${environment.spotify_api}users/${userId}/playlists`,\n      params\n      // { ...httpOptions }\n    );\n  }\n\n  pushTracksToPlaylist(playlistId: string, uris: string) {\n    return this.http.post<any>(\n      `${environment.spotify_api}playlists/${playlistId}/tracks?uris=${uris}`,\n      {}\n      // { ...httpOptions }\n    );\n  }\n\n  removePlaylistItem(playlistId: string, tracks: any) {\n    return this.axios.delete(\n      `${environment.spotify_api}playlists/${playlistId}/tracks`,\n      {\n        ...httpOptions,\n        data: tracks,\n      }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { environment } from 'src/environments/environment';\nimport { httpOptions } from '../index';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RelatedArtistsService {\n  constructor(private http: HttpClient) {}\n\n  fetchRelatedArtists(artistId: string) {\n    return this.http.get<any[]>(\n      `${environment.spotify_api}artists/${artistId}/related-artists`\n      // { ...httpOptions }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { environment } from 'src/environments/environment';\nimport { httpOptions, setQueryParams } from '../index';\nimport { QueryParams } from '../../store';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TopArtistsService {\n  constructor(private http: HttpClient) {}\n\n  fetchTopArtists(queryParams: QueryParams = null) {\n    const $queryString = setQueryParams(queryParams);\n\n    return this.http.get<any[]>(\n      `${environment.spotify_api}me/top/artists?${$queryString}`\n      // { ...httpOptions }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { environment } from 'src/environments/environment';\nimport { httpOptions, setQueryParams } from '../index';\nimport { QueryParams } from '../../store';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TopTracksService {\n  constructor(private http: HttpClient) {}\n\n  fetchTopTracks(queryParams: QueryParams = null) {\n    const $queryString = setQueryParams(queryParams);\n\n    return this.http.get<any[]>(\n      `${environment.spotify_api}me/top/tracks?${$queryString}`\n      // { ...httpOptions }\n    );\n  }\n}\n","import {\n  NgModule,\n  NO_ERRORS_SCHEMA,\n  CUSTOM_ELEMENTS_SCHEMA,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { LazyLoadImageModule } from 'ng-lazyload-image';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpInterceptorProviders } from './interceptors/index';\n\nimport { LoginComponent } from './pages/login/login.component';\nimport { CallbackComponent } from './pages/callback/callback.component';\nimport { MainComponent } from './pages/main/main.component';\n\nimport { TrackItemComponent } from './components/track-item/track-item.component';\nimport { GridPlaylistComponent } from './components/grid-playlist/grid-playlist.component';\nimport { PlaylistItemComponent } from './components/playlist-item/playlist-item.component';\nimport { FigureImageComponent } from './components/figure-image/figure-image.component';\nimport { FollowBtnComponent } from './components/follow-btn/follow-btn.component';\nimport { PlaylistTrackComponent } from './components/playlist-track/playlist-track.component';\nimport { FollowBtnPlaylistComponent } from './components/follow-btn-playlist/follow-btn-playlist.component';\nimport { EditPlaylistBtnComponent } from './components/edit-playlist-btn/edit-playlist-btn.component';\nimport { RecommendationFormComponent } from './components/recommendation-form/recommendation-form.component';\nimport { TokenExpirationModalComponent } from './components/token-expiration-modal/token-expiration-modal.component';\nimport { SpinnerComponent } from './components/spinner/spinner.component';\nimport { BuiltWithComponent } from './components/built-with/built-with.component';\n\n@NgModule({\n  declarations: [\n    MainComponent,\n    // AudioFeatureComponent,\n    LoginComponent,\n    CallbackComponent,\n    TrackItemComponent,\n    GridPlaylistComponent,\n    PlaylistItemComponent,\n    FigureImageComponent,\n    FollowBtnComponent,\n    PlaylistTrackComponent,\n    FollowBtnPlaylistComponent,\n    EditPlaylistBtnComponent,\n    RecommendationFormComponent,\n    TokenExpirationModalComponent,\n    SpinnerComponent,\n    BuiltWithComponent,\n  ],\n  exports: [\n    TrackItemComponent,\n    GridPlaylistComponent,\n    PlaylistItemComponent,\n    FigureImageComponent,\n    FollowBtnComponent,\n    LazyLoadImageModule,\n    PlaylistTrackComponent,\n    FollowBtnPlaylistComponent,\n    EditPlaylistBtnComponent,\n    RecommendationFormComponent,\n    NgxPaginationModule,\n    TokenExpirationModalComponent,\n    SpinnerComponent,\n    BuiltWithComponent,\n  ],\n  imports: [\n    CommonModule,\n    FontAwesomeModule,\n    RouterModule,\n    LazyLoadImageModule,\n    NgxPaginationModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  providers: [HttpInterceptorProviders],\n  schemas: [NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class SharedModule {}\n","export namespace ArtistPreviewActionsType {\n  export class FetchArtistPreview {\n    static readonly type = '[artist-preview] fetch list';\n    constructor(public artistId: string) {}\n  }\n}\n","import { Selector } from '@ngxs/store';\nimport { ArtistPreviewModel } from './model';\nimport { ArtistPreviewState } from './state';\n\nexport class ArtistPreviewSelectors {\n  @Selector([ArtistPreviewState])\n  public static fetchArtistPreview(state: ArtistPreviewModel) {\n    return state;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { State, StateContext, Action } from '@ngxs/store';\n\nimport { throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { ArtistPreviewService } from '../../services/artist-preview/artist-preview.service';\nimport { ArtistPreviewActionsType } from './actions.type';\nimport { ArtistPreviewModel } from './model';\n\nimport { AuthService } from '../../auth/auth.service';\n\n@State<ArtistPreviewModel>({\n  name: 'artist_preview',\n  defaults: null,\n})\n@Injectable()\nexport class ArtistPreviewState {\n  constructor(\n    private service: ArtistPreviewService,\n    private auth: AuthService\n  ) {}\n\n  @Action(ArtistPreviewActionsType.FetchArtistPreview)\n  fetchArtistPreview(\n    { getState, patchState }: StateContext<ArtistPreviewModel>,\n    { artistId }: ArtistPreviewActionsType.FetchArtistPreview\n  ) {\n    return this.service.fetchArtistPreview(artistId).pipe(\n      map((result: any) => {\n        patchState(result);\n      }),\n      catchError((error: any) => {\n        console.log('top-tracks', error);\n        // this.auth.authenticateUser();\n        return throwError(error);\n      })\n    );\n  }\n}\n","export namespace ArtistTopTracksActionsType {\n  export class FetchArtistTopTracks {\n    static readonly type = '[artist-top-tracks] fetch tracks';\n    constructor(public artistId: string) {}\n  }\n}\n","import { Selector } from '@ngxs/store';\nimport { ArtistTopTracksModel } from './model';\nimport { ArtistTopTracksState } from './state';\n\nexport class ArtistTopTracksSelectors {\n  @Selector([ArtistTopTracksState])\n  public static fetchTopTracks(state: ArtistTopTracksModel) {\n    return state;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { State, StateContext, Action } from '@ngxs/store';\n\nimport { throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { ArtistTopTracksService } from '../../services/artist-top-tracks/artist-top-tracks.service';\nimport { ArtistTopTracksActionsType } from './actions.type';\nimport { ArtistTopTracksModel } from './model';\n\nimport { AuthService } from '../../auth/auth.service';\n\n@State<ArtistTopTracksModel>({\n  name: 'artist_top_tracks',\n  defaults: null,\n})\n@Injectable()\nexport class ArtistTopTracksState {\n  constructor(\n    private service: ArtistTopTracksService,\n    private auth: AuthService\n  ) {}\n\n  @Action(ArtistTopTracksActionsType.FetchArtistTopTracks)\n  fetchTopTracks(\n    { getState, patchState }: StateContext<ArtistTopTracksModel>,\n    { artistId }: ArtistTopTracksActionsType.FetchArtistTopTracks\n  ) {\n    return this.service.fetchTopTracks(artistId).pipe(\n      map((result: any) => {\n        patchState(result);\n      }),\n      catchError((error: any) => {\n        console.log('top-tracks', error);\n        // this.auth.authenticateUser();\n        return throwError(error);\n      })\n    );\n  }\n}\n","import { SelectedTrackModel } from './model';\n\nexport namespace AudioFeatureActionsType {\n  export class FetchAudioFeature {\n    static readonly type = '[audio-feature]';\n    constructor(public track: SelectedTrackModel) {}\n  }\n}\n","import { Selector } from '@ngxs/store';\nimport { AudioFeatureModel } from './model';\nimport { AudioFeatureState } from './state';\n\nexport class AudioFeatureSelectors {\n  @Selector([AudioFeatureState])\n  public static fetchAudioFeature(state: AudioFeatureModel) {\n    return state;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { State, StateContext, Action } from '@ngxs/store';\n\nimport { throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { AudioFeatureService } from '../../services/audio-feature/audio-feature.service';\nimport { AudioFeatureActionsType } from './actions.type';\nimport { AudioFeatureModel } from './model';\n\nimport { AuthService } from '../../auth/auth.service';\n\n@State<AudioFeatureModel>({\n  name: 'audio_feature',\n  defaults: null,\n})\n@Injectable()\nexport class AudioFeatureState {\n  constructor(\n    private service: AudioFeatureService,\n    private auth: AuthService\n  ) {}\n\n  @Action(AudioFeatureActionsType.FetchAudioFeature)\n  fetchAudioFeature(\n    { getState, patchState }: StateContext<AudioFeatureModel>,\n    { track }: AudioFeatureActionsType.FetchAudioFeature\n  ) {\n    return this.service.fetchAudioFeature(track.id).pipe(\n      map((result: any) => {\n        patchState({\n          ...track,\n          feature: result,\n        });\n      }),\n      catchError((error: any) => {\n        console.log('current-user', error);\n        // this.auth.authenticateUser();\n        return throwError(error);\n      })\n    );\n  }\n}\n","export namespace CurrentUserActionsType {\n  export class FetchCurrentUser {\n    static readonly type = \"[current-user] fetch current\";\n  }\n}\n","import { Selector } from \"@ngxs/store\";\nimport { CurrentUserModel } from \"./model\";\nimport { CurrentUserState } from \"./state\";\n\nexport class CurrentUserSelectors {\n  @Selector([CurrentUserState])\n  public static fetchCurrentUser(state: CurrentUserModel) {\n    return state;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { State, StateContext, Action } from '@ngxs/store';\n\nimport { throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { AuthService } from '../../auth/auth.service';\nimport { CurrentUserActionsType } from './actions.type';\nimport { CurrentUserModel } from './model';\n\n@State<CurrentUserModel>({\n  name: 'current_user',\n  defaults: null,\n})\n@Injectable()\nexport class CurrentUserState {\n  constructor(private auth: AuthService) {}\n\n  @Action(CurrentUserActionsType.FetchCurrentUser)\n  fetchCurrentUser({ getState, patchState }: StateContext<CurrentUserModel>) {\n    const state$ = getState();\n\n    if (state$ == null) {\n      return this.auth.fetchCurrentUser().pipe(\n        map((result: any) => {\n          localStorage.setItem('country', result.country);\n          patchState(result);\n        }),\n        catchError((error: any) => {\n          console.log('current-user', error);\n          // this.auth.authenticateUser();\n          return throwError(error);\n        })\n      );\n    }\n  }\n}\n","import { QueryParams } from '../index';\n\nexport namespace FollowActionsType {\n  export class FetchFollowArtists {\n    static readonly type = '[follow-artists] fetch collection';\n    constructor(public queryParams: QueryParams = null) {}\n  }\n\n  export class FetchFollowTracks {\n    static readonly type = '[follow-tracks] fetch collection';\n    constructor(public queryParams: QueryParams = null) {}\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { State, StateContext, Action } from '@ngxs/store';\n\nimport { throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { FollowService } from '../../services/follow/follow.service';\nimport { FollowActionsType } from './actions.type';\nimport { FollowArtistModel } from './artists-model';\n\nimport { AuthService } from '../../auth/auth.service';\n\n@State<FollowArtistModel>({\n  name: 'follow_artists',\n  defaults: null,\n})\n@Injectable()\nexport class FollowArtistsState {\n  constructor(private service: FollowService, private auth: AuthService) {}\n\n  @Action(FollowActionsType.FetchFollowArtists)\n  fetchFollowArtists(\n    { getState, patchState }: StateContext<FollowArtistModel>,\n    { queryParams }: FollowActionsType.FetchFollowArtists\n  ) {\n    const state$ = getState();\n\n    if (state$ == null) {\n      return this.service.fetchFollowArtists(queryParams).pipe(\n        map((result: any) => {\n          patchState(result);\n        }),\n        catchError((error: any) => {\n          console.log('top-tracks', error);\n          // this.auth.authenticateUser();\n          return throwError(error);\n        })\n      );\n    }\n  }\n}\n","import { Selector } from '@ngxs/store';\nimport { FollowArtistModel } from './artists-model';\nimport { FollowArtistsState } from './artists-state';\n\nexport class FollowSelectors {\n  @Selector([FollowArtistsState])\n  public static fetchFollowArtists(state: FollowArtistModel) {\n    return state;\n  }\n}\n","import { CurrentUserState } from './current-user/state';\nimport { TopTracksState } from './top-tracks/state';\nimport { AudioFeatureState } from './audio-feature/state';\nimport { TopArtistsState } from './top-artists/state';\nimport { RelatedArtistsState } from './related-artists/state';\nimport { ArtistPreviewState } from './artist-preview/state';\nimport { ArtistTopTracksState } from './artist-top-tracks/state';\nimport { MyPlaylistState } from './my-playlist/state';\nimport { FollowArtistsState } from './follow/artists-state';\nimport { PlaylistPreviewState } from './playlist-preview/state';\nimport { RecommendationState } from './recommendation/state';\nimport { InternalState } from './internal/state';\n\nexport const Store = [\n  CurrentUserState,\n  TopTracksState,\n  AudioFeatureState,\n  TopArtistsState,\n  RelatedArtistsState,\n  ArtistPreviewState,\n  ArtistTopTracksState,\n  MyPlaylistState,\n  FollowArtistsState,\n  PlaylistPreviewState,\n  RecommendationState,\n  InternalState,\n];\n\nexport interface SpotifyModel {\n  items: Array<any>;\n  total: number;\n  limit: number;\n  offset: number;\n  href: string;\n  previous: string;\n  next: string;\n}\n\nexport interface QueryParams {\n  time_range?: string;\n  limit?: number;\n  offset?: number;\n  market?: string;\n  seed_artists?: string;\n  seed_tracks?: string;\n  seed_genres?: string;\n}\n\nexport interface ImageModel {\n  height: number;\n  url: string;\n  width: number;\n}\n\nexport interface OwnerModel {\n  display_name?: string;\n  name?: string;\n  external_urls: {\n    spotify: string;\n  };\n  href: string;\n  id: string;\n  type: string;\n  uri: string;\n}\n","import { InternalModel } from './model';\n\nexport namespace InternalActionsType {\n  export class setInternal {\n    static readonly type = '[internal-action] set collection';\n    constructor(public params: InternalModel) {}\n  }\n}\n","import { Selector } from '@ngxs/store';\nimport { InternalState } from './state';\nimport { InternalModel } from './model';\n\nexport class InternalSelectors {\n  @Selector([InternalState])\n  public static fetchInternal(state: InternalModel) {\n    return state;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { State, StateContext, Action } from '@ngxs/store';\n\n// import { throwError } from 'rxjs';\n// import { map, catchError } from 'rxjs/operators';\n\nimport { InternalActionsType } from './actions.type';\nimport { InternalModel } from './model';\n\n// import { AuthService } from '../../auth/auth.service';\n\n@State<InternalModel>({\n  name: 'internal',\n  defaults: null,\n})\n@Injectable()\nexport class InternalState {\n  constructor() {}\n\n  @Action(InternalActionsType.setInternal)\n  setInternal(\n    { getState, patchState }: StateContext<InternalModel>,\n    { params }: InternalActionsType.setInternal\n  ) {\n    const state$ = getState();\n\n    patchState({ ...state$, ...params });\n  }\n}\n","import { QueryParams } from '../index';\n\nexport namespace MyPlaylistActionsType {\n  export class FetchPlaylist {\n    static readonly type = '[my-playlist] fetch collection';\n    constructor(public queryParams: QueryParams = null) {}\n  }\n}\n","import { Selector } from '@ngxs/store';\nimport { SpotifyModel } from '../index';\nimport { MyPlaylistState } from './state';\n\nexport class MyPlaylistSelectors {\n  @Selector([MyPlaylistState])\n  public static fetchPlaylist(state: SpotifyModel) {\n    return state;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { State, StateContext, Action } from '@ngxs/store';\n\nimport { throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { MyPlaylistService } from '../../services/my-playlist/my-playlist.service';\nimport { MyPlaylistActionsType } from './actions.type';\nimport { SpotifyModel } from '../index';\n\nimport { AuthService } from '../../auth/auth.service';\n\n@State<SpotifyModel>({\n  name: 'my_playlist',\n  defaults: null,\n})\n@Injectable()\nexport class MyPlaylistState {\n  constructor(private service: MyPlaylistService, private auth: AuthService) {}\n\n  @Action(MyPlaylistActionsType.FetchPlaylist)\n  fetchPlaylist(\n    { getState, patchState }: StateContext<SpotifyModel>,\n    { queryParams }: MyPlaylistActionsType.FetchPlaylist\n  ) {\n    const state$ = getState();\n\n    if (state$ == null) {\n      return this.service.fetchPlaylist(queryParams).pipe(\n        map((result: any) => {\n          patchState(result);\n        }),\n        catchError((error: any) => {\n          console.log('top-tracks', error);\n          // this.auth.authenticateUser();\n          return throwError(error);\n        })\n      );\n    }\n  }\n}\n","export namespace PlaylistPreviewActionsType {\n  export class FetchPlaylistPreview {\n    static readonly type = '[playlist-preview] preview';\n    constructor(public playlistId: string) {}\n  }\n}\n","import { Selector } from '@ngxs/store';\nimport { PlaylistPreviewModel } from './model';\nimport { PlaylistPreviewState } from './state';\n\nexport class PlaylistPreviewSelectors {\n  @Selector([PlaylistPreviewState])\n  public static fetchPlaylistPreview(state: PlaylistPreviewModel) {\n    return state;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { State, StateContext, Action } from '@ngxs/store';\n\nimport { throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { MyPlaylistService } from '../../services/my-playlist/my-playlist.service';\nimport { PlaylistPreviewActionsType } from './actions.type';\nimport { PlaylistPreviewModel } from './model';\n\nimport { AuthService } from '../../auth/auth.service';\n\n@State<PlaylistPreviewModel>({\n  name: 'playlist_preview',\n  defaults: null,\n})\n@Injectable()\nexport class PlaylistPreviewState {\n  constructor(private service: MyPlaylistService, private auth: AuthService) {}\n\n  @Action(PlaylistPreviewActionsType.FetchPlaylistPreview)\n  fetchPlaylistPreview(\n    { getState, patchState }: StateContext<PlaylistPreviewModel>,\n    { playlistId }: PlaylistPreviewActionsType.FetchPlaylistPreview\n  ) {\n    const state$ = getState();\n\n    if (state$ == null) {\n      return this.service.fetchPreviewPlaylist(playlistId).pipe(\n        map((result: any) => {\n          patchState(result);\n        }),\n        catchError((error: any) => {\n          console.log('playlist-preview', error);\n          // this.auth.authenticateUser();\n          return throwError(error);\n        })\n      );\n    }\n  }\n}\n","import { QueryParams } from '../index';\n\nexport namespace RecommendationActionsType {\n  export class FetchRecommendation {\n    static readonly type = '[playlist-recommendation] fetch list';\n    constructor(public queryParams: QueryParams) {}\n  }\n}\n","import { Selector } from '@ngxs/store';\nimport { RecommendationModel } from './model';\nimport { RecommendationState } from './state';\n\nexport class RecommendationSelectors {\n  @Selector([RecommendationState])\n  public static fetchRecommendation(state: RecommendationModel) {\n    return state;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { State, StateContext, Action } from '@ngxs/store';\n\nimport { throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { RecommendationActionsType } from './actions.type';\nimport { RecommendationModel } from './model';\nimport { MyPlaylistService } from '../../services/my-playlist/my-playlist.service';\n\n@State<RecommendationModel>({\n  name: 'recommendation',\n  defaults: null,\n})\n@Injectable()\nexport class RecommendationState {\n  constructor(private service: MyPlaylistService) {}\n\n  @Action(RecommendationActionsType.FetchRecommendation)\n  fetchRecommendation(\n    { getState, patchState }: StateContext<RecommendationModel>,\n    { queryParams }: RecommendationActionsType.FetchRecommendation\n  ) {\n    const state$ = getState();\n\n    if (state$ == null) {\n      return this.service.getRecommendation(queryParams).pipe(\n        map((result: any) => {\n          patchState(result);\n        }),\n        catchError((error: any) => {\n          console.log('get-recommendation', error);\n          // this.auth.authenticateUser();\n          return throwError(error);\n        })\n      );\n    }\n  }\n}\n","export namespace RelatedArtistActionsType {\n  export class FetchRelatedArtist {\n    static readonly type = '[related-artists] fetch list';\n    constructor(public artistId: string) {}\n  }\n}\n","import { Selector } from '@ngxs/store';\nimport { RelatedArtistsModel } from './model';\nimport { RelatedArtistsState } from './state';\n\nexport class RelatedArtistsSelectors {\n  @Selector([RelatedArtistsState])\n  public static fetchTopArtists(state: RelatedArtistsModel) {\n    return state;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { State, StateContext, Action } from '@ngxs/store';\n\nimport { throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { RelatedArtistsService } from '../../services/related-artists/related-artists.service';\nimport { RelatedArtistActionsType } from './actions.type';\nimport { RelatedArtistsModel } from './model';\n\nimport { AuthService } from '../../auth/auth.service';\n\n@State<RelatedArtistsModel>({\n  name: 'related_artists',\n  defaults: null,\n})\n@Injectable()\nexport class RelatedArtistsState {\n  constructor(\n    private service: RelatedArtistsService,\n    private auth: AuthService\n  ) {}\n\n  @Action(RelatedArtistActionsType.FetchRelatedArtist)\n  fetchRelatedArtists(\n    { getState, patchState }: StateContext<RelatedArtistsModel>,\n    { artistId }: RelatedArtistActionsType.FetchRelatedArtist\n  ) {\n    return this.service.fetchRelatedArtists(artistId).pipe(\n      map((result: any) => {\n        patchState(result);\n      }),\n      catchError((error: any) => {\n        console.log('top-tracks', error);\n        // this.auth.authenticateUser();\n        return throwError(error);\n      })\n    );\n  }\n}\n","import { QueryParams } from '../index';\n\nexport namespace TopArtistsActionsType {\n  export class FetchTopArtists {\n    static readonly type = '[top-artists] fetch list';\n    constructor(public queryParams: QueryParams = null) {}\n  }\n}\n","import { Selector } from '@ngxs/store';\nimport { SpotifyModel } from '../index';\nimport { TopArtistsState } from './state';\n\nexport class TopArtistsSelectors {\n  @Selector([TopArtistsState])\n  public static fetchTopArtists(state: SpotifyModel) {\n    return state;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { State, StateContext, Action } from '@ngxs/store';\n\nimport { throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { TopArtistsService } from '../../services/top-artists/top-artists.service';\nimport { TopArtistsActionsType } from './actions.type';\nimport { SpotifyModel } from '../index';\n\nimport { AuthService } from '../../auth/auth.service';\n\n@State<SpotifyModel>({\n  name: 'top_artists',\n  defaults: null,\n})\n@Injectable()\nexport class TopArtistsState {\n  constructor(private service: TopArtistsService, private auth: AuthService) {}\n\n  @Action(TopArtistsActionsType.FetchTopArtists)\n  fetchTopArtists(\n    { getState, patchState }: StateContext<SpotifyModel>,\n    { queryParams }: TopArtistsActionsType.FetchTopArtists\n  ) {\n    const state$ = getState();\n    const tp = JSON.parse(localStorage.getItem('top-artists'));\n\n    if (\n      state$ == null ||\n      tp.time_range === 'undefined' ||\n      tp.time_range !== queryParams?.time_range\n    ) {\n      return this.service.fetchTopArtists(queryParams).pipe(\n        map((result: any) => {\n          patchState(result);\n          localStorage.setItem(\n            'top-artists',\n            JSON.stringify({ time_range: queryParams?.time_range })\n          );\n        }),\n        catchError((error: any) => {\n          console.log('top-tracks', error);\n          // this.auth.authenticateUser();\n          return throwError(error);\n        })\n      );\n    }\n  }\n}\n","import { QueryParams } from '../index';\n\nexport namespace TopTracksActionsType {\n  export class FetchTopTracks {\n    static readonly type = '[top-tracks] fetch list';\n    constructor(public queryParams: QueryParams = null) {}\n  }\n}\n","import { Selector } from '@ngxs/store';\nimport { SpotifyModel } from '../index';\nimport { TopTracksState } from './state';\n\nexport class TopTracksSelectors {\n  @Selector([TopTracksState])\n  public static fetchTopTracks(state: SpotifyModel) {\n    return state;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { State, StateContext, Action } from '@ngxs/store';\n\nimport { throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nimport { TopTracksService } from '../../services/top-tracks/top-tracks.service';\nimport { TopTracksActionsType } from './actions.type';\nimport { SpotifyModel } from '../index';\n\nimport { AuthService } from '../../auth/auth.service';\n\n@State<SpotifyModel>({\n  name: 'top_tracks',\n  defaults: null,\n})\n@Injectable()\nexport class TopTracksState {\n  constructor(private service: TopTracksService, private auth: AuthService) {}\n\n  @Action(TopTracksActionsType.FetchTopTracks)\n  fetchTopTracks(\n    { getState, patchState }: StateContext<SpotifyModel>,\n    { queryParams }: TopTracksActionsType.FetchTopTracks\n  ) {\n    const state$ = getState();\n    const tp = JSON.parse(localStorage.getItem('top-tracks'));\n\n    if (\n      state$ == null ||\n      tp.time_range === 'undefined' ||\n      tp.time_range !== queryParams?.time_range\n    ) {\n      return this.service.fetchTopTracks(queryParams).pipe(\n        map((result: any) => {\n          patchState(result);\n          localStorage.setItem(\n            'top-tracks',\n            JSON.stringify({ time_range: queryParams?.time_range })\n          );\n        }),\n        catchError((error: any) => {\n          console.log('top-tracks', error);\n          // this.auth.authenticateUser();\n          return throwError(error);\n        })\n      );\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  client_id: 'befabd15af504b89ada330c754977416', // Your client id\n  client_secret: 'e5cc8b81b2ab4732b6c3f7fef4eb0787', // Your secret\n  redirect_uri: 'http://localhost:4200/callback', // Your redirect uri\n  spotify_api: 'https://api.spotify.com/v1/',\n  spotify_api_token: 'https://accounts.spotify.com/api/token',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'sweetalert2/src/sweetalert2.scss';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"],"sourceRoot":"webpack:///"}